import _extends from '@babel/runtime/helpers/extends';
import * as React from 'react';
import Svg, { Path, Circle, G, Rect, Ellipse } from 'react-native-svg';

const fontWidth = {
  thin: 1,
  medium: 1.5,
  bold: 2,
};

const SvgAbacus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55.52v18.14H2.46V.52M1.5 18.66h21v3.82h-21zM2.45 2.43h19.1M6.27.52v3.82M9.14.52v3.82M12 .52v3.82M2.45 8.16h19.1M10.09 6.25v3.82M12.95 6.25v3.82M17.73 6.25v3.82M2.45 13.89h19.1M6.27 11.98v3.82M9.14 11.98v3.82M15.82 11.98v3.82"
  }));
};

const SvgAccountArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 16.32,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48V23a4.3 4.3 0 0 1 4.3-4.3 4.3 4.3 0 0 1 4.29 4.3v.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 3.91,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 11.07v-.48A4.29 4.29 0 0 1 18.2 6.3a4.29 4.29 0 0 1 4.3 4.29v.48M15.7 15.72l2.98-2.97 2.98 2.97",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 13v2.86A5.73 5.73 0 0 1 13 21.57M8.3 8.32 5.32 11.3 2.34 8.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 11.07V8.2a5.72 5.72 0 0 1 5.73-5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAccountWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.01,
    cy: 13.12,
    r: 1.8,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 1.49h21.1v21.1H1.46z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.56 7.25H1.46V1.49h21.1v5.76zM4.34 4.37h1.91M8.17 4.37h1.92M12.01 4.37h1.92M14 15.76a2.88 2.88 0 0 0-4.91 2v1h5.76v-1a2.88 2.88 0 0 0-.85-2Z"
  })));
};

const SvgAccount = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.25,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 23.48.37-2.05A10.3 10.3 0 0 1 12 13a10.3 10.3 0 0 1 10.13 8.45l.37 2.05",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAcorn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 13H6.27a1.91 1.91 0 0 1-1.91-1.9 5.73 5.73 0 0 1 5.73-5.73h3.82a5.73 5.73 0 0 1 5.73 5.73 1.91 1.91 0 0 1-1.91 1.9ZM15.82 1.5A3.82 3.82 0 0 0 12 5.32M18.68 13c0 5.28-3 9.55-6.68 9.55S5.32 18.23 5.32 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAddChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12ZM8.2 12h7.6M12 8.2v7.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAddChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.16v7.64a2.86 2.86 0 0 1-2.86 2.86h-1.91v2.86l-5.73-2.86H4.36A2.86 2.86 0 0 1 1.5 15.8V8.16A2.86 2.86 0 0 1 4.36 5.3h11.46a2.86 2.86 0 0 1 2.86 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84h1A2.86 2.86 0 0 0 22.5 12V4.34a2.86 2.86 0 0 0-2.86-2.86H8.18a2.86 2.86 0 0 0-2.86 2.86v1M6.27 11.98h7.64M10.09 8.16v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAddComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 10.07h9.54M12 5.3v9.54M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgAddComments = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 5.3H5.32A3.81 3.81 0 0 0 1.5 9.11v5.73a3.82 3.82 0 0 0 3.82 3.82h1.91l2.86 2.86L13 18.66h1.91a3.82 3.82 0 0 0 3.82-3.82V9.11a3.81 3.81 0 0 0-3.87-3.81Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84A3.82 3.82 0 0 0 22.5 11V5.3a3.82 3.82 0 0 0-3.82-3.82H9.14A3.82 3.82 0 0 0 5.32 5.3M6.27 11.98h7.64M10.09 8.16v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAddFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 14.86h9.54M12 10.09v9.55M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgAddMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 10.07h7.64M12 6.25v7.64M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgAddMessages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.95h5.73M14.86 9.09v5.73M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAdult18 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.45 19.42a10.5 10.5 0 1 1 0-14.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 11.07,
    y: 8.18,
    width: 4.77,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 11.07,
    y: 12,
    width: 4.77,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.25 7.23v8.59M5.34 15.82h3.82M5.34 9.14H8.2M17.75 12h5.73M20.61 9.14v5.72"
  }));
};

const SvgAeroplane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 8.27,
    y: 10.17,
    width: 7.47,
    height: 9.33,
    rx: 3.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.13 13.9h3.74M.8 15.77h7.47M15.73 15.77h7.47"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.07,
    cy: 17.17,
    r: 0.47,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.93,
    cy: 17.17,
    r: 0.47,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.53 11.1h-4.07M9.54 11.1H5.47M12 5.5v4.67"
  }));
};

const SvgAirConditioner = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v7.64A1.9 1.9 0 0 1 20.59 13h-2.86v-2.91H6.27V13H3.41a1.9 1.9 0 0 1-1.91-1.9V3.41A1.9 1.9 0 0 1 3.41 1.5h17.18a1.9 1.9 0 0 1 1.91 1.91ZM8.18 12.95H6.27M17.73 12.95h-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 13v4.78a1.91 1.91 0 0 1-1.91 1.91 1.92 1.92 0 0 1-1.91-1.91M13.91 13v7.64a1.9 1.9 0 0 0 1.91 1.91 1.91 1.91 0 0 0 1.91-1.91M17.73 5.32h1.91M4.36 5.32h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAirlineTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21v13.36h-21zM15.82 7.23v7.63M13.91 15.82l1.91-.96M17.73 15.82l-1.91-.96M15.82 10.09 12 12M15.82 10.09 19.64 12M8.18 8.18h1.91M8.18 12h1.91M8.18 15.82h1.91"
  }));
};

const SvgAirline = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.64 18.36a1.6 1.6 0 0 1-.23-2l3.86-6.18 7.24-7.24A3.24 3.24 0 0 1 18.79 2 3.21 3.21 0 0 1 22 5.21a3.24 3.24 0 0 1-.94 2.28l-7.24 7.24-6.18 3.86a1.6 1.6 0 0 1-2-.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.36 10.18-3.63 3.64L19.27 22 22 20.18l-3.64-10zM13.82 5.64l-3.64 3.63L2 4.73 3.82 2l10 3.64zM7 13.82H2.91L2 16.55l3.64 1.81L7.46 22l2.72-.91V17"
  }));
};

const SvgAirplane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 7.23v3.82l-.47 2.86-.8 4.77L13 22.5h-1.9l-.64-3.82-.8-4.77-.47-2.86V7.23a2.86 2.86 0 1 1 5.72 0ZM7.23 1.5h9.54M12 1.5v2.86M10.41 18.68l.63 3.82H6.27v-2.86l4.14-.96z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 19.64v2.86h-4.77l.63-3.82 4.14.96zM9.61 13.91l-8.11-.95V9.14l7.64-.96v2.86l.47 2.87zM22.5 9.14v3.82l-8.11.95.47-2.87V8.18l7.64.96z"
  }));
};

const SvgAirpods = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 6.27h2.87M12 3.54V9a11.81 11.81 0 0 1-5.87 2.05 4.36 4.36 0 0 1-.81-.05v11.5H1.5V6.27A4.7 4.7 0 0 1 6.13 1.5 11.79 11.79 0 0 1 12 3.54ZM19.64 17.73h-2.87M12 20.46V15a11.81 11.81 0 0 1 5.87-2 4.36 4.36 0 0 1 .81.08V1.5h3.82v16.23a4.7 4.7 0 0 1-4.63 4.77A11.79 11.79 0 0 1 12 20.46Z"
  }));
};

const SvgAlarmClock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.07 8.18a11.54 11.54 0 0 1 3.6-3.82M18.33 4.36a11.54 11.54 0 0 1 3.6 3.82M12 1.5v3.82M10.09 1.5h3.82M5.93 19.98 3.41 22.5M20.59 22.5l-2.52-2.52M12 8.18v6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAlertFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09v6.68M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91ZM9.14 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAlignCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.29 1.46h13.42M.5 8.17h23M3.38 15.83h17.25M1.46 22.54h21.08"
  }));
};

const SvgAlignDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 2.42h23M.5 10.08h14.38M.5 17.75h8.63M18.71 9.13v11.5M22.54 17.75l-3.83 3.83-3.83-3.83"
  }));
};

const SvgAlignIndentRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.8 21.57V2.43M22.5 14.87 19.63 12l2.87-2.87M12.93 20.61H.5M12.93 14.87H.5M12.93 9.13H.5M12.93 3.39H.5"
  }));
};

const SvgAlignJustifyDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.07 3.37H23.5M11.07 9.11H23.5M11.07 14.85H23.5M11.07 20.59H23.5M9.15 16.76l-3.82 3.83-3.83-3.83M5.33 2.41v18.18"
  }));
};

const SvgAlignJustifyUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.07 3.41H23.5M11.07 9.15H23.5M11.07 14.89H23.5M11.07 20.63H23.5M1.5 7.24l3.83-3.83 3.82 3.83M5.33 21.59V3.41"
  }));
};

const SvgAlignLeftIndent = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8 2v20M1 9l3 3-3 3M11 3h12M11 9h12M11 15h12M11 21h12"
  }));
};

const SvgAlignLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 1.5h13.36M.55 8.18h22.9M.55 15.82h16.22M.55 22.5h20.04"
  }));
};

const SvgAlignRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.08 1.46H23.5M.5 8.17h23M7.21 15.83H23.5M3.38 22.54H23.5"
  }));
};

const SvgAmbulanceMedical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.39 18.68H7.7M3.89 18.68H1.5V5.32a1.91 1.91 0 0 1 1.91-1.91h13.74A1.9 1.9 0 0 1 19 4.9l1.59 7.1 1.91 1v5.73h-4.3"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27V12h4.77M5.32 10.09h5.73M8.18 7.23v5.72M20.59 14.86h1.91"
  }));
};

const SvgAmbulance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 19.64H8.18M19.64 19.64h2.86v-5.73l-2.86-1-1.55-6.15a1.9 1.9 0 0 0-1.85-1.44H3.41A1.9 1.9 0 0 0 1.5 7.23v12.41h2.86M5.32 11.05h5.73M8.18 8.18v5.73M11.05 2.45h3.81"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 5.32v7.64h4.78"
  }));
};

const SvgAnchorTransform = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 15.84H5.3v3.84H1.46zM18.72 15.84h3.84v3.84h-3.84zM10.09 4.33h3.84v3.84h-3.84z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.42,
    cy: 6.25,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.6,
    cy: 6.25,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 6.25H3.38M13.93 6.25h6.71M13.93 6.25l.54.23a10.2 10.2 0 0 1 6.17 9.36M10.09 6.25l-.54.23a10.18 10.18 0 0 0-6.17 9.36"
  })));
};

const SvgAnchor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.61 12.03-5.76 2.88-2.87 5.75L8.14 8.19l12.47 3.84z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 4.784 4.838)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.11 4.16h1.36v1.36H4.11z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 19.165 4.841)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.49 4.16h1.36v1.36h-1.36z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 4.781 19.22)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.11 18.54h1.36v1.36H4.11z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.29 4.39a9.46 9.46 0 0 1 13.37 0M4.3 5.32a9.5 9.5 0 0 0 0 13.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgAndroid = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.16a10.5 10.5 0 0 1 10.5 10.5v1h-21v-1A10.5 10.5 0 0 1 12 8.16Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 14.84,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 14.84,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3.41 3.39 2.86 5.72M20.59 3.39l-2.86 5.72"
  }));
};

const SvgAngelHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.6 10.09a3.35 3.35 0 0 0-2.6 1.15 3.35 3.35 0 0 0-2.6-1.15 2.89 2.89 0 0 0-3.13 2.58c0 3.86 5.73 6 5.73 6s5.73-2.15 5.73-6a2.89 2.89 0 0 0-3.13-2.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.88 10.91a2.55 2.55 0 0 0 .84.14 4.78 4.78 0 0 0 4.78-4.78v-.95h-4.77a2.85 2.85 0 0 0-1.94 5M7.12 10.91a2.55 2.55 0 0 1-.84.14A4.78 4.78 0 0 1 1.5 6.27v-.95h4.77a2.85 2.85 0 0 1 1.94 5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAngel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.49 12.74A2.44 2.44 0 0 0 6.75 12H1.5a4.78 4.78 0 0 0 4.77 4.77h.48a2.63 2.63 0 0 0 .49-.05M16.76 16.72a2.63 2.63 0 0 0 .49.05h.48A4.78 4.78 0 0 0 22.5 12h-5.25a2.44 2.44 0 0 0-1.74.74",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.25 11.4a4.39 4.39 0 0 0-1.76 1.34 4.5 4.5 0 0 0-.94 2.08l-.31 1.9-1 5.78h11.49l-1-5.78-.31-1.9a4.5 4.5 0 0 0-.94-2.08 4.39 4.39 0 0 0-1.76-1.34",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 2.93,
    rx: 2.86,
    ry: 1.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAntlers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 23.45v-2.86A7.64 7.64 0 0 1 12 13a7.64 7.64 0 0 1 7.64 7.64v2.86M10.09 13v-1a2.86 2.86 0 0 0-2.86-2.86H5.32A3.82 3.82 0 0 1 1.5 5.32V.55M6.27 4.36v4.78M13.91 13v-1a2.86 2.86 0 0 1 2.86-2.86h1.91a3.82 3.82 0 0 0 3.82-3.82V.55M17.73 4.36v4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18 15.82h.72A3.82 3.82 0 0 0 22.5 12h-1.91a3.84 3.84 0 0 0-2.7 1.12 3.78 3.78 0 0 0-1 1.64M7.07 14.76a3.78 3.78 0 0 0-1-1.64A3.84 3.84 0 0 0 3.41 12H1.5a3.82 3.82 0 0 0 3.82 3.82H6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgApartmentBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 5.32h19.09V22.5H2.45zM.55 22.5h22.9M4.36 1.5h15.27v3.82H4.36z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 16.77h9.55v5.73H7.23zM5.32 9.14h1.91M9.14 9.14h1.91M12.95 9.14h1.91M16.77 9.14h1.91M5.32 12.95h1.91M9.14 12.95h1.91M12.95 12.95h1.91M16.77 12.95h1.91M12 16.77v5.73"
  }));
};

const SvgApartmentBuildings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 22.5H1.5V5.32L7.23 1.5l5.73 3.82V22.5zM6.27 8.18ZM10.09 8.18ZM6.27 12ZM10.09 12ZM6.27 15.82ZM10.09 15.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 19.64h1.91v2.86H6.27zM22.5 22.5h-9.54V9.14l4.77-2.87 4.77 2.87V22.5zM19.64 11.05ZM19.64 14.86ZM19.64 18.68Z"
  }));
};

const SvgApartmentsBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 1.5h13.36v21H5.32zM8.18 5.32h1.91M8.18 9.14h1.91M8.18 12.95h1.91M11.05 5.32h1.9M11.05 9.14h1.9M11.05 12.95h1.9M13.91 5.32h1.91M13.91 9.14h1.91M13.91 12.95h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 17.73h5.73v4.77H9.14zM5.32 22.5H1.5v-8.59L5.32 12v10.5zM18.68 22.5h3.82v-8.59L18.68 12v10.5z"
  }));
};

const SvgArcTriomph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v3.82H3.41zM8.18 14.86v7.64H2.45V5.32h19.1V22.5h-5.73v-7.64A3.81 3.81 0 0 0 12 11.05a3.81 3.81 0 0 0-3.82 3.81ZM.55 5.32h22.9M.55 11.05h22.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 18.68v3.82M18.68 18.68v3.82M.55 14.86h7.63M15.12 14.86h8.33M1.5 1.5h21M.55 22.5h22.9"
  }));
};

const SvgArchiveMusic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h21V22.5h-21zM22.5 3.41H12L10.09 1.5H1.5v5.73h21V3.41z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.04h-2.86v5.73"
  }));
};

const SvgArmchair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.89h11.45v6.68H6.27zM19.64 11.07h1A1.91 1.91 0 0 1 22.5 13v6.68a1.91 1.91 0 0 1-1.91 1.91h-2.86V13a1.91 1.91 0 0 1 1.91-1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 11.07h1A1.91 1.91 0 0 1 6.27 13v8.59H3.41a1.91 1.91 0 0 1-1.91-1.93V13a1.91 1.91 0 0 1 1.91-1.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 11.07V4.39a2.87 2.87 0 0 1 2.87-2.87h9.54a2.87 2.87 0 0 1 2.87 2.87v6.68M4.36 23.48v-1.91M19.64 23.48v-1.91M8.18 5.34h1.91M13.91 5.34h1.91M8.18 9.16h1.91M13.91 9.16h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrow360 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 5.4h2.93a2 2 0 0 1 2 2 2 2 0 0 1-1.95 2h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 13.22h2.93a2 2 0 0 0 2-2 2 2 0 0 0-1.95-2h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.27,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.05 11.27v-2A3.91 3.91 0 0 1 14 5.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.89,
    y: 5.4,
    width: 3.91,
    height: 7.82,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.75 2.47v1.96M1.25 15.18c0 1.92 3.91 3.9 8.85 3.85M14 19c4.89.06 8.8-1.93 8.8-3.84"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.6 16.52 2.51 2.5-2.51 2.51"
  }));
};

const SvgArrowDownChartDecrease = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 3.37 6.7 6.69 2.86-2.86 11.48 11.47"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.76 18.67h4.78v-4.78M5.33 14.85v7.65M10.11 12.93v9.57M14.89 15.8v6.7"
  }));
};

const SvgArrowDownChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 16.76 12.98 7.2l-3.83 3.82L1.5 3.37"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.76 16.76h4.78v-4.78"
  }));
};

const SvgArrowDownCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.54v-5.75h6.71a3.83 3.83 0 0 0 2.72-1.13 3.9 3.9 0 0 0 1.11-2.45V13a3.84 3.84 0 0 0-3.84-3.84h-1V7.2a5.69 5.69 0 0 0-1.69-4.07A5.66 5.66 0 0 0 12 1.44h-.2A5.75 5.75 0 0 0 7 4.41l-.13.26a6.5 6.5 0 0 0-.6 2.53A4.78 4.78 0 0 0 1.46 12a1.27 1.27 0 0 0 0 .2 4.79 4.79 0 0 0 4.78 4.6h2.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.13 19.66 2.88 2.88 2.88-2.88"
  })));
};

const SvgArrowDownEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 6.25 12 10.07 8.18 6.25M12 .52v9.55"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.21h3.91v15.27h-21V7.21h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.21 12 17.7 22.5 7.21M9.14 14.84 1.5 22.48M22.5 22.48l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.21h3.91v15.27h-21V7.21h3.91"
  }));
};

const SvgArrowDownFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M12 10.09v8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 14.86 12 18.68l-3.82-3.82"
  }));
};

const SvgArrowDownGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-180 19.635 19.635)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 16.77h3.82v5.73h-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-180 4.365 15.82)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 9.14h3.82V22.5H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-180 12 17.725)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 12.95h3.82v9.55h-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M15.82 10.09h4.77V5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 1.5a23 23 0 0 1 16.3 6.75l1.84 1.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrowDownHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 18.5h4v-4"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4 8.5v2l5 5 2-2 5 5"
  }));
};

const SvgArrowDownLineChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.34 8.64 12 11.98 8.66 8.64"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H9.14ZM12 11.98V4.34M8.18 14.84h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrowDownLineMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19 1H5a4 4 0 0 0-4 4v10a4 4 0 0 0 4 4h4l3 3 3-3h4a4 4 0 0 0 4-4V5a4 4 0 0 0-4-4Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.5 8.5 12 12 8.5 8.5M12 12V4M8 15h8"
  }));
};

const SvgArrowDownPage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.04 12 14.86l-3.82-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 1.5h1.91l3.82 3.82V22.5H3.41v-21H12v13.36"
  }));
};

const SvgArrowDownPapertray = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.96 4.32v7.67M14.84 9.11l-2.88 2.88-2.87-2.88"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 14.87v7.67H1.41v-7.67L5.25 1.44h13.43l3.83 13.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.37 14.87h5.76A3.82 3.82 0 0 0 12 18.7a3.82 3.82 0 0 0 3.84-3.83h5.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 14.87H15.8a3.84 3.84 0 0 1-7.67 0H1.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgArrowDownShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.7 9.14-2.7 2.7-2.7-2.7M15.82 12.96v2.86H8.18v-2.86M12 12V5.32"
  }));
};

const SvgArrowDownShoppingCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.7 10.17v-7.3M17.43 7.43l-2.73 2.74-2.74-2.74"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.13,
    cy: 20.22,
    r: 1.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.35,
    cy: 20.22,
    r: 1.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1 2h2.54a2.74 2.74 0 0 1 2.62 1.89l3.06 9.94h-.46a2.28 2.28 0 0 0-2.28 2.28 2.28 2.28 0 0 0 2.28 2.28h9.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22 5.61v1.82l-1.83 6.4H9.22"
  }));
};

const SvgArrowDownToBracket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 15.79v6.69h-21v-6.69M12 16.75V.52"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 11.02 12 17.7l-6.68-6.68"
  }));
};

const SvgArrowDownToSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 13.91v8.59H1.5V3.41h8.59"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 14.86H9.14V6.27M9.14 14.86 22.5 1.5"
  }));
};

const SvgArrowDownTrolley = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 1.5h1.91a2.86 2.86 0 0 1 2.86 2.86v14.32H22.5M13.91 13.91V4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.25 10.57-3.34 3.34-3.34-3.34"
  }));
};

const SvgArrowDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 5.32 7.64 7.64 3.82-3.82 9.54 9.54"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 18.68h4.77v-4.77"
  }));
};

const SvgArrowLeftChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 13.89h6.2a3.34 3.34 0 0 0 3.34-3.34 3.34 3.34 0 0 0-3.34-3.35H9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.34 9.14 7.21 12 10.07"
  }));
};

const SvgArrowLeftMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 13.89h6.2a3.34 3.34 0 0 0 3.34-3.34 3.34 3.34 0 0 0-3.34-3.35H9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.34 9.14 7.21 12 10.07"
  }));
};

const SvgArrowReturn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 7.23h7.63a3.82 3.82 0 0 1 3.82 3.82 3.82 3.82 0 0 1-3.82 3.81H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.04 18.68-3.81-3.82 3.81-3.82"
  }));
};

const SvgArrowRightChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13.89h-6.2a3.34 3.34 0 0 1-3.34-3.34 3.34 3.34 0 0 1 3.34-3.35h4.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 4.34 2.86 2.87L12 10.07"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrowRightMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13.89h-6.2a3.34 3.34 0 0 1-3.34-3.34 3.34 3.34 0 0 1 3.34-3.35h4.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 4.34 2.86 2.87L12 10.07"
  }));
};

const SvgArrowUpBill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "graphic money"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 2.86,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 2.46-3.82 3.81L12 4.36 6.27 9.14H1.5V22.5h21V9.14H12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 15.82h-1.91M6.27 15.82H4.36"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 1.5h3.82v3.82"
  })));
};

const SvgArrowUpChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 16.76 6.7-6.7 2.86 2.88L22.54 1.46"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.76 1.46h4.78v4.78M7.24 14.85v7.65M12.98 16.76v5.74M18.72 9.11V22.5"
  }));
};

const SvgArrowUpCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12v7.67h6.72a3.86 3.86 0 0 0 2.71-1.12 3.9 3.9 0 0 0 1.11-2.45v-.26A3.83 3.83 0 0 0 18.72 12h-1v-1.93A5.77 5.77 0 0 0 12 4.32h-.21A5.73 5.73 0 0 0 7 7.29c0 .09-.1.17-.14.26a6.67 6.67 0 0 0-.56 2.52 4.78 4.78 0 0 0-4.8 4.8 1.34 1.34 0 0 0 0 .2 4.8 4.8 0 0 0 4.79 4.59h2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.88 14.87 12 11.99l-2.87 2.88"
  })));
};

const SvgArrowUpDownHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21 22.5H3M23 10.5l-11-9-11 9M12 7.5v12M15 16.5l-3 3-3-3"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9 10.5 3-3 3 3M19 18.5h2M19 14.5h2M19 10.5h2M3 14.5h2M3 18.5h2M3 10.5h2"
  }));
};

const SvgArrowUpEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 6.29 12 2.48l3.82 3.81M12 12.02V2.48M18.59 7.25h3.91v15.27h-21V7.25h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.25 12 17.75l10.5-10.5M9.14 14.89 1.5 22.52M22.5 22.52l-7.64-7.63"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.25h3.91v15.27h-21V7.25h3.91"
  }));
};

const SvgArrowUpFromSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 13.91v8.59H1.5V3.41h8.59M13.91 1.5h8.59v8.59M22.5 1.5 10.09 13.91"
  }));
};

const SvgArrowUpGraphIncrease = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 16.77h3.82v5.73H2.45zM17.73 9.14h3.82V22.5h-3.82zM10.09 12.95h3.82v9.55h-3.82zM.55 22.5h22.9M15.82 1.5h4.77v4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 10.09a23 23 0 0 0 16.3-6.75l1.84-1.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrowUpGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.54 3.37-9.56 9.57-3.83-3.83-7.65 7.65"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.76 3.37h4.78v4.78"
  }));
};

const SvgArrowUpHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-2l5-5 2 2 5-5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12.5h4v4M4 8.5v8"
  }));
};

const SvgArrowUpLineChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.66 8.64 12 5.29l3.34 3.35M12 5.3v7.63M8.18 14.84h7.64"
  }));
};

const SvgArrowUpLineMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.66 8.64 12 5.29l3.34 3.35M12 5.3v7.63M8.18 14.84h7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArrowUpPackage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "package 2"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 1.5H5.32L1.5 8.18V22.5h21V8.18L18.68 1.5zM7.23 14.86v4.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4.84 17.25 2.39-2.39 2.38 2.39M12 1.5V12M1.5 8.18h21"
  })));
};

const SvgArrowUpPapertray = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 14.87v7.67M11.96 12.95V5.28M9.08 8.15l2.88-2.87 2.87 2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 22.54H1.41v-7.67L5.24 1.44h13.43l3.84 13.43"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.37 14.87h5.75a3.84 3.84 0 1 0 7.67 0h5.76",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 14.87h-6.72a3.84 3.84 0 0 1-7.67 0H1.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgArrowUpShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.3 9.14 2.7-2.7 2.7 2.7M15.82 12.96v2.86H8.18v-2.86M12 6.27v6.68"
  }));
};

const SvgArrowUpShoppingCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "check out"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.85 2.43v7.66M11.98 5.3l2.87-2.86 2.87 2.86"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.07,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.67,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 1.48h2.66a2.88 2.88 0 0 1 2.75 2l3.2 10.41h-.48a2.39 2.39 0 0 0-2.39 2.41 2.39 2.39 0 0 0 2.39 2.4h10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 5.3v1.92l-1.91 6.69H9.11"
  })));
};

const SvgArrowUpTrolley = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "cash out"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 1.5h1.91a2.86 2.86 0 0 1 2.86 2.86v14.32H22.5M13.91 4.36v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.57 7.71 3.34-3.35 3.34 3.35"
  })));
};

const SvgArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 18.68 7.64-7.64 3.82 3.82 9.54-9.54"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 5.32h4.77v4.77"
  }));
};

const SvgArrows360 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.2 3.94h2.93a2 2 0 0 1 2 1.95 2 2 0 0 1-1.95 2h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.2 11.76h2.93a2 2 0 0 0 2-2 2 2 0 0 0-1.95-2h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.97,
    cy: 9.8,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10 9.8v-2a3.91 3.91 0 0 1 3.9-3.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.86,
    y: 3.94,
    width: 3.91,
    height: 7.82,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.72 1.01v1.95M1.22 14.69c0 1.92 2 5.86 8.85 5.8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.57 17.99 2.5 2.5-2.5 2.5M13.93 20.49c6.89.06 8.85-3.88 8.85-5.8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.43 17.99-2.5 2.5 2.5 2.5"
  }));
};

const SvgArrowsHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4 19.5v-11M20 8.5v11M23 10.5l-11-9-11 9M6 13.5h12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15 10.5 3 3-3 3M9 16.5l-3-3 3-3M11 22.5h2M15 22.5h2M19 22.5h2M7 22.5h2M3 22.5h2"
  }));
};

const SvgArrowsRecycle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.5 8.15 3-4.86a1.71 1.71 0 0 1 1.5-.81 1.72 1.72 0 0 1 1.46.8L17 8.89M5.5 11.34l-3.77 6a1.46 1.46 0 0 0-.23.79A1.49 1.49 0 0 0 3 19.66h8.06M15 19.66h6a1.49 1.49 0 0 0 1.48-1.49 1.45 1.45 0 0 0-.23-.78L19 12.12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 16.79-2.82 2.82 2.87 2.86M13.09 8.02l3.88.9.91-3.95M19.05 12.17l-.04-.07M6.45 15.21l-.9-3.88-3.94.92M7.55 8.02l-.07.13"
  }));
};

const SvgArrowsUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.04,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.12 15.83A2.88 2.88 0 0 1 12 13a2.87 2.87 0 0 1 2.87 2.87M14.4 2.9 12 5.29 9.6 2.9M12 .5v4.79M9.6 21.1l2.4-2.39 2.4 2.39M12 23.5v-4.79M21.1 14.4 18.71 12l2.39-2.4M23.5 12h-4.79M2.9 9.6 5.29 12 2.9 14.4M.5 12h4.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgArtboardDuplicate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.37 2.42h19.18V21.6H2.37z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.41 1.46h1.92v1.92H1.41zM20.59 1.46h1.92v1.92h-1.92zM1.41 20.64h1.92v1.92H1.41zM20.59 20.64h1.92v1.92h-1.92zM13.88 6.26v3.83h-3.84v3.84H6.2V6.26h7.68z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.04 10.09h7.67v7.67h-7.67z"
  })));
};

const SvgArtboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 1.46h3.84V5.3H1.45zM18.71 1.46h3.84V5.3h-3.84zM1.45 18.72h3.84v3.84H1.45zM18.71 18.72h3.84v3.84h-3.84zM18.71 3.38H5.28M18.71 20.64H5.28M3.36 18.72V5.3M20.63 18.72V5.3"
  })));
};

const SvgArtboards = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.39 2.43h12.47V14.9H2.39z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.11 9.14h12.47v12.47H9.11zM1.43 1.47h1.92v1.92H1.43zM13.9 1.47h1.92v1.92H13.9z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.9 13.94h1.92v1.92H13.9zM1.43 13.94h1.92v1.92H1.43zM8.15 8.18h1.92v1.92H8.15zM20.61 8.18h1.92v1.92h-1.92zM20.61 20.65h1.92v1.92h-1.92zM8.15 20.65h1.92v1.92H8.15z"
  })));
};

const SvgAsiaGate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 1.5a29.83 29.83 0 0 0 21 0M.55 7.23h22.9M23.45 11.05h-3.42M3.97 11.05H.55M4.36 2.45 3.41 22.5M19.64 2.45l.95 20.05M12 3.41v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 11.05,
    width: 5.73,
    height: 6.68,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9"
  }));
};

const SvgAsianBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 7.2c1.92-1 3.83-2.87 3.83-4.79h11.48c0 1.92 1.91 3.83 3.83 4.79M1.56 7.2H.52h22.96-1.05M2.43 11c1.27-.61 1.92-1.89 2.87-3.8h13.4c.95 1.91 1.6 3.19 2.87 3.82M.52 11.02h22.96M6.26.5v1.91M17.74.5v1.91M4.35 11.02h15.3v3.83H4.35zM1.48 22.5l2.87-7.65h15.3l2.87 7.65M.52 22.5h22.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.67a1.91 1.91 0 0 1 1.91 1.91v1.92h-3.82v-1.91A1.91 1.91 0 0 1 12 18.67Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAsianGate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.55 1.5-3.63 4.77H6.08L2.45 1.5c1 .92 4.91 1.61 9.55 1.61s8.51-.69 9.55-1.61ZM5.32 6.27h13.36M4.36 10.09h15.28M6.27 6.27V22.5M17.73 6.27V22.5M12 6.27v3.82M.55 22.5h22.9M2.45 14.86v7.64M21.55 14.86v7.64M17.73 16.77h5.72M.55 16.77h5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAsianPagoda = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m12 1.46.05.14a4 4 0 0 0 3.78 2.73 2.83 2.83 0 0 1-.85 2 .57.57 0 0 1-.11.11A2.85 2.85 0 0 1 13 7.2h-1M12 1.46v.14a4 4 0 0 1-3.83 2.73 2.83 2.83 0 0 0 .85 2 .57.57 0 0 0 .11.11A2.85 2.85 0 0 0 11 7.2h1M14.87 13.89H9.13A1.91 1.91 0 0 1 7.22 12a1.92 1.92 0 0 0 1.91-1.91h5.74A1.92 1.92 0 0 0 16.78 12a1.91 1.91 0 0 1-1.91 1.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.83 17.72H8.17a1.92 1.92 0 0 1-1.91-1.92 1.9 1.9 0 0 0 1.91-1.91h7.66a1.9 1.9 0 0 0 1.91 1.91 1.92 1.92 0 0 1-1.91 1.92ZM8.17 17.72h7.65v4.78H8.17zM2.43 22.5h19.14M12 19.63v2.87M12 .5v.96M10.09 7.2v2.87M13.91 7.2v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAudioAlbum = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 22.5H4.36L2.46 9.14h19.09L19.64 22.5z"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 15.82,
    rx: 4.77,
    ry: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 5.32h17.18M5.32 1.5h13.36"
  }));
};

const SvgAudioCassette = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 8.18H8.18L5.32 4.36h13.36l-2.86 3.82z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAudioCd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 9.14,
    width: 5.73,
    height: 5.73,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 7.23a6.74 6.74 0 0 1 0 9.54M7.23 16.77a6.74 6.74 0 0 1 0-9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAudioChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 6.25v7.64M16.77 8.16v3.82M7.23 8.16v3.82M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgAudioHeadphones = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.8 13h.48v8.59H5.8a4.3 4.3 0 0 1-4.3-4.3A4.3 4.3 0 0 1 5.8 13ZM17.73 13h.48a4.3 4.3 0 0 1 4.3 4.3 4.3 4.3 0 0 1-4.3 4.3h-.48V13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 13.91v-2.86A8.6 8.6 0 0 1 12 2.45a8.6 8.6 0 0 1 8.59 8.6v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAudioMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 6.25v7.64M16.77 8.16v3.82M7.23 8.16v3.82M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgAudioMicrophone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 6.27,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 6.27 3.41 18.68l1.91 1.91 12.41-9.55M1.5 22.5l2.86-2.86M11.05 12l-1.42-1.41M13.43 1.98l8.59 8.59"
  }));
};

const SvgAudioPlayer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M13.43 9.14h-2.86L12 6.27l1.43 2.87zM10.57 14.86h2.86L12 17.73l-1.43-2.87zM14.86 13.43v-2.86L17.73 12l-2.87 1.43zM9.14 10.57v2.86L6.27 12l2.87-1.43z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAudioSpeaker = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 6.27,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgAudioWave = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.45 11.04h-1.9l-2.87 6.69h-.95V6.27h-.96L12.96 22.5H12v-21h-.96L7.23 17.73h-.96V6.27h-.95l-2.86 4.77H.55"
  }));
};

const SvgAudioWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M7.17 17.8a1 1 0 1 1 1 1 1 1 0 0 1-1-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.89,
    cy: 16.84,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.85 16.84v-5.76l-5.76.96v5.76"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.42 1.49h21.1v21.1H1.42z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.52 7.25H1.42V1.49h21.1v5.76zM4.3 4.37h1.92M8.13 4.37h1.92M11.97 4.37h1.92"
  })));
};

const SvgAvocado = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.27c0 5.8-3.85 8.23-8.59 8.23s-8.59-2.43-8.59-8.23S7.26 1.5 12 1.5s8.59 6.97 8.59 12.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgAxe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.8 9a9.95 9.95 0 0 1-8.49 8.49l-.7-.7a6.69 6.69 0 0 0-.69-4.55 6.87 6.87 0 0 0-1.15-1.54l-2.4-2.4 4.24-4.2L16 6.5a6.33 6.33 0 0 0 1.55 1.14 6.6 6.6 0 0 0 3.22.83 6.56 6.56 0 0 0 1.32-.13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12.92 12.28-2.1 2.1-6 6a2.12 2.12 0 0 1-3-3l6-6 2.3-2.29 1.65 1.65a6.87 6.87 0 0 1 1.15 1.54ZM19.2 5.12a2.12 2.12 0 0 1-.62 1.5l-1 1A6.33 6.33 0 0 1 16 6.5l-1.64-1.65 1.22-1.23a2.12 2.12 0 0 1 3.62 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgB = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.5 12v4.67l-10.27 5.6-3.73-2.8V1.73L9.23 3.6v14l5.6-2.8-1.86-.93-.94-4.67L19.5 12z"
  }));
};

const SvgBackVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6 2v4.87c-3-.52-4.9-1.42-4.9-2.46S3 2.48 6 2ZM22.6 4.41c0 1-2 1.94-4.89 2.46V2c2.94.48 4.89 1.38 4.89 2.41ZM1.1 19.07C1.1 20.69 5.91 22 11.85 22s10.75-1.31 10.75-2.93M1.1 14.18c0 1.63 4.81 2.93 10.75 2.93s10.75-1.3 10.75-2.93M1.1 9.3c0 1.62 4.81 2.93 10.75 2.93S22.6 10.92 22.6 9.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6 4.41v2.46a34.39 34.39 0 0 0 5.87.47 34.18 34.18 0 0 0 5.86-.47V4.41M1.1 19.07V4.41M22.6 19.07V4.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 12 6.68-3.82v7.64L9.14 12zM8.18 16.77V7.23"
  }));
};

const SvgBackpackLuggage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 7.23V22.5H5.32V7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 15.82h3.82v3.82a2.86 2.86 0 0 1-2.86 2.86h-1v-6.68h.04Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 15.82h1a2.86 2.86 0 0 1 2.86 2.86v3.82H1.5v-6.68Z",
    transform: "rotate(180 3.41 19.16)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5h9.55a2.86 2.86 0 0 1 2.86 2.86 4.77 4.77 0 0 1-4.77 4.77H9.14a4.77 4.77 0 0 1-4.78-4.77A2.86 2.86 0 0 1 7.23 1.5ZM9.14 12V9.14M14.86 12V9.14M5.32 14.86h13.36v7.64H5.32zM8.18 18.68h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBackpack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 5.32h3.82a4.77 4.77 0 0 1 4.77 4.77V22.5H5.32V10.09a4.77 4.77 0 0 1 4.77-4.77ZM11.47 1.5h1.05a2.34 2.34 0 0 1 2.34 2.34v1.48H9.14V3.84a2.34 2.34 0 0 1 2.33-2.34ZM18.68 14.86h1.62a2.2 2.2 0 0 1 2.2 2.2v3.24a2.2 2.2 0 0 1-2.2 2.2h-1.62v-7.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 14.86h1.61a2.2 2.2 0 0 1 2.2 2.2v3.24a2.2 2.2 0 0 1-2.2 2.2H1.5v-7.64Z",
    transform: "rotate(180 3.41 18.68)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 15.82h7.64M13.91 17.73v-1.91"
  }));
};

const SvgBackward = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.96 12 4.77-2.86v5.72L12.96 12zM7.23 12 12 9.14v5.72L7.23 12zM6.27 16.77V7.23"
  }));
};

const SvgBacon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 11c6.68-6.78 14.32 3.57 21-.95M1.5 14.86c6.68-6.78 14.32 3.57 21-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 17.72c-5.5 3.73-11.68-2.66-17.42-1.2a2.81 2.81 0 0 1-3.58-2.67V7.22c5.68-5.76 12 .84 17.92.19a2.78 2.78 0 0 1 3.08 2.76Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBacteriaOrganism = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 8.17a4.79 4.79 0 0 0-4.83-4.79 4.78 4.78 0 0 0-4.79 4.79 12.44 12.44 0 0 0 12.45 12.45 4.78 4.78 0 0 0 4.79-4.79A4.79 4.79 0 0 0 15.83 11 2.88 2.88 0 0 1 13 8.17Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.29,
    cy: 9.13,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.83,
    cy: 12.96,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 12.96h1.91M9.13 8.17h1.91M11.04 16.79h1.92M14.88 17.75h1.91M8.17.5v2.88M20.63 16.79h2.87M7.21 16.79l-2.4 2.4M13.92 10.08l2.39-2.39M19.67 12.96l1.91-1.92M11.04 4.33l1.92-1.91M13.92 20.63v2.87M3.38 8.17H.5M4.33 5.29 2.42 3.38M18.71 19.67l2.87 2.87M1.46 14.88 4.33 12M9.13 22.54 12 19.67"
  }));
};

const SvgBacteriaView = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Bacteria"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.11 6.07c.8.79.39 1.2 1.19 2s1.2.4 2 1.19.39 1.2 1.19 2M6.56 9.14c0 .95-.57.95-.57 1.9s.57 1 .57 1.91-.56.96-.56 1.91M9 18.44c.79-.48 1.09 0 1.88-.47s.5-1 1.3-1.44 1.09 0 1.89-.47M8.18 6.27h1.91M10.09 12H12M16.77 15.82h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBacteria = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.25,
    cy: 5.25,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.75,
    cy: 18.75,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.25,
    cy: 18.75,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.75,
    cy: 5.25,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.41v3.82M12 16.77v3.82M3.41 12h3.82M16.77 12h3.82M5.93 5.93l2.7 2.7M15.37 15.37l2.7 2.7M5.93 18.07l2.7-2.7M15.37 8.63l2.7-2.7"
  }));
};

const SvgBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.73 22.5H3.27a1.77 1.77 0 0 1-1.77-1.77 2.45 2.45 0 0 1 0-.27L3 10.61a2.85 2.85 0 0 1 2.87-2.43h12.26A2.85 2.85 0 0 1 21 10.61l1.52 9.85a2.45 2.45 0 0 1 0 .27 1.77 1.77 0 0 1-1.79 1.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a5.73 5.73 0 0 1 5.73 5.73v1H6.27v-1A5.73 5.73 0 0 1 12 1.5ZM6.27 12h11.46M14.86 14.86V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBaggageTrolley = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 18.68h22.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a9.55 9.55 0 0 1 9.55 9.5v7.64H2.45V11A9.55 9.55 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 10.09,
    width: 11.45,
    height: 8.59,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 10.09H9.14l.95-2.86h3.82l.95 2.86zM9.14 12.95v5.73M14.86 12.95v5.73"
  }));
};

const SvgBaggage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 5.32,
    width: 15.27,
    height: 17.18,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 8.18v11.46M15.82 8.18v11.46M12 8.18v11.46M9.14 1.5h5.73v3.82H9.14zM7.23 1.5h9.54"
  }));
};

const SvgBalanceBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 9.55,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.44 7.13 2.06 4.75a1.89 1.89 0 0 1 0-2.69 1.93 1.93 0 0 1 1.35-.56 1.89 1.89 0 0 1 1.34.56l2.58 2.57M16.67 4.63l2.58-2.57a1.89 1.89 0 0 1 1.34-.56 1.93 1.93 0 0 1 1.35.56 1.89 1.89 0 0 1 0 2.69l-2.38 2.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBalanceBeam = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.58 12v5.75h-3.83V13a2.87 2.87 0 0 0-2.87-2.88H9.12A2.87 2.87 0 0 0 6.25 13v4.79H2.42V12a5.75 5.75 0 0 1 5.75-5.75h7.66A5.75 5.75 0 0 1 21.58 12ZM.5 17.75h7.67M15.83 17.75h7.67",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBalanceBeams = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.48,
    y: 8.15,
    width: 21.04,
    height: 7.65,
    rx: 3.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.48,
    y: 8.15,
    width: 21.04,
    height: 7.65,
    rx: 3.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 12V7.2A3.82 3.82 0 0 1 5.3 3.37h13.4a3.82 3.82 0 0 1 3.82 3.83V12M7.22 6.24V.5M17.74 6.24V.5M6.26 22.5H2.44l2.86-6.7h3.83l-2.87 6.7zM17.74 22.5h3.83l-2.87-6.7h-3.83l2.87 6.7z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBalanceRings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 1.5h22.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 1.5v15.27M18.68 1.5v15.27"
  }));
};

const SvgBalconyWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 13.91h19.09v8.59H2.45zM23.45 13.91H.55M7.23 13.91v8.59M12 13.91v8.59M16.77 13.91v8.59M6.27 12V7.23A5.73 5.73 0 0 1 12 1.5a5.73 5.73 0 0 1 5.73 5.73V12M6.27 8.18h12.41M12 1.5V12"
  }));
};

const SvgBalcony = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.45 22.5H.55M12 14.86v7.64M16.77 14.86v7.64M2.45 12.95v9.55M7.23 14.86v7.64M21.55 12.95v9.55M.55 14.86h22.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a5.73 5.73 0 0 1 5.73 5.73v7.64H6.27V7.23A5.73 5.73 0 0 1 12 1.5ZM12 1.5v13.36M6.27 9.14h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBallOrnament = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.85,
    r: 7.65,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M4.35 12.93c7.65-2.86 7.65 1.92 15.3 0M4.35 17.72c7.65-2.87 7.65 1.91 15.3 0"
  }));
};

const SvgBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.5 13.89h15a3 3 0 0 1 3 3v.81h-21v-.81a3 3 0 0 1 3-3ZM12 5.3a8.59 8.59 0 0 1 8.59 8.59H3.41A8.59 8.59 0 0 1 12 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.4 8.89a5.24 5.24 0 0 1 4.5 5.19M14.1 14.08a5.24 5.24 0 0 1 4.5-5.19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBanana = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.93 12C8.05 7.37 9.1 1.5 11.9 1.5c2.45 0 2.88 5.15 3 8.58M15.13 15.09c.3 2.14.75 4.22.75 5.5s.23 1.91-2 1.91c-1.65 0-4.68-3.23-5.65-7.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.9 13s-3 0-3 4.78-2.09 1.7-3 0c-1-1.91-1-5.73 2-5.73s4 .95 4 .95ZM10.9 13s2.74-1.39 4.66 3 2.85.71 3.07-1.24c.26-2.17-1.28-5.69-4.35-4.46S10.9 13 10.9 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 13s1 3.82 1.91 4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBandage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45a3.25 3.25 0 0 1 2.3-1h.17a3.25 3.25 0 0 1 2.3 1l2.87 2.87a3.25 3.25 0 0 1 .95 2.3v.17a3.25 3.25 0 0 1-.95 2.3L10.09 21.55a3.25 3.25 0 0 1-2.3.95h-.17a3.25 3.25 0 0 1-2.3-.95l-2.87-2.87a3.25 3.25 0 0 1-1-2.3v-.17a3.25 3.25 0 0 1 1-2.3L13 3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.52 15.34-2.86-2.86 3.82-3.82 1.21 1.21 1.65 1.65-3.82 3.82z"
  }));
};

const SvgBandages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "plaster cross"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45a3.25 3.25 0 0 1 2.3-1h.17a3.25 3.25 0 0 1 2.3 1l2.87 2.87a3.25 3.25 0 0 1 .95 2.3v.17a3.25 3.25 0 0 1-.95 2.3L10.09 21.55a3.25 3.25 0 0 1-2.3.95h-.17a3.25 3.25 0 0 1-2.3-.95l-2.87-2.87a3.25 3.25 0 0 1-1-2.3v-.17a3.25 3.25 0 0 1 1-2.3L13 3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m19.64 12 .95.95 1 1a3.25 3.25 0 0 1 .95 2.3v.17a3.25 3.25 0 0 1-.95 2.3l-2.87 2.87a3.25 3.25 0 0 1-2.3.95h-.17a3.25 3.25 0 0 1-2.3-.95L12 19.64M4.36 12l-1.91-1.91a3.25 3.25 0 0 1-1-2.3v-.17a3.25 3.25 0 0 1 1-2.3l2.87-2.87a3.25 3.25 0 0 1 2.3-1h.17a3.25 3.25 0 0 1 2.3 1L12 4.36M11.52 15.34l-2.86-2.86 3.82-3.82 1.21 1.21 1.65 1.65-3.82 3.82zM4.36 15.82h1.91M7.23 18.68h1.91M14.86 5.32h1.91M17.73 8.18h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBarChartMagnifyingGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.85,
    cy: 5.28,
    r: 3.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.54 11.98-3.82-3.83M6.28 10.07V22.5M11.07 16.76v5.74M15.85 12.93v9.57"
  }));
};

const SvgBarChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.28 11.98h4.78V22.5H6.28zM15.85 8.15h4.78V22.5h-4.78z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.07 3.37h4.78V22.5h-4.78z"
  }));
};

const SvgBarGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 14.86h3.82v7.64H2.45zM17.73 1.5h3.82v21h-3.82zM10.09 9.14h3.82V22.5h-3.82zM.55 22.5h22.9"
  }));
};

const SvgBarStools = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h19.09v3.82H2.45zM18.68 9.14h1.91A1.91 1.91 0 0 1 22.5 11v2h-5.73v-2a1.91 1.91 0 0 1 1.91-1.86ZM3.41 9.14h1.91A1.91 1.91 0 0 1 7.23 11v2H1.5v-2a1.91 1.91 0 0 1 1.91-1.86ZM12 10.09V22.5M15.82 22.5H8.18M4.36 12.95v9.55M7.23 22.5H1.5M19.64 12.95v9.55M22.5 22.5h-5.73M1.5 17.73h2.86M19.64 17.73h2.86M12 10.09 8.18 5.32h7.64L12 10.09z"
  }));
};

const SvgBarbequeGrill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.35 1.5h15.3v1A7.65 7.65 0 0 1 12 10.11a7.65 7.65 0 0 1-7.65-7.65v-1 .04ZM17.63 18.73l-2.1-9.49",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.3 23.5v-1.91L8.4 9.2M13.91 15.85H6.26"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.74,
    cy: 20.63,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBarbeque = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 20,
    cy: 4,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.38,
    y: 5.96,
    width: 4.24,
    height: 7.07,
    rx: 2.12,
    transform: "rotate(-45 14.506 9.502)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 16.9 10 19l-5-5 2.1-1a2.93 2.93 0 0 1 3.4.55 2.93 2.93 0 0 1 .55 3.35ZM7.5 16.5 1 23M18.59 5.41 16 8M23 1l-1.59 1.59M13 11l-2.5 2.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBarcode = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 4h3v12h-3zM13.5 4h3v16h-3zM7.5 21V3v18zM10.5 4v12M19.5 10v0ZM22.5 4v16"
  }));
};

const SvgBarn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23.45 10.09-3.81-5.73L12 1.5 4.36 4.36.55 10.09"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 8.18h17.18V22.5H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 12.95h9.55v9.55H7.23zM23.45 22.5H.55M16.77 12.95 7.23 22.5M7.23 12.95l9.54 9.55"
  }));
};

const SvgBarrel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a22.79 22.79 0 0 0-2.86-10.5H4.36A22.79 22.79 0 0 0 1.5 12a22.79 22.79 0 0 0 2.86 10.5h15.28A22.79 22.79 0 0 0 22.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12a38.34 38.34 0 0 0-1.53-10.5H9.71A38.34 38.34 0 0 0 8.18 12a38.34 38.34 0 0 0 1.53 10.5h4.58A38.34 38.34 0 0 0 15.82 12ZM2.45 5.32h19.1M2.45 18.68h19.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBasket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.09 11.09h21.82M17.73 22H6.27a1.82 1.82 0 0 1-1.8-1.52l-1.56-9.39h18.18l-1.56 9.39a1.82 1.82 0 0 1-1.8 1.52Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 16.55-4.54-5.46h9.09L12 16.55zM15.64 18.36h4.54M16.55 14.73h3.63M8.36 18.36H3.82M7.45 14.73H3.82M12 2a6.36 6.36 0 0 1 6.36 6.36v2.73H5.64V8.36A6.36 6.36 0 0 1 12 2Z"
  }));
};

const SvgBathrobe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16 1.5H8a6.52 6.52 0 0 0-4.59 1.91A6.52 6.52 0 0 0 1.5 8v8.75h3.82v5.75h13.36v-5.73h3.82V8a6.52 6.52 0 0 0-1.91-4.61A6.52 6.52 0 0 0 16 1.5ZM5.32 6.27v10.5M18.68 6.27v10.5M8.18 1.5l5.73 13.36M15.82 1.5 12 10.41M18.68 14.86H5.32M13.91 22.5v-7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBathtubShower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 13.92h19.16v2.87a5.75 5.75 0 0 1-5.75 5.75H8.17a5.75 5.75 0 0 1-5.75-5.75v-2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 13.92h4.79v4.79H12zM23.5 13.92H.5M2.42 14.12V4.33a2.87 2.87 0 0 1 2.87-2.87h1a2.87 2.87 0 0 1 2.83 2.87v1M11.04 5.29H7.21"
  }));
};

const SvgBathtub = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 13.94h19.16v1a5.75 5.75 0 0 1-5.75 5.75H8.17a5.75 5.75 0 0 1-5.75-5.79v-1 .04ZM4.33 23.52v-.96l1.92-1.91M19.67 23.52v-.96l-1.92-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 13.94V3.87a2.39 2.39 0 0 1 2.39-2.39 2.39 2.39 0 0 1 2.4 2.39v1.44M5.29 5.31h3.84M.5 13.94h23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBeachBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a10.49 10.49 0 0 1-5.33 9.14 10.36 10.36 0 0 1-4.87 1.35h-.6a10.36 10.36 0 0 1-4.87-1.35 10.5 10.5 0 0 1 0-18.28 10.36 10.36 0 0 1 4.87-1.35h.6a10.36 10.36 0 0 1 4.87 1.35A10.49 10.49 0 0 1 22.5 12ZM11.7 1.51h.6M11.7 22.49h.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.84 19.8a15.43 15.43 0 0 0 1.89-7.8 15.43 15.43 0 0 0-1.89-7.79M8.16 19.8A15.43 15.43 0 0 1 6.27 12a15.43 15.43 0 0 1 1.89-7.79M12 18.68V5.32M17.17 2.86a4.35 4.35 0 0 1-1.33 1.34A6.85 6.85 0 0 1 12 5.32a6.85 6.85 0 0 1-3.84-1.11 4.49 4.49 0 0 1-1.33-1.35 10.36 10.36 0 0 1 4.87-1.35h.6a10.36 10.36 0 0 1 4.87 1.35Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.17 21.14a10.36 10.36 0 0 1-4.87 1.35h-.6a10.36 10.36 0 0 1-4.87-1.35 4.35 4.35 0 0 1 1.33-1.34A6.85 6.85 0 0 1 12 18.68a6.85 6.85 0 0 1 3.84 1.11 4.35 4.35 0 0 1 1.33 1.35Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBeachHoliday = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 22.55h23M23.5 18.71H12l-3.83-3.83M12.96 22.55v-3.84M20.63 22.55v-3.84M8.22 8.47 3.04 22.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 1.81h.82A6.79 6.79 0 0 1 16.6 8.6v.08H2.2V8.6A6.79 6.79 0 0 1 9 1.81Z",
    transform: "rotate(20 9.403 5.242)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBeachLounge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 16.8 5 13.57A2 2 0 0 0 3.52 13a2 2 0 0 0-2 2 2 2 0 0 0 .59 1.43l4.18 4.18h14.3a1.9 1.9 0 0 0 1.91-1.91 1.9 1.9 0 0 0-1.91-1.9ZM6.27 23.48v-2.87M19.64 23.48v-2.87M20.59 8.21H3.41L12 1.52l8.59 6.69zM12 16.8V8.2M12 23.48v-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBedFurniture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 23.45v-2.86M1.5 15.82h21v4.77h-21zM6.52 11h11a4.07 4.07 0 0 1 4.07 4.07v.7H2.45v-.7A4.07 4.07 0 0 1 6.52 11Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 7.23h1.91A2.86 2.86 0 0 1 12 10.09v1H4.36v-1a2.86 2.86 0 0 1 2.87-2.86ZM14.86 7.23h1.91a2.86 2.86 0 0 1 2.86 2.86v1H12v-1a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 3.41h15.27v7.64H4.36zM21.55 23.45v-2.86M4.36.55v2.86M19.64.55v2.86"
  }));
};

const SvgBedSleep = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 13.91h21v3.82h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 10.09h18.14A2.86 2.86 0 0 1 22.5 13v1h-21v-3.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 6.68,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09v3.82M1.5 2.45v7.64M1.5 21.55v-3.82M22.5 21.55v-3.82"
  }));
};

const SvgBed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14h18.14A2.86 2.86 0 0 1 22.5 12v1.91h-21V9.14ZM1.5 13.91h21v3.82h-21zM1.5 21.55V2.45M22.5 21.55v-3.82M3.56 5.32h2.56a2.06 2.06 0 0 1 2.06 2.06 1.76 1.76 0 0 1-1.75 1.76H3.26A1.76 1.76 0 0 1 1.5 7.38a2.06 2.06 0 0 1 2.06-2.06ZM12 9.14v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBeerFoamDrink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 7.23v13.36a1.9 1.9 0 0 1-1.91 1.91H5.32a1.9 1.9 0 0 1-1.91-1.91V7.23h2.86a1 1 0 0 1 1 .95v1.43a1.43 1.43 0 1 0 2.86 0V8.18a1 1 0 0 1 1-.95Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 9.14h2.86A1.91 1.91 0 0 1 21.55 11v3.82a1.91 1.91 0 0 1-1.91 1.91h-2.87V9.14ZM8.18 11.05v8.59M12 11.05v8.59M11.05 7.23h5.25a1.44 1.44 0 0 0 0-2.87h-1.44A1.92 1.92 0 0 0 13 2.45a1.78 1.78 0 0 0-.64.13A2.83 2.83 0 0 0 7.59 3a1.84 1.84 0 0 0-1.32-.54 1.92 1.92 0 0 0-1.91 1.9h-.47a1.44 1.44 0 1 0 0 2.87h2.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBeer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.75 6.27a1.9 1.9 0 0 1-.95 1.65v-.69H12a1 1 0 0 0-.95.95v1.43a1.44 1.44 0 1 1-2.87 0V8.18a.94.94 0 0 0-.95-.95H5.34v.69a1.9 1.9 0 0 1-1-1.65A1.92 1.92 0 0 1 6.3 4.36a1.91 1.91 0 0 1 1.9-1.91 1.93 1.93 0 0 1 1.07.33 1.9 1.9 0 0 1 3.59 0 2 2 0 0 1 1.07-.33 1.92 1.92 0 0 1 1.91 1.91 1.92 1.92 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 7.23v13.36a1.91 1.91 0 0 1-1.91 1.91H7.25a1.91 1.91 0 0 1-1.91-1.91V7.23h1.91a.94.94 0 0 1 .95.95v1.43a1.44 1.44 0 1 0 2.87 0V8.18a1 1 0 0 1 .93-.95ZM16.8 10.09h1.9A1.91 1.91 0 0 1 20.61 12v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.9v-7.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBehance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.32h5.42a3.17 3.17 0 0 1 3.17 3.17v.34A3.17 3.17 0 0 1 6.92 12H1.5V5.32ZM1.5 12h6.2a3.34 3.34 0 0 1 3.3 3.34 3.34 3.34 0 0 1-3.3 3.34H1.5V12ZM13.91 13.91h8.59a4.55 4.55 0 0 0-4.3-4.77 4.55 4.55 0 0 0-4.29 4.77 4.55 4.55 0 0 0 4.29 4.77 4.13 4.13 0 0 0 3.43-1.91M13.91 6.27h8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellBow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23a6.68 6.68 0 0 1 6.68 6.68v4.77H5.32v-4.77A6.68 6.68 0 0 1 12 7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 5.32a1.91 1.91 0 1 1-3.82 0 1.91 1.91 0 1 1 3.82 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 5.32a1.94 1.94 0 0 0 .32 1.06L6.83 8.76a2.19 2.19 0 0 1-3.42-1.82V3.7A2.19 2.19 0 0 1 5.6 1.5a2.17 2.17 0 0 1 1.23.37l3.58 2.39a1.92 1.92 0 0 0-.32 1.06ZM20.59 3.7v3.24a2.19 2.19 0 0 1-3.42 1.82l-3.58-2.38a1.94 1.94 0 0 0 .32-1.06 1.92 1.92 0 0 0-.32-1.06l3.58-2.39a2.17 2.17 0 0 1 1.23-.37 2.19 2.19 0 0 1 2.19 2.2ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M20.59 18.68H3.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellCheck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.7 8.34-4.13 4.14-2.23-2.23"
  }));
};

const SvgBellDash = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.38 14.82v-4.67A8.4 8.4 0 0 0 12 1.75a8.4 8.4 0 0 0-8.4 8.4v4.67l-1.88 1.86v1.87h20.53v-1.87ZM14.62 18.55a2.64 2.64 0 0 1 .16.93 2.8 2.8 0 1 1-5.6 0 2.64 2.64 0 0 1 .17-.93M22.25 1.75l-21 21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M11.05 11.05h1.9M14.86 11.05h1.91M7.23 11.05h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M8.18 11.05h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 1.5,
    width: 15.27,
    height: 21,
    rx: 2.04,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1ZM12 9.14A2.86 2.86 0 0 1 14.86 12v2.86H9.14V12A2.86 2.86 0 0 1 12 9.14ZM12 7.23v1.91M16.77 14.86H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M8.18 11.05h7.64M12 7.23v7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellReminder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBellXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86v-4.77A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59v4.77L1.5 16.77v1.91h21v-1.91ZM14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M9.3 8.35l5.4 5.4M14.7 8.35l-5.4 5.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 13.91V8.18A6.68 6.68 0 0 0 12 1.5a6.68 6.68 0 0 0-6.68 6.68v5.73a3.82 3.82 0 0 1-3.82 3.82h21a3.82 3.82 0 0 1-3.82-3.82ZM14.13 17.73a2.8 2.8 0 0 1 .73 1.91 2.86 2.86 0 0 1-5.72 0 2.8 2.8 0 0 1 .73-1.91M5.32 12h13.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBerriesOrganicLeaf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 20.9a4.3 4.3 0 1 1-3.34-7H6a4.31 4.31 0 0 1 3.1 1.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.48,
    cy: 18.2,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.15 14a4.64 4.64 0 0 0 .44-.82 4.42 4.42 0 0 0 .32-1.63 3.08 3.08 0 0 0 0-.53A4.12 4.12 0 0 0 13 8.84a4.29 4.29 0 0 0-7.64 2.68 4.37 4.37 0 0 0 .64 2.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.2 14.27a8.61 8.61 0 0 1-.61-1.12M16.37 10.23a7.65 7.65 0 0 1 6.13 7.5h-1.91a7.64 7.64 0 0 1-4.18-1.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 8.84a7.64 7.64 0 0 1 7.59-7.34v1.91a7.62 7.62 0 0 1-4.22 6.82 7.28 7.28 0 0 1-2.5.76M11.05 18.68h1.9M3.41 18.68h1.91M8.18 12h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBerries = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.73 14.9h-.01M6.53 15.25A3.81 3.81 0 1 0 12 18.68a3.83 3.83 0 0 0-.52-1.92M15.28 14.9h-.01M17.47 15.25A3.81 3.81 0 1 1 12 18.68a3.83 3.83 0 0 1 .52-1.92"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13a3.81 3.81 0 0 1-.54 2 3.75 3.75 0 0 1-2.73 1.83 3.27 3.27 0 0 1-.54 0h-.27a2.23 2.23 0 0 1-.27 0 3.75 3.75 0 0 1-2.74-1.93 3.8 3.8 0 0 1 2.89-5.74h.78A3.82 3.82 0 0 1 15.82 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 13a3.81 3.81 0 0 0 .54 2 3.35 3.35 0 0 0-.54 0 3.68 3.68 0 0 0-1.65.39 10.51 10.51 0 0 1-5-9V1.5a10.47 10.47 0 0 1 10.08 7.66A3.82 3.82 0 0 0 8.18 13ZM22.5 1.5v4.77a10.51 10.51 0 0 1-5 9 3.68 3.68 0 0 0-1.65-.39 3.35 3.35 0 0 0-.54 0 3.8 3.8 0 0 0-2.89-5.74A10.47 10.47 0 0 1 22.5 1.5ZM8.87 10.78 4.36 6.27M19.64 6.27l-4.51 4.51",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBibleBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 18.68v3.82H6.27a1.92 1.92 0 0 1-1.91-1.91 1.93 1.93 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 1.5v17.18H6.27a1.93 1.93 0 0 0-1.91 1.91V3.41A1.92 1.92 0 0 1 6.27 1.5ZM12 5.32v9.54M16.77 10.09H7.23M8.18 7.23h1.91M8.18 12.95h1.91M13.91 7.23h1.91M13.91 12.95h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBible = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 18.68v3.82H5.32a1.91 1.91 0 0 1-1.91-1.91 1.92 1.92 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 1.5v17.18H5.32a1.92 1.92 0 0 0-1.91 1.91V3.41A1.92 1.92 0 0 1 5.32 1.5ZM7.23 1.5v17.18M11.05 9.14h5.72M13.91 6.27v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBigBen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 6.28 12 1.5l5.74 4.78"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.07,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 6.28h11.48v9.57H6.26z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 23.5v-7.65h7.66v7.65M12 18.72v2.87M6.26 3.41v2.87M17.74 3.41v2.87"
  }));
};

const SvgBikeBicycle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 15.3,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 15.3,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.32 15.77 2.86-7.63h8.59l1.91 7.63"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 8.14 12 14.82h-.96L8.18 8.14M8.18 5.27v2.87M6.27 5.27h3.82M16.77 8.14V6.23h1.91a1.91 1.91 0 0 0 1.91-1.91v-1"
  }));
};

const SvgBike = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.82 13.27a3.77 3.77 0 0 0-1.5-.27 3.82 3.82 0 1 0 3.82 3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 16.77,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 3.41h2.47a1.35 1.35 0 0 1 1.35 1.35 1.35 1.35 0 0 1-.4 1l-1.51 1.47.95 9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 10.09h-1.91l-4.78 6.68H5.32l3.82-6.68 1.9 6.68M9.14 6.27v3.82M7.23 6.27H12M9.14 10.09h6.68"
  }));
};

const SvgBikini = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 15.82v2.86c-3.16 0-5.73 1.71-5.73 3.82h-3.82c0-2.11-2.57-3.82-5.73-3.82v-2.86ZM11.05 9.14a3.82 3.82 0 0 1-7.64 0 6 6 0 0 1 1.91-3.82ZM13 9.14a3.82 3.82 0 0 0 7.64 0 6 6 0 0 0-1.91-3.82ZM11.05 9.14h1.9M5.32 5.32 8.6 2.69A5.45 5.45 0 0 1 12 1.5a5.45 5.45 0 0 1 3.4 1.19l3.28 2.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBillboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h19.09v11.45H2.45zM.55 1.5h22.9M.55 12.95h22.9M10.09 12.95h3.82v9.55h-3.82zM18.68 22.5H5.32"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 7.23,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.95 5.32h5.73M12.95 9.14h5.73"
  }));
};

const SvgBinoculars = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 18.68h8.59v3.82H1.5zM13.91 18.68h8.59v3.82h-8.59zM9.14 13.91v4.77H2.46l.95-13.36h5.73v4.77M14.86 13.91v4.77h6.69l-.96-13.36h-5.73v4.77M4.36 1.5h3.82v3.82H4.36zM15.82 1.5h3.82v3.82h-3.82zM2.45 1.5h7.64M13.91 1.5h7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 10.09h9.55v3.82H7.23z"
  }));
};

const SvgBirdFountain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.53 7H8.47A7.24 7.24 0 0 1 2 3h20a7.24 7.24 0 0 1-6.47 4ZM12 7v8a6 6 0 0 1-6 6M12 7v8a6 6 0 0 0 6 6M10 14h4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBitcoinCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "bitcoin coin"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18h4.77a1.91 1.91 0 0 1 1.91 1.91v0A1.91 1.91 0 0 1 13.91 12H9.14h0V8.18h0ZM9.14 12h4.77a1.91 1.91 0 0 1 1.91 1.91v0a1.91 1.91 0 0 1-1.91 1.91H9.14h0V12h0ZM10.09 6.27v1.91M13.91 6.27v1.91M10.09 15.82v1.91M13.91 15.82v1.91M8.18 8.18h.96M8.18 15.82h.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgBitcoin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 4.36h7.64a3.82 3.82 0 0 1 3.82 3.82v0A3.82 3.82 0 0 1 14.86 12H7.23h0V4.36h0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 12h7.64a3.82 3.82 0 0 1 3.82 3.82v0a3.82 3.82 0 0 1-3.82 3.82H7.23h0V12h0ZM5.32 4.36h1.91M5.32 19.64h1.91M10.09 1.5v2.86M13.91 1.5v2.86M10.09 19.64v2.86M13.91 19.64v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgBlankFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBlockChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.07,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.38 6.69-6.76 6.75M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgBlockClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.38 10.53-6.76 6.76M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBlockEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.55 2.77-5.1 5.09M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }));
};

const SvgBlockFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.38 11.49-6.76 6.75M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgBlockFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.7 12.16-5.4 5.41M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgBlockMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.07,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.38 6.69-6.76 6.75M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgBlockProhibited = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 4.36 4.36 19.64"
  }));
};

const SvgBlockShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.38 8.62-6.72 6.72"
  }));
};

const SvgBlockWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.92,
    r: 3.84,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.72 12.21-5.43 5.42M1.45 1.49h21.1v21.1H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55 7.25H1.45V1.49h21.1v5.76zM4.33 4.37h1.92M8.17 4.37h1.91M12 4.37h1.92"
  })));
};

const SvgBlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.19 6.12-9.07 9.07A6.7 6.7 0 0 1 12 5.32a6.59 6.59 0 0 1 3.19.8ZM18.68 12A6.68 6.68 0 0 1 12 18.68a6.59 6.59 0 0 1-3.19-.8l9.07-9.07a6.59 6.59 0 0 1 .8 3.19Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBlogWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.24 11.08h13.42M5.24 18.76h13.42M5.24 14.92h13.42M1.4 1.49h21.1v21.1H1.4z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 7.25H1.4V1.49h21.1v5.76zM4.28 4.37H6.2M8.11 4.37h1.92M11.95 4.37h1.92"
  })));
};

const SvgBlogger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 9.14V5.55a4 4 0 0 0-4-4H5.55a4 4 0 0 0-4 4.05v13.08a3.82 3.82 0 0 0 3.77 3.82h13.36a3.82 3.82 0 0 0 3.82-3.82V13a1.9 1.9 0 0 0-1.91-1.9 1.92 1.92 0 0 1-1.91-1.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 6.27,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 14.86,
    width: 10.5,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBloodDrip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Blood drip"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 23.5v-22h16.26M13.93 23.5v-2.87M13.93 1.5v3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 5.33v9.56a5.74 5.74 0 0 1-5.74 5.74 5.74 5.74 0 0 1-5.73-5.74V5.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.49 13.3a2.56 2.56 0 0 1-5.11 0c0-2.23 2.55-4.15 2.55-4.15s2.56 1.92 2.56 4.15Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBloodPressure = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.52 1.5h8.4A2.1 2.1 0 0 1 12 3.6v6.3A2.1 2.1 0 0 1 9.92 12h-8.4V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.7,
    cy: 6.27,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.16 11.05V12A3.82 3.82 0 0 0 12 15.82h2.91A3.81 3.81 0 0 0 18.7 12V6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 14.89,
    y: 18.68,
    width: 6.68,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.48 20.59h-1.91M3.43 11.05V13a7.64 7.64 0 0 0 7.64 7.64h3.82M5.34 1.5v7.64"
  }));
};

const SvgBlueprintPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.23V22.5h18.14a2.87 2.87 0 0 0 0-5.73h-1.91V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 1.5v15.27h1.91a2.88 2.88 0 0 1 2 .84 2.85 2.85 0 0 1 .84 2V4.36a2.87 2.87 0 0 0-2.84-2.86ZM13.91 18.68H5.32v-8.59M7.23 12H5.32M7.23 14.86H5.32M9.14 16.77v1.91M12 16.77v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBlueprint = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36 4.36 1.5l2.87 2.86M19.64 16.77l2.86 2.87-2.86 2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 19.64H4.36V1.5M8.18 1.5H22.5v14.32M19.64 1.5 4.36 16.77M22.5 4.36 7.23 19.64M13.91 1.5l-9.55 9.55M22.5 10.09l-9.55 9.55"
  }));
};

const SvgBoiledEgg = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 11.16c0 4.75-3.42 7.52-7.64 7.52s-7.64-2.77-7.64-7.52S7.78 1.5 12 1.5s7.64 4.92 7.64 9.66ZM12 22.5v-3.82M7.23 22.5h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13a30.88 30.88 0 0 0 15.28 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBold = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.3 1.5h7.16a5.25 5.25 0 0 1 5.24 5.25A5.25 5.25 0 0 1 12.45 12H5.3V1.5ZM5.3 12h9.07a5.25 5.25 0 0 1 5.25 5.25 5.25 5.25 0 0 1-5.25 5.25H5.3V12ZM3.39 1.5H5.3M3.39 22.5H5.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBolt = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.2 3H6.8l-5.19 9 5.19 9h10.4l5.19-9-5.19-9z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 4,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBomb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.84 21.16A8 8 0 0 1 4.34 12L7 9.32a3.63 3.63 0 0 1 5.14 0l2.57 2.57a3.63 3.63 0 0 1 0 5.14l-2.63 2.63a8 8 0 0 1-9.24 1.5ZM10.56 21.16l-7.72-7.72M5.41 10.87l7.72 7.72M18.36 12l-4.54-1.82L12 5.64 15.57 2l.27.62L17.5 6.5 22 8.43 18.36 12z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBoneJoint = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "knee join"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M13.92 23.5v-3.83a2.88 2.88 0 0 0 0-5.75A2.87 2.87 0 0 0 11 16.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.65a2.88 2.88 0 0 0-4.79 2.14 2.87 2.87 0 0 0 2.87 2.88v3.83M10.08.5v3.83a2.88 2.88 0 0 0 0 5.75A2.87 2.87 0 0 0 13 7.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.35a2.88 2.88 0 0 0 4.79-2.14 2.87 2.87 0 0 0-2.87-2.88V.5M20.62 11.04h2.88M22.54 5.29l-2.87 1.92M22.54 16.79l-2.87-1.91M3.38 11.04H.5M1.46 16.79l2.87-1.92M1.46 5.29l2.87 1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m10.08 10.54 3.71-3.7a3.34 3.34 0 1 1 6-2.58",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.26 19.76a3.28 3.28 0 0 1-1.78-.93 3.34 3.34 0 0 1 4.37-5l3.69-3.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.19 16.81a3.34 3.34 0 1 0 5 .37l.81-.78 2.48-2.49.23-.23L16.38 11s.77-.77.78-.76a3.34 3.34 0 1 0-.36-5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H5.32A1.91 1.91 0 0 1 4 19.24a1.89 1.89 0 0 1 1.35-.56h15.24M19.64 18.68v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 1.5v17.18H5.32a1.91 1.91 0 0 0-1.91 1.91V3.41A1.92 1.92 0 0 1 5.32 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 13.91-1.93-.95-1.89.95V1.5H12v12.41z"
  }));
};

const SvgBookmarkEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 9.14 12 7.23 9.14 9.14V1.5h5.72v7.64z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 7.23h4.77V22.5h-21V7.23h4.77"
  }));
};

const SvgBookmarkStar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.67 21.5 12 17.69 5.33 21.5v-20h13.34v20z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 7.87.59 1.19 1.31.19-.95.93.23 1.31-1.18-.62-1.18.62.23-1.31-.95-.93 1.31-.19.59-1.19z"
  }));
};

const SvgBookshelfBooks = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5H12v21H2.45zM12 1.5h9.55v21H12zM5.32 5.32h3.82M5.32 9.14h3.82M14.86 5.32h3.82M14.86 9.14h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 12.95h5.73v5.73H2.45zM12 12.95h5.73v5.73H12z"
  }));
};

const SvgBookshelfLibrary = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M2.45 1.5h4.77v21H2.45zM7.23 7.23h3.82V22.5H7.23zM16.77 2.45h4.77V22.5h-4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 4.36h5.73V22.5h-5.73zM7.23 17.73h3.82M12.95 18.68h1.91M2.45 18.68h4.78M2.45 5.32h4.78"
  }));
};

const SvgBookshelf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 12.98H12v8.61H3.39zM12 12.98h8.61v8.61H12zM5.3 23.5v-1.91M18.7 23.5v-1.91M8.17 15.85v1.91M15.83 15.85v1.91M3.39 7.24h17.22v5.74H3.39zM3.39 1.5h17.22v5.74H3.39zM6.26 3.41v3.83M9.13 4.37v2.87M12 3.41v2.87M14.87 10.11v2.87M17.74 9.15v2.87"
  }));
};

const SvgBootShoeFootwear = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 10.09V1.5H3.41v17.18h17.18v-1.91a6.68 6.68 0 0 0-6.68-6.68ZM3.41 18.68h17.18v3.82H3.41z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 12a6.68 6.68 0 0 1 6.68 6.68H3.41V12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBoot = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 18.68h19.09v3.82H2.45zM7.23 12h1v6.68H2.45v-1.91A4.77 4.77 0 0 1 7.23 12ZM6.27 20.59v1.91M10.09 20.59v1.91M13.91 20.59v1.91M17.73 20.59v1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 18.68V6.27a1.92 1.92 0 0 0-1.91-1.91h-1.05a5.16 5.16 0 0 1-4.31-2.31 1.26 1.26 0 0 0-1-.55A1.25 1.25 0 0 0 12 2.74v5.44A3.82 3.82 0 0 1 8.18 12M12 7.23h3.82M11.09 11.05h4.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 18.68a4.78 4.78 0 0 1 4.78-4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBottleGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 9.14V1.5H4.36v7.64l-.31.21a5.73 5.73 0 0 0-2.55 4.76v8.39h9.55v-8.39A5.73 5.73 0 0 0 8.5 9.35ZM2.45 1.5h7.64M14.86 8.18h7.64v5.73a3.82 3.82 0 0 1-3.82 3.82 3.82 3.82 0 0 1-3.82-3.82V8.18ZM1.5 13.91h9.55M1.5 17.73h9.55M18.68 22.5v-4.77M21.55 22.5h-5.73M14.86 12.95h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBottleSpoon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 5.32v1.91L1.5 10.09v10.5a1.9 1.9 0 0 0 1.91 1.91h7.64A1.9 1.9 0 0 0 13 20.59v-10.5l-2.91-2.86V5.32M3.41 1.5h7.64v3.82H3.41zM22.5 6.65c0 2.38-1.71 3.44-3.82 3.44S14.86 9 14.86 6.65s1.71-5.15 3.82-5.15 3.82 2.78 3.82 5.15ZM18.68 10.09v7.64M18.68 17.73a1.16 1.16 0 0 1 1.14.93l.77 3.84h-3.82l.77-3.84a1.17 1.17 0 0 1 1.14-.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 15a1.91 1.91 0 0 1-3.82 0c0-1.67 1.91-3.1 1.91-3.1s1.91 1.41 1.91 3.1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBowArrowHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 1.5a6.53 6.53 0 0 0 4.62 1.91A5 5 0 0 1 11 8.36v1.75L12.93 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 22.54a6.53 6.53 0 0 1-1.91-4.62A5 5 0 0 0 15.64 13h-1.75L12 11.07M18.67 1.5h-1a1.92 1.92 0 1 0 0 3.83h1v1a1.92 1.92 0 1 0 3.83 0V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 19.67h3.83L18.67 5.33M4.33 19.67v3.83M2.41 16.8H7.2M7.2 16.8v4.79M2.41 2.46v11.47M21.5 21.59H10.07"
  }));
};

const SvgBoxFiling = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "storage box"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v4.77h-21zM2.45 6.27h19.09V22.5H2.45z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 10.09,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBrain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 4.36v16.23a1.92 1.92 0 0 1-1.91 1.91 1.93 1.93 0 0 1-1.91-1.91 2.45 2.45 0 0 1-.48 0 3.35 3.35 0 0 1-3.34-3.34 3.19 3.19 0 0 1 .08-.7 4.29 4.29 0 0 1-.84-7.76 3.24 3.24 0 0 1-.19-1.09 3.34 3.34 0 0 1 2.86-3.3 2.87 2.87 0 0 1 5.73 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.75 11.05a3.35 3.35 0 0 1 0-6.69M8.18 13.91A3.82 3.82 0 0 1 12 17.73M9.14 7.23A2.86 2.86 0 0 0 12 4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 4.36v16.23a1.92 1.92 0 0 0 1.91 1.91 1.93 1.93 0 0 0 1.91-1.91 2.45 2.45 0 0 0 .48 0 3.35 3.35 0 0 0 3.34-3.34 3.19 3.19 0 0 0-.08-.7 4.29 4.29 0 0 0 .84-7.76 3.24 3.24 0 0 0 .19-1.09 3.34 3.34 0 0 0-2.86-3.3 2.87 2.87 0 0 0-5.73 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.25 11.05a3.35 3.35 0 0 0 0-6.69M15.82 13.91A3.82 3.82 0 0 0 12 17.73M14.86 7.23A2.86 2.86 0 0 1 12 4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBrandenburgGate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 22.5h22.96M2.43 10.07V22.5M6.26 10.07V22.5M17.74 10.07V22.5M21.57 10.07V22.5M.52 10.07h22.96M2.43 6.24h5.74v3.83H2.43zM15.83 6.24h5.74v3.83h-5.74zM8.17 5.28h7.65v4.78H8.17zM12 .5v4.78M9.13 1.46v3.82M14.87 1.46v3.82M.52 6.24h1.91M23.48 6.24h-1.91"
  }));
};

const SvgBreadLoaf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 9.14a3.81 3.81 0 0 0-3.86-3.82H5.32A3.82 3.82 0 0 0 1.5 9.14a1.91 1.91 0 0 0 1 1.64v5.77a2.13 2.13 0 0 0 2.14 2.13h5.23A2.13 2.13 0 0 0 12 16.55v-5.77a1.89 1.89 0 0 0 1-1.64ZM14.86 5.32h3.82a3.82 3.82 0 0 1 3.82 3.82 1.89 1.89 0 0 1-.95 1.64v5.76a2.14 2.14 0 0 1-2.14 2.14h-5.27M12 16.54v-5.76M6.27 5.32h10.5M7.23 18.68h8.59M12 11.05h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBreasts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 4.36a8.66 8.66 0 0 1 1.34 6.26L2.45 13v1.91a4.78 4.78 0 1 0 9.55 0M6.27 16.77h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 4.36a8.66 8.66 0 0 0-1.34 6.26l.39 2.38v1.91a4.78 4.78 0 1 1-9.55 0M17.73 16.77h-1.91M8.18 10.09A6.05 6.05 0 0 1 12 13.91M15.82 10.09A6.05 6.05 0 0 0 12 13.91M12 14.86v-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBridgeTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 21.52V7.21h5.73v14.31M16.77 21.52V7.21h5.73v14.31M7.23 8.16h9.54M1.5 7.21l2.86-4.77 2.87 4.77M4.36.53v1.9M16.77 7.21l2.87-4.77 2.86 4.77M19.64.53v1.9M7.23 13.89h9.54M1.5 14.84h5.73M16.77 14.84h5.73M4.36 11.98v2.86M19.64 11.98v2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.25 20.6a2.72 2.72 0 0 0 5.24 0M12 20.58a2.72 2.72 0 0 0 5.24 0M1.5 20.58a2.72 2.72 0 0 0 5.25 0M6.75 20.57a2.72 2.72 0 0 0 5.24 0M7.23 18.66A4.77 4.77 0 0 1 12 13.89a4.77 4.77 0 0 1 4.77 4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBridge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25.48v21.09M17.75.48v21.09M17.75 1.44c0 4.4-3.1 8-5.75 8s-5.75-3.56-5.75-8M6.25 2.1c0 4.4-2 8-5.75 8M23.5 10.07c-3.7 0-5.75-3.57-5.75-8M.5 13.9h23M10.08 13.9V8.74M13.92 13.9V8.74M2.42 9.11v4.79M21.58 9.11v4.79M6.72 20.61h.01M17.27 20.63a2.73 2.73 0 0 0 5.26 0M12 20.62a2.73 2.73 0 0 0 5.26 0M1.46 20.61a2.73 2.73 0 0 0 5.27 0M6.73 20.61a2.73 2.73 0 0 0 5.26 0"
  }));
};

const SvgBroadcast = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.24 19.6A10.5 10.5 0 1 0 1.5 12a10.44 10.44 0 0 0 3.26 7.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.07 16.34A6.58 6.58 0 0 0 18.68 12a6.68 6.68 0 0 0-13.36 0 6.58 6.58 0 0 0 1.61 4.34",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.73 12.85a5.08 5.08 0 0 0 .13-.85 2.84 2.84 0 0 0-2.58-2.84 2 2 0 0 0-.56 0A2.84 2.84 0 0 0 9.14 12a5.08 5.08 0 0 0 .13.85M17.73 22.5H6.27L12 13.91l5.73 8.59z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBrokenFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.59 12-2.86 1.91L14.86 12l-2.87 1.91L9.14 12l-2.87 1.91L3.41 12V1.5h12.41l4.77 4.77V12zM20.59 15.82l-2.86 1.91-2.87-1.91-2.87 1.91-2.85-1.91-2.87 1.91-2.86-1.91v6.68h17.18v-6.68z"
  }));
};

const SvgBrokenFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 3.41v8.9l-1.91-1.27-2.86 1.92-2.87-1.92-2.87 1.92-2.85-1.92-2.87 1.92-2.86-1.92-1.91 1.27V1.5h8.59l1.87 1.91H22.5zM20.59 14.86l1.91 1.27v4.46a1.92 1.92 0 0 1-1.91 1.91H3.41a1.92 1.92 0 0 1-1.91-1.91v-4.46l1.91-1.27 2.86 1.91 2.87-1.91L12 16.77l2.87-1.91 2.87 1.91ZM1.5 7.23h21"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 12.31 1.91-1.27 2.86 1.92 2.87-1.92 2.85 1.92 2.87-1.92 2.87 1.92 2.86-1.92 1.91 1.27M1.5 16.13l1.91-1.27 2.86 1.91 2.87-1.91 2.85 1.91 2.87-1.91 2.87 1.91 2.86-1.91 1.91 1.27"
  }));
};

const SvgBrokenHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 3.41A5.73 5.73 0 0 0 12 6 5.73 5.73 0 0 0 1.5 9.14C1.5 17.73 12 20.59 12 20.59s10.5-2.86 10.5-11.45a5.72 5.72 0 0 0-5.73-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 6.27-1.91 2.87L13.91 12l-2.87 2.86 1.92 1.91"
  }));
};

const SvgBrushTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 20.11,
    cy: 3.89,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 22.5 18.2 5.8M8.18 19.64l-3.82-3.82M11.05 16.77l-3.82-3.82M5.32 22.5 1.5 18.68"
  }));
};

const SvgBrush = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.3 1.46h15.34v9.59H4.3zM13.89 20.64v-4.79h3.35a2.4 2.4 0 0 0 2.4-2.4v-2.4H4.3v2.4a2.4 2.4 0 0 0 2.4 2.4h3.35v4.79A1.92 1.92 0 0 0 12 22.56a1.92 1.92 0 0 0 1.89-1.92ZM9.09 7.22V1.46"
  })));
};

const SvgBugClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 13.91h-2.87M9.14 13.91H6.27M7.23 10.09A1.92 1.92 0 0 0 9.14 12M14.86 12a1.92 1.92 0 0 0 1.91-1.91M7.23 17.73a1.92 1.92 0 0 1 1.91-1.91M14.86 15.82a1.92 1.92 0 0 1 1.91 1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 10.09,
    width: 5.73,
    height: 7.64,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBugCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 16.79h1a3.82 3.82 0 0 0 3.83-3.57 2.35 2.35 0 0 0 0-.26 3.84 3.84 0 0 0-3.87-3.84h-1V7.2A5.75 5.75 0 0 0 12 1.45h-.21A5.71 5.71 0 0 0 7 4.42l-.13.26a6.49 6.49 0 0 0-.62 2.52A4.78 4.78 0 0 0 1.44 12a1.34 1.34 0 0 0 0 .2 4.79 4.79 0 0 0 4.78 4.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.11,
    y: 13.92,
    width: 5.75,
    height: 8.63,
    rx: 2.88,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.15 22.55 1.92-1.92M15.83 22.55l-1.92-1.92M15.83 13.92l-1.92 1.91M8.15 13.92l1.92 1.91M16.78 17.75H7.19"
  })));
};

const SvgBugEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 7.31 3.82 2.78V22.5h-21V10.09l3.82-2.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 10.09 12 18.68l10.5-8.59"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 12.87V1.5h13.36v11.37"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 4.36,
    width: 3.82,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 4.36 1.91.96M15.82 4.36l-1.91.96M8.18 12l1.91-.95M15.82 12l-1.91-.95M16.77 8.18h-2.86M7.23 8.18h2.86"
  }));
};

const SvgBugFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 14.86h-2.87M9.14 14.86H6.27M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM7.23 10.09v1A1.91 1.91 0 0 0 9.14 13M16.77 10.09v1A1.91 1.91 0 0 1 14.86 13M7.23 19.64v-1a1.92 1.92 0 0 1 1.91-1.91M16.77 19.64v-1a1.92 1.92 0 0 0-1.91-1.91"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 11.05,
    width: 5.73,
    height: 7.64,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBugInsect = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 13.95h-5.76M6.23 13.95H.48M17.74 11.07v5.76a5.89 5.89 0 0 1-.08 1 5.75 5.75 0 0 1-11.34 0 4.94 4.94 0 0 1-.09-1v-5.76a5.12 5.12 0 0 1 .09-1A5.76 5.76 0 0 1 16.06 7a5.63 5.63 0 0 1 1.6 3.11 6.12 6.12 0 0 1 .08.96Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.44 4.36v.81a4.91 4.91 0 0 0 1.4 3.44 4.93 4.93 0 0 0 3.51 1.47h11.28a4.91 4.91 0 0 0 3.47-1.41 4.91 4.91 0 0 0 1.44-3.47v-.84M17.66 17.78a4.81 4.81 0 0 1 3.38 1.4l.08.08a4.77 4.77 0 0 1 1.4 3.38v.9M1.44 23.54v-.87a4.78 4.78 0 0 1 1.36-3.34l.11-.11a4.78 4.78 0 0 1 3.41-1.44M11.99 10.11v12.47M6.23 10.11h11.51",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 1.48a2.88 2.88 0 0 1 2.88 2.88v2.43M8.15 6.79V4.36A2.88 2.88 0 0 1 11 1.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgBugLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.64a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86 1.9 1.9 0 0 1 1.91-1.91h5.73l.95.95h3.82l.95-.95h5.73a1.9 1.9 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 5.32h.95a1.92 1.92 0 0 1 1.91 1.91v10.5M3.41 17.73V7.23a1.92 1.92 0 0 1 1.91-1.91h.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 1.5,
    width: 3.82,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 1.5 1.91.95M15.82 1.5l-1.91.95M8.18 9.14l1.91-.96M15.82 9.14l-1.91-.96M16.77 5.32h-2.86M7.23 5.32h2.86"
  }));
};

const SvgBugMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5h1.91a1.9 1.9 0 0 1 1.91 1.91v13.36a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V3.41A1.9 1.9 0 0 1 3.41 1.5h15.27ZM12 22.5v-3.82M16.77 22.5H7.23M1.5 14.86h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 4.36,
    width: 3.82,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 4.36 1.91.96M15.82 4.36l-1.91.96M8.18 12l1.91-.95M15.82 12l-1.91-.95M16.77 8.18h-2.86M7.23 8.18h2.86"
  }));
};

const SvgBuildWall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.3 18.68h5.73v3.82H5.3zM1.48 14.86h5.73v3.82H1.48z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.34 11.05h5.73v3.82H4.34z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.2 14.86h5.73v3.82H7.2zM12.93 14.86h5.73v3.82h-5.73zM11.02 18.68h5.73v3.82h-5.73zM16.75 18.68h5.73v3.82h-5.73zM19.61 10.09l-4.14 1.66a1 1 0 0 1-1.11-.23 1 1 0 0 1-.22-1.1l1.66-4.15a3.82 3.82 0 0 1 3.81 3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.66 7.23.95-.96V3.41l2.87-1.91M5.3 22.5H.52"
  }));
};

const SvgBuildingAsian = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 13.89c1.92-1 3.83-1.91 3.83-3.82h11.48c0 1.91 1.91 2.86 3.83 3.82M1.48 13.89h21.04M5.3 6.24c1.92-1 3.83-1.91 3.83-3.83h5.74c0 1.92 1.91 2.87 3.83 3.83M5.3 6.24H3.39h17.22-1.91M9.13.5v1.91M14.87.5v1.91M6.26 6.24v3.83M10.09 6.24v3.83M13.91 6.24v3.83M17.74 6.24v3.83M2.43 17.72h19.13v4.78H2.43zM6.26 19.63v2.87M10.09 19.63v2.87M13.91 19.63v2.87M17.74 19.63v2.87M4.35 13.89v3.83M19.65 13.89v3.83M15.83 13.89v3.83M8.17 13.89v3.83M12 13.89v3.83M.52 22.5h22.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBuildingChurchReligion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v5.74M10.09 2.41h3.82M12 6.24a3.83 3.83 0 0 1 3.83 3.83v1H8.17v-1A3.83 3.83 0 0 1 12 6.24ZM6.26 11.02h11.48"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 11.02h7.65v5.74H8.17zM12 13.89v2.87M6.26 16.76h11.48v5.74H6.26zM10.09 19.63v2.87M13.91 19.63v2.87M4.35 16.76h15.3M2.43 22.5h19.14"
  }));
};

const SvgBuildingChurch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 22.48H7.23V9.11L12 5.29l4.77 3.82v13.37zM7.23 22.48H1.5v-7.64l5.73-3.82v11.46zM16.77 22.48h5.73v-7.64l-5.73-3.82v11.46zM4.36 17.7h2.87M16.77 17.7h2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 17.7a1 1 0 0 1 1 1v3.82h-2v-3.86a1 1 0 0 1 1-.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.98,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .52V5.3M10.09 2.43h3.82"
  }));
};

const SvgBuildingColumn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M22.5 6.27v2.87h-21V6.27L12 1.5l10.5 4.77zM1.5 18.68h21v3.82h-21zM3.41 9.14v9.54M9.14 9.14v9.54M14.86 9.14v9.54M20.59 9.14v9.54"
  }));
};

const SvgBuildingConstruction = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.65 22.5H4.35V7.2h5.74L12 11.02h7.65V22.5zM.52 22.5h22.96M7.22 14.85h1.91M7.22 11.02h1.91M7.22 18.67h1.91M11.04 18.67h1.92M14.87 18.67h1.91M11.04 14.85h1.92M14.87 14.85h1.91M6.26.5v6.7M17.74 2.41v7.66M12 .5v9.57M4.35 3.37H12M12 6.24h7.65"
  }));
};

const SvgBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 14.88h1.92M11.04 11.04h1.92M11.04 7.21h1.92M7.21 14.88h1.92M7.21 11.04h1.92M7.21 7.21h1.92M14.88 14.88h1.91M14.88 11.04h1.91M14.88 7.21h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 18.71h5.75v3.83H9.13z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.54H.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.79 3.38V1.46H7.21v1.92H4.33v19.16h15.34V3.38h-2.88z"
  }));
};

const SvgBulldozer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.46,
    y: 15.83,
    width: 14.35,
    height: 4.78,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 10.09h11.48l2.86 2.87v2.87H4.33l-2.87-2.87v-2.87zM22.5 20.61h-3.83a2.88 2.88 0 0 1-2.87-2.87V13h1.92l4.78 5.7ZM10.06 10.09H2.41v-6.7h5.74l1.91 6.7zM.5 3.39h10.52M14.85 6.26a1.92 1.92 0 0 0-1.92 1.91v1.92"
  }));
};

const SvgBulletTrain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 16.79h18.21A3.82 3.82 0 0 0 22.54 13 9.59 9.59 0 0 0 13 3.38H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.38,
    cy: 18.71,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.92,
    cy: 18.71,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.75,
    cy: 18.71,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.54 13h-6.71A3.84 3.84 0 0 1 12 9.12a1.93 1.93 0 0 1 1.92-1.91h6.7A9.55 9.55 0 0 1 22.54 13ZM.5 7.21h5.75a1.92 1.92 0 0 1 1.92 1.91A1.92 1.92 0 0 1 6.25 11H.5M3.38 7.21v3.83M.5 20.63h23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBullhornMegaphone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 19.61h-.05a16.09 16.09 0 0 0-11.4-4.73V7.2a16.08 16.08 0 0 0 11.4-4.72h.05ZM18.68.52v21M18.68 8.16l3.82.95v3.82l-3.82.96V8.16z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 7.2h1.91v7.64H5.32A3.82 3.82 0 0 1 1.5 11a3.82 3.82 0 0 1 3.82-3.8ZM8.18 14.84l1.34 5.34a1.86 1.86 0 0 1-1.8 2.3 1.86 1.86 0 0 1-1.8-1.41l-1.56-6.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBullhorn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 18.68h-.95l-8.59-4.77V6.27l8.59-4.77h.95v17.18zM5.32 6.27h3.82v7.64H5.32a3.82 3.82 0 0 1-3.82-3.82 3.82 3.82 0 0 1 3.82-3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 13.91h3.82l1.9 8.59H7.23l-1.91-8.59zM18.68 8.18h1.91a1.91 1.91 0 0 1 1.91 1.91A1.91 1.91 0 0 1 20.59 12h-1.91V8.18Z"
  }));
};

const SvgBunkbeds = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 16.77h18.14a2.86 2.86 0 0 1 2.86 2.86v1h-21v-3.86ZM3.15 13.91h3.38a1.65 1.65 0 0 1 1.65 1.65v1.21H1.5v-1.21a1.65 1.65 0 0 1 1.65-1.65ZM10.09 16.77v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 23.45V9.14h21v14.31"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.32h18.14a2.86 2.86 0 0 1 2.86 2.86v1h-21V5.32ZM3.15 2.45h3.38a1.65 1.65 0 0 1 1.65 1.66v1.21H1.5V4.11a1.65 1.65 0 0 1 1.65-1.66ZM10.09 5.32v3.82M1.5.55v4.77M22.5 3.41v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBurjElArab = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 22.5h21.04M8.17.5v22M8.17 22.5h9.57l-.45-8.16A13.37 13.37 0 0 0 8.17 2.41ZM8.17 10.07H12M8.17 13.89H12M8.17 17.72H12M12.96 17.72h1.91M12.96 13.89h1.91M4.35 5.28h3.82M16.78 5.28h-3.77"
  }));
};

const SvgBusFront = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 4.36h15.27v14.32H4.36zM7.23 1.5h9.55a2.86 2.86 0 0 1 2.86 2.86H4.36A2.86 2.86 0 0 1 7.23 1.5ZM4.36 18.68h3.82v2.86a1 1 0 0 1-1 1H5.32a1 1 0 0 1-1-1v-2.86h.04ZM15.82 18.68h3.82v2.86a1 1 0 0 1-1 1h-1.87a1 1 0 0 1-1-1v-2.86h.05Z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 19.64,
    y: 5.32,
    width: 2.86,
    height: 5.73,
    rx: 1.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 5.32,
    width: 2.86,
    height: 5.73,
    rx: 1.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.7,
    cy: 15.34,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 15.34,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 15.82h3.82M4.36 12h15.28"
  }));
};

const SvgBusTransportation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 17.73H1.5V6.27a1.91 1.91 0 0 1 1.91-1.91h17.18a1.91 1.91 0 0 1 1.91 1.91v11.46h-2.86M15.82 17.73H8.18M17.73 5.32v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13h-2.86a1.9 1.9 0 0 1-1.91-1.9v-1H1.5M13.91 5.32v4.77M6.27 5.32v4.77M10.09 5.32v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgBusVehicle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 17.73H1.5V6.27a1.92 1.92 0 0 1 1.91-1.91h14a1.91 1.91 0 0 1 1.85 1.45l1.3 5.24 1.94 1.15v5.53h-2.86M15.82 17.73H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 11.05h16.23M15.82 7.23V12M11.05 7.23V12M6.27 7.23V12M20.59 14.86h1.91"
  }));
};

const SvgBus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.37 17.74H1.5V6.26a1.92 1.92 0 0 1 1.91-1.91h16.51A1.93 1.93 0 0 1 21.82 6l.72 5.24v6.5h-2.87M15.85 17.74H8.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.76,
    cy: 17.74,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.28,
    cy: 17.74,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 12H23.5M17.76 7.22V12M12.02 7.22V12M6.28 7.22V12"
  }));
};

const SvgBusinessBriefcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81zM6.27 6.27v15.28M17.73 6.27v15.28"
  }));
};

const SvgBusinessMan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.5,
    r: 5.45,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2 23a10 10 0 0 1 10-10 10 10 0 0 1 10 10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.27 12.96 12 22.05l-4.54-1.82.9-1.82-1.82-.91.92-3.64 1.81-.9zM14.73 12.96 12 22.05l4.55-1.82-.91-1.82 1.81-.91-.9-3.64-1.82-.9z"
  }));
};

const SvgBusinessSuitcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "briefcase simple"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13h4.77a3.81 3.81 0 0 0 3.82-3.86v-1a1.91 1.91 0 0 0-1.91-1.91H3.41A1.91 1.91 0 0 0 1.5 8.18v1A3.81 3.81 0 0 0 5.32 13h8.59Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12v1.91M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81z"
  })));
};

const SvgBusinessWoman = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.5,
    r: 5.45,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2 23a10 10 0 0 1 10-10 10 10 0 0 1 10 10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.27 12.96 12 22.05l-4.54-1.82.9-1.82-1.82-.91.92-3.64 1.81-.9zM14.73 12.96 12 22.05l4.55-1.82-.91-1.82 1.81-.91-.9-3.64-1.82-.9z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.71 14.46a4.51 4.51 0 0 1-1.56-1 4.58 4.58 0 0 1-1.33-3.22A2.73 2.73 0 0 0 6.55 7.5M17.45 7.5a2.73 2.73 0 0 0 2.73 2.73 4.58 4.58 0 0 1-1.33 3.22 4.51 4.51 0 0 1-1.56 1M6.55 6.59h10.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgButt = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 16.77a3.26 3.26 0 0 0 2.3 1h.56A3.82 3.82 0 0 0 12 13.91v-2.07a6.52 6.52 0 0 0-1.91-4.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 16.77a3.26 3.26 0 0 1-2.3 1h-.56A3.82 3.82 0 0 1 12 13.91v-2.07a6.52 6.52 0 0 1 1.91-4.61M10.09 23.45a40.21 40.21 0 0 1 .4-5.69l.14-.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.37 16.84.14.92a40.21 40.21 0 0 1 .4 5.69M3.41.55v1.24a13.19 13.19 0 0 1-1 5 13.38 13.38 0 0 0-1 5v.43a59.23 59.23 0 0 0 .44 7.17l.51 4.14M20.59.55v1.24a13.19 13.19 0 0 0 1 5 13.38 13.38 0 0 1 .95 5v.51a57.67 57.67 0 0 1-.54 7.24l-.49 3.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCabin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 9.76a1.29 1.29 0 0 1-1.29 1.29H2.79A1.29 1.29 0 0 1 1.5 9.76a1.29 1.29 0 0 1 .48-1L10.3 2.1a2.69 2.69 0 0 1 1.7-.6 2.69 2.69 0 0 1 1.7.6L22 8.75a1.29 1.29 0 0 1 .5 1.01Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.57 11.04H5.44L12 6.27l6.57 4.77zM20.59 13a1.91 1.91 0 0 1-1.91 1.91H5.32A1.92 1.92 0 0 1 3.41 13 1.87 1.87 0 0 1 4 11.61a1.89 1.89 0 0 1 1.35-.56h13.33A1.91 1.91 0 0 1 20.59 13Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 14.86h3.82v3.82H5.32a1.92 1.92 0 0 1-1.91-1.91 1.93 1.93 0 0 1 1.91-1.91ZM20.59 16.77a1.91 1.91 0 0 1-1.91 1.91h-3.82v-3.82h3.82a1.92 1.92 0 0 1 1.91 1.91ZM5.32 18.68h3.82v3.82H5.32A1.91 1.91 0 0 1 4 19.24a1.89 1.89 0 0 1 1.32-.56ZM20.59 20.59a1.91 1.91 0 0 1-1.91 1.91h-3.82v-3.82h3.82a1.92 1.92 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86h5.73v7.64H9.14zM.55 22.5h22.9"
  }));
};

const SvgCableCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12h5.73v2.86A1.91 1.91 0 0 1 13 16.77h-2a1.91 1.91 0 0 1-1.91-1.91V12ZM13.91 8.18v3.81h-3.82V8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 16.77v3.61a1.88 1.88 0 0 0 2.25 1.87 10.49 10.49 0 1 0-9.68-2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCableUsb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12h5.73v2.86A1.91 1.91 0 0 1 13 16.77h-2a1.91 1.91 0 0 1-1.91-1.91V12h.05ZM10.09 8.18h3.82V12h-3.82z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 16.77v3.61a1.88 1.88 0 0 0 2.25 1.87 10.49 10.49 0 1 0-9.68-2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.32h5.73v2.86a1.91 1.91 0 0 1-1.91 1.91H3.41A1.91 1.91 0 0 1 1.5 8.18V5.32ZM2.45 1.5h3.82v3.82H2.45z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13.91h5.73v2.86a1.91 1.91 0 0 1-1.91 1.91h-1.91a1.91 1.91 0 0 1-1.91-1.91v-2.86Z",
    transform: "rotate(180 19.635 16.295)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 19.635 20.59)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 18.68h3.82v3.82h-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 10.09v8.59a3.82 3.82 0 0 0 3.82 3.82A3.82 3.82 0 0 0 12 18.68V5.32a3.82 3.82 0 0 1 3.82-3.82 3.82 3.82 0 0 1 3.82 3.82v8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCakeSlice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 18.68H22.5v3.82H5.32zM5.32 14.86H22.5v3.82H5.32zM6.27 11H22.5v3.82H5.32V12a1 1 0 0 1 .95-1Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 7.23a3.82 3.82 0 0 0-3.82 3.82V22.5h3.82V12a1 1 0 0 1 .95-.95H22.5V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 4.94a2.34 2.34 0 0 1-2.39 2.29 2.34 2.34 0 0 1-2.39-2.29c0-1.27 1.07-3.44 2.39-3.44s2.39 2.17 2.39 3.44ZM15.82 4.94a2.39 2.39 0 0 1-4.77 0c0-1.27 1.06-3.44 2.38-3.44s2.39 2.17 2.39 3.44ZM20.59 4.94a2.39 2.39 0 0 1-4.77 0c0-1.27 1.07-3.44 2.38-3.44s2.39 2.17 2.39 3.44Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCalculator = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36zM15.82 16.77v0Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 5.32h7.64v3.82H8.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12v1.91M8.18 12v1.91M12 14.86v1.91M8.18 14.86v1.91M12 17.73v1.91M8.18 17.73v1.91M15.82 12v1.91"
  }));
};

const SvgCalendarBell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.43h21V7.2h-21zM1.5 7.2h21v15.27h-21zM6.27.52v3.82M17.73.52v3.82M12 .52v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 11a2.86 2.86 0 0 1 2.86 2.86v2.86H9.14v-2.83A2.86 2.86 0 0 1 12 11ZM16.77 16.75H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.7,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCalendarDate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 2.41h21.04v4.78H1.48zM1.48 7.2h21.04v15.3H1.48zM6.26.5v3.83M17.74.5v3.83M12 .5v3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 18.67H6.26v-1L8.56 16a3.86 3.86 0 0 0 1.53-3.07A1.92 1.92 0 0 0 8.17 11H6.26M17.74 11h-3.83v3.83h1.92a1.91 1.91 0 0 1 1.91 1.91 1.91 1.91 0 0 1-1.91 1.91H13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCalendarDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 3.37h21.04v4.78H1.48zM1.48 8.15h21.04V22.5H1.48zM5.3 12.93h1.92M9.13 12.93h1.91M12.96 12.93h1.91M16.78 12.93h1.92M16.78 17.72h1.92M5.3 17.72h1.92M9.13 17.72h1.91M12.96 17.72h1.91M6.26.5v4.78M12 .5v4.78M17.74.5v4.78"
  }));
};

const SvgCalendarHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 2.41h19.13v4.78H1.43zM20.57 13.89V7.2H1.44v12.43h7.65M11 .5v3.83M15.78.5v3.83M6.22.5v3.83M13.87 17.72h5.74v4.78h-5.74z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.74 13.89-3.83 3.83h7.66l-3.83-3.83zM9.09 11.02H11M5.26 11.02h1.91M12.91 11.02h1.92M9.09 14.85H11M5.26 14.85h1.91"
  }));
};

const SvgCalendarSchedule = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 12 4.82)",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.43h21V7.2h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73.52v3.82M6.27.52v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 11.98V7.21h-21v15.27h21v-10.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 11.02h1.91M12.95 11.02h1.91M16.77 11.02h1.91M9.14 14.84h1.91M5.32 14.84h1.91M12.95 14.84h1.91M16.77 14.84h1.91M9.14 18.66h1.91M5.32 18.66h1.91M12.95 18.66h1.91"
  }));
};

const SvgCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 3.37h21.04v4.78H1.48zM1.48 8.15h21.04V22.5H1.48zM12 .5v4.78M6.26.5v4.78M17.74.5v4.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 12.94h3.83v2.86H7.22v2.87h3.82M13.91 12.93h3.83v2.87h-3.83zM13.91 15.8h3.83v2.87h-3.83z"
  }));
};

const SvgCallArrowDownLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 1.5-7.64 7.64M20.59 9.14h-5.73V3.41M18.75 21.38c-2.43 2.42-8 .79-12.46-3.67S.2 7.68 2.62 5.25l2.66-2.66 5.13 5.13-1.92 1.94a2.07 2.07 0 0 0 0 2.92l2.93 2.93a2.07 2.07 0 0 0 2.92 0l1.94-1.92 5.13 5.13Z"
  }));
};

const SvgCallArrowUpRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 9.14 22.5 1.5M16.77 1.5h5.73v5.73M18.75 21.38c-2.43 2.42-8 .79-12.46-3.67S.2 7.68 2.62 5.25l2.66-2.66 5.13 5.13-1.92 1.94a2.07 2.07 0 0 0 0 2.92l2.93 2.93a2.07 2.07 0 0 0 2.92 0l1.94-1.92 5.13 5.13Z"
  }));
};

const SvgCallDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18 20.45c-2.32 2.32-7.65.75-11.92-3.51S.25 7.34 2.57 5l2.55-2.52L10 7.38 8.18 9.24a2 2 0 0 0 0 2.8L11 14.83a2 2 0 0 0 2.81 0L15.64 13l4.9 4.9ZM13.37 8.74h1.83M17.02 8.74h1.83M20.67 8.74h1.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCallSlash = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 1.5-21 21M5 16.3C1.54 12.14.44 7.43 2.62 5.25l2.66-2.66 5.13 5.12-1.92 1.94a2.08 2.08 0 0 0 0 2.93l.11.11M10 14l1.35 1.35.11.11a2.08 2.08 0 0 0 2.93 0l1.94-1.92 5.12 5.13-2.66 2.66c-2.18 2.18-6.89 1.08-11-2.39-.48-.4-1-.83-1.41-1.28"
  }));
};

const SvgCallXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 9.14 22.5 1.5M22.5 9.14 14.86 1.5M18.75 21.38c-2.43 2.42-8 .79-12.46-3.67S.2 7.68 2.62 5.25l2.66-2.66 5.13 5.13-1.92 1.94a2.07 2.07 0 0 0 0 2.92l2.93 2.93a2.07 2.07 0 0 0 2.92 0l1.94-1.92 5.13 5.13Z"
  }));
};

const SvgCall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 21.25c-2.54 2.55-8.38.83-13-3.84S.2 6.9 2.75 4.36l2.78-2.79 5.37 5.37-2 2a2.18 2.18 0 0 0 0 3.06l3.1 3.1a2.18 2.18 0 0 0 3.07 0l2-2 5.37 5.37Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCallerId = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.18h9.55v7.64H5.32zM17.73 8.18h1.91M17.73 12h1.91M17.73 15.82h1.91"
  }));
};

const SvgCamcorderBack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 12.52v7.12a1.92 1.92 0 0 1-1.91 1.91H3.41a1.91 1.91 0 0 1-1.91-1.91V6.27a1.91 1.91 0 0 1 1.91-1.91H12a1.67 1.67 0 0 0 0 .39v5.91A2.29 2.29 0 0 0 14.29 13h5.92a2.33 2.33 0 0 0 1.34-.48Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 4.75v5.91a2.28 2.28 0 0 1-.95 1.86 2.33 2.33 0 0 1-1.34.43h-5.92A2.28 2.28 0 0 1 12 10.66V4.75a1.67 1.67 0 0 1 0-.39 2.29 2.29 0 0 1 2.25-1.91h5.92a2.29 2.29 0 0 1 2.33 2.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.25,
    cy: 7.7,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 17.73h1.91M12.95 17.73h1.91M4.36 8.18h4.77v4.77H4.36z"
  }));
};

const SvgCamcorder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 6.27,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 9.14V22.5H2.46V9.14M5.32 14.86h1.91M10.09 9.14v5.72H22.5V6.27H11.04M13.91 11.05h4.77"
  }));
};

const SvgCameraArrow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 16.53V4.13h5.73l1.91-2.87h5.72l1.91 2.87h5.73v12.4"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.76,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 7.94h1.91M1.5 16.53c0 1.88 3.82 3.82 8.65 3.77M13.91 20.29c4.77.06 8.59-1.88 8.59-3.76"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.71 17.85 2.44 2.44-2.44 2.45"
  }));
};

const SvgCameraDevice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21V22.5h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32 3.41 1.5h6.68L12 5.32M4.36 9.14h1.91M4.36 12.95h1.91"
  }));
};

const SvgCameraFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.89 18.7v3.82H1.5V5.3h13.39v3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 1.48h7.65v3.83H4.37zM23.5 18.7H8.2V9.13h15.3M8.2 7.22v13.39M12.02 11.04V9.13M15.85 11.04V9.13M19.67 11.04V9.13M12.02 18.7v-1.92M15.85 18.7v-1.92M19.67 18.7v-1.92"
  }));
};

const SvgCameraLens = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 21.35v.2M16.77 2.65v-.2M7.23 21.35v.2M16.77 2.65v-.2M7.23 21.35v.2M16.77 2.65v-.2M7.23 21.35v.2M16.77 2.65v-.2M7.23 14.76 12 17.51l-4.77-2.75M17.71 20.81l-3.95-2.28-1.75-1 1.75 1 3.94 2.27.17.1M6.29 3.19l-.17-.1M12 6.49l-1.75-1-4-2.29 4 2.29 1.75 1 4.77 2.75L12 6.49",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 14.76 12 17.51l-4.77-2.75M17.71 20.81l-3.95-2.28-1.75-1 1.75 1 3.94 2.27.17.1M6.29 3.19l-.17-.1M12 6.49l-1.75-1-4-2.29 4 2.29 1.75 1 4.77 2.75L12 6.49",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 14.76 12 17.51l-4.77-2.75M17.71 20.81l-3.95-2.28-1.75-1 1.75 1 3.94 2.27.17.1M6.29 3.19l-.17-.1M12 6.49l-1.75-1-4-2.29 4 2.29 1.75 1 4.77 2.75L12 6.49",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 14.76 12 17.51l-4.77-2.75M17.71 20.81l-3.95-2.28-1.75-1 1.75 1 3.94 2.27.17.1M6.29 3.19l-.17-.1M12 6.49l-1.75-1-4-2.29 4 2.29 1.75 1 4.77 2.75L12 6.49M12 17.51l4.77-2.75L12 17.51M22.49 11.46l-4 2.29-1.75 1 1.75-1 4-2.29.16-.1M1.51 12.54l-.16.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.23 9.24-1.75 1-4 2.29 4-2.29 1.75-1L12 6.49 7.23 9.24M12 17.51l4.77-2.75L12 17.51M22.49 11.46l-4 2.29-1.75 1 1.75-1 4-2.29.16-.1M1.51 12.54l-.16.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.23 9.24-1.75 1-4 2.29 4-2.29 1.75-1L12 6.49 7.23 9.24M12 17.51l4.77-2.75L12 17.51M22.49 11.46l-4 2.29-1.75 1 1.75-1 4-2.29.16-.1M1.51 12.54l-.16.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.23 9.24-1.75 1-4 2.29 4-2.29 1.75-1L12 6.49 7.23 9.24M12 17.51l4.77-2.75L12 17.51M22.49 11.46l-4 2.29-1.75 1 1.75-1 4-2.29.16-.1M1.51 12.54l-.16.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.23 9.24-1.75 1-4 2.29 4-2.29 1.75-1L12 6.49 7.23 9.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCameraPhoto = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 6.27-1.91-3.81H8.18L6.27 6.27H1.5v15.28h21V6.27h-4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCameraPhotography = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 4.36 15.82 1.5H8.18L6.27 4.36H1.5V22.5h21V4.36h-4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCameraStand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.3 1.5h10.5v7.64H5.3z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.79 3.73 3.59-2.23h1.19v7.64h-1.19l-3.59-2.23V3.73zM11.02 9.14v9.54M15.8 18.68H6.25M6.25 16.77v5.73M15.8 16.77v5.73M3.39 22.5h5.72M12.93 22.5h5.73M2.43 2.45H5.3"
  }));
};

const SvgCameraWheels = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.77,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.27,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.3 1.5h10.5v7.64H5.3z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.79 3.73 3.59-2.23h1.19v7.64h-1.19l-3.59-2.23V3.73zM13.89 20.59H8.16M11.02 9.14v11.45M2.43 2.45H5.3"
  }));
};

const SvgCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m16.77 6.27-1.91-2.86H9.14L7.23 6.27H3.41A1.91 1.91 0 0 0 1.5 8.18v10.5a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V8.18a1.91 1.91 0 0 0-1.91-1.91ZM4.36 4.36v1.91M18.68 9.14h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCampTent = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 22.56H1.46v-8.62L12 2.44l10.54 11.5v8.62zM.5 22.56h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.25 22.56-2.92-5.11L12 7.23M12 7.23 7.25 22.56M16.75 22.56l2.92-5.11L12 7.23M12 7.23l4.75 15.33M12 2.44v4.79"
  }));
};

const SvgCamperVehicle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.89 19.64H1.5v-4.78h8.59M14.86 14.86v4.78H7.71M16.77 19.64h-1.91V8.18h3.67a2.86 2.86 0 0 1 2.71 2l1.26 3.77v5.73h-1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 13.91h4.77M10.09 14.86H1.5V4.36h11.46l1.9-1.9h6.69v5.72H14.86v6.68"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09h4.77v9.55h-4.77z"
  }));
};

const SvgCamper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 17.73H1.5V6.27a1.91 1.91 0 0 1 1.91-1.91H15.7a5 5 0 0 1 4.89 3.82L22.5 13v4.78h-2.86M15.82 17.73H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 12.96h-4.77V8.18h2.86M9.14 8.18h4.77v9.55H9.14zM1.5 8.18h3.82v4.77H1.5z"
  }));
};

const SvgCampfire = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.52 21-6.68M22.5 22.52l-21-6.68M17.73 11.07a5.73 5.73 0 0 1-11.46 0c0-4.77 3.82-4.77 4.78-8.59 2.86.95 6.68 4.77 6.68 8.59Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 16.8a2.87 2.87 0 0 1-2.86-2.87c0-1.47.45-1.92 1.56-3a15.94 15.94 0 0 0 1.5-1.6c1.39 1.21 2.66 3 2.66 4.6A2.87 2.87 0 0 1 12 16.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCampingTent = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M9.14 1.5l12.41 21M14.86 1.5l-12.41 21M15.82 22.5H8.18L12 14.86l3.82 7.64z"
  }));
};

const SvgCandleHolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 5.32a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.82 1.91-3.82s1.91 1.91 1.91 3.82ZM9.14 7.23v2.86M4.36 10.09h9.55v8.59H4.36zM1.5 18.68h15.27A3.82 3.82 0 0 1 13 22.5H5.32a3.82 3.82 0 0 1-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 18.68,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandleLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 5.33a1.91 1.91 0 0 1-3.82 0C10.09 3.41 12 1.5 12 1.5s1.91 1.91 1.91 3.83ZM12 7.24v2.87M7.22 10.11h9.57v12.43H7.22z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.57 11.07a16.29 16.29 0 0 0-4.79 11.54v.89a6.7 6.7 0 0 1 6.7-6.7M2.43 11.07a16.29 16.29 0 0 1 4.79 11.54v.89a6.7 6.7 0 0 0-6.7-6.7M9.13 13.93h1.91M12.96 13.93h1.91M2.43 22.54h19.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandleLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 5.32a1.91 1.91 0 0 1-3.82 0C10.09 3.41 12 1.5 12 1.5s1.91 1.91 1.91 3.82ZM12 7.23v2.86M7.23 10.09h9.55V22.5H7.23zM4.36 22.5h15.28M7.23 12.95l9.54 1.91M7.23 17.73l9.54 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandleStick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.76 8.14v5.8a3.86 3.86 0 0 1-3.86 3.86H9.1a3.86 3.86 0 0 1-3.86-3.86v-5.8M13 3.07a1 1 0 1 1-1.94 0c0-.53 1-1.45 1-1.45s.94.92.94 1.45ZM19.72 6a1 1 0 1 1-1.93 0c0-.53 1-1.45 1-1.45s.93.89.93 1.45ZM6.21 6a1 1 0 1 1-1.93 0c0-.53 1-1.45 1-1.45s.93.89.93 1.45ZM12 5.25v17.38M3.31 13.94h3.86M10.07 12h3.86M16.83 13.94h3.86M8.14 22.63h7.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 22.5H6.27l-1.91-3.82h15.28l-1.91 3.82zM13.91 5.32a1.91 1.91 0 0 1-3.82 0C10.09 3.41 12 1.5 12 1.5s1.91 1.91 1.91 3.82ZM12 7.23v2.86M7.23 10.09h9.55v8.59H7.23z"
  }));
};

const SvgCandles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 5.32a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.82 1.91-3.82s1.91 1.91 1.91 3.82ZM7.23 7.23v2.86M2.45 10.09H12V22.5H2.45zM18.68 9.14a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.82 1.91-3.82s1.91 1.91 1.91 3.82ZM16.77 11.05v2.86M12 13.91h9.55v8.59H12zM.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandyCane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.34 8.66v11.45a2.39 2.39 0 0 0 2.39 2.39 2.38 2.38 0 0 0 2.38-2.39V8.66a2.39 2.39 0 0 1 2.39-2.39 2.39 2.39 0 0 1 2.39 2.39 2.38 2.38 0 0 0 2.38 2.39 2.39 2.39 0 0 0 2.39-2.39A7.17 7.17 0 0 0 12.5 1.5a7.17 7.17 0 0 0-7.16 7.16ZM5.34 14.86l4.77 4.78M5.34 7.23 10.11 12M12.02 1.5v4.77M14.89 7.23h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCandy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 8.18,
    width: 11.45,
    height: 7.64,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 9.14h1.91v5.73h-1.91A2.86 2.86 0 0 1 17.73 12a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 9.14h1.91v5.73H4.36A2.86 2.86 0 0 1 1.5 12a2.86 2.86 0 0 1 2.86-2.86Z",
    transform: "rotate(180 3.885 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 8.18 1.91 7.64M12.95 8.18l1.91 7.64"
  }));
};

const SvgCapsuleMedicine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 11.07 13 6.28l3.79-3.79a3.38 3.38 0 0 1 2.39-1 3.38 3.38 0 0 1 3.38 3.38 3.34 3.34 0 0 1-1 2.39ZM6.26 11.07 11 6.28 7.25 2.49a3.38 3.38 0 0 0-2.39-1 3.38 3.38 0 0 0-3.38 3.39 3.34 3.34 0 0 0 1 2.39ZM12 9.15v1.92M9.13 12.02v1.91M14.87 12.98v1.91M11.04 14.89v1.91M16.78 16.8v1.92M7.22 16.8v1.92M10.09 21.59v1.91M12.96 18.72v1.91M15.83 21.59v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCarFront = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 17.73h4.78v2.86a1 1 0 0 1-1 1H3.41a1 1 0 0 1-1-1v-2.86h.04ZM16.77 17.73h4.77v2.86a1 1 0 0 1-1 1h-2.81a1 1 0 0 1-1-1v-2.86h.04Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 9.14h13.36A3.82 3.82 0 0 1 22.5 13v4.77h-21V13a3.82 3.82 0 0 1 3.82-3.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.29 2.45H7.71a1.91 1.91 0 0 0-1.83 1.39l-1.52 5.3h15.28l-1.52-5.3a1.91 1.91 0 0 0-1.83-1.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 13.43,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 13.43,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 13.91ZM22.5 7.23h-3.41M4.91 7.23H1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCarGarage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 23.48V9.16L12 1.52l10.5 7.64v14.32"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 14.89h9.55a1.91 1.91 0 0 1 1.91 1.91v3.82H5.32V16.8a1.91 1.91 0 0 1 1.91-1.91ZM10.09 17.75H8.18M15.82 17.75h-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 20.61h.95v1.91h-.95zM15.82 20.61h.95v1.91h-.95zM16.77 14.89H7.23l.59-2.38a1.9 1.9 0 0 1 1.85-1.44h4.66a1.9 1.9 0 0 1 1.85 1.44Z"
  }));
};

const SvgCarKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 20.59H8.18M18.68 20.59h3.82v-4.16a1.91 1.91 0 0 0-1.5-1.87l-2.32-.47a2.21 2.21 0 0 1-.51-.18 1.88 1.88 0 0 1-.82-.83l-.17-.35a4.78 4.78 0 0 0-4.27-2.64H9.16a5.69 5.69 0 0 0-5.27 3.57 1.91 1.91 0 0 1-1.77 1.2H1.5v5.73h2.86M18.13 13.91h-8.04M18.68 1.5h1a2.86 2.86 0 0 1 2.82 2.86 2.86 2.86 0 0 1-2.86 2.86h-1a1.91 1.91 0 0 1-1.91-1.91v-1.9a1.91 1.91 0 0 1 1.95-1.91ZM7.23 4.36h9.54M9.14 6.27V4.36M12 6.27V4.36"
  }));
};

const SvgCarTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 5.32H8.18a1.93 1.93 0 0 0-1.53.76L4.36 9.14l-2.86.95v6.68h2.86a1.91 1.91 0 0 1 3.82 0h6.68a1.91 1.91 0 0 1 3.82 0h3.82v-4.43a1.91 1.91 0 0 0-1.2-1.77l-3.57-1.43-2.29-3.06a1.91 1.91 0 0 0-1.53-.76Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.1 10.09H7.23M20.59 13.91h1.91M12 7.23v2.86"
  }));
};

const SvgCarVehicle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 15.84,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 15.84,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 15.84H8.18M4.36 15.84H1.5V13a1.9 1.9 0 0 1 1.91-1.91h1l1.07-2.26A2.87 2.87 0 0 1 8 7.25h7.3a2.84 2.84 0 0 1 2.33 1.15l2 2.67h.95A1.9 1.9 0 0 1 22.5 13v2.86h-2.86M4.36 11.07h15.28M11.05 7.25v3.82"
  }));
};

const SvgCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 17.8H9.14M5.32 17.8H1.5v-5.73h1.91l1.19-3A2.85 2.85 0 0 1 7.26 7.3h6.23a2.84 2.84 0 0 1 2.23 1.07l3 3.7h1a2.86 2.86 0 0 1 2.86 2.86v2.87h-3.9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 10.16v1.91h5.72"
  }));
};

const SvgCaravanWheels = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.67 17.74H1.5V8.17a4.78 4.78 0 0 1 4.78-4.78h8.61a4.78 4.78 0 0 1 4.78 4.78v9.57H17.5M14.19 17.74H6.98M23.5 14.87h-3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.85,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.33,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.2 9.13h4.78v8.61H8.2zM1.5 12.96h6.7M12.98 12.96h6.69"
  }));
};

const SvgCaravan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.45v15.28H10.09a2.87 2.87 0 1 0-5.73 0H1.5V7.27a3.82 3.82 0 0 1 3.82-3.82ZM4.36 18.73a2.87 2.87 0 0 0 5.73 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.95 8.23h5.73v10.5h-5.73zM5.32 8.23h3.82v3.82H5.32zM20.59 22.55v-3.82"
  }));
};

const SvgCardiogram = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 1.5h17.18a1.91 1.91 0 0 1 1.91 1.91v11.45h-21V3.41A1.91 1.91 0 0 1 3.41 1.5ZM1.5 14.86v7.64h21v-7.64M4.36 18.68h1.91M8.18 18.68h1.91M19.64 18.68h-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 9.14h-1.91l-1.91-2.87-2.87 4.77-2.86-5.72-1.91 3.82H2.46M18.68 9.14h1.91"
  }));
};

const SvgCargoTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 2.45h19.09V13.9H2.45zM6.27 5.32v5.73M10.09 5.32v5.73M13.91 5.32v5.73M17.73 5.32v5.73"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 13.91h21v3.82h-21z"
  }));
};

const SvgCarrotTurnipVegetable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18 13.5a9.39 9.39 0 0 1-6 9 9.39 9.39 0 0 1-6-9 6 6 0 0 1 4.35-5.77 5.6 5.6 0 0 1 1.3-.21 2 2 0 0 1 .35 0 2 2 0 0 1 .35 0 5.6 5.6 0 0 1 1.3.21A6 6 0 0 1 18 13.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.65 7.73a4 4 0 0 0 .51-3.41 3.93 3.93 0 0 0-1-1.65L12 1.5l-1.17 1.17a3.93 3.93 0 0 0-1 1.65 4 4 0 0 0 .51 3.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.35 7.52a5.6 5.6 0 0 1 1.3.21 6 6 0 0 1 2.18 1.15A4 4 0 0 0 18 5.33V3.67h-1.66a4 4 0 0 0-2.18.65M8.17 8.88A4 4 0 0 1 6 5.33V3.67h1.66a4 4 0 0 1 2.18.65M6 12.5h5M12 16.5h6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCarrot = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.77 15c-4.22 4.23-13.24 9.33-15.65 6.92S4.81 10.45 9 6.23s6-2.05 8.37.36 4.63 4.15.4 8.41ZM21.04 2.96l-3.63 3.63M18.13 1.5l-2.18 3.64M22.5 5.87l-3.64 2.18M7.94 7.32 12 11.05M14.2 17.94l-3.15-3.08M3.58 14.6l3.65 3.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.16,
    cy: 18.68,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.98 18.68h5.72v-7.64H1.52v7.64h3.82M23.48 18.68H18.7M20.61 22.5v-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.64 8a3.91 3.91 0 0 1 2.95-1.71h.39a3.61 3.61 0 0 1 3.82 3.32 3 3 0 0 1-.38 1.44M2.85 11.05a2.94 2.94 0 0 1-.37-1.44 3.51 3.51 0 0 1 3.26-3.3 3.36 3.36 0 0 1 .56 0A3.92 3.92 0 0 1 9.64 8c0 .05 0 .1.07.14a2.9 2.9 0 0 1 .4 1.47 2.94 2.94 0 0 1-.37 1.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.74 6.31a2.87 2.87 0 0 1-.4-1.47A3.61 3.61 0 0 1 9.16 1.5 3.61 3.61 0 0 1 13 4.84a2.92 2.92 0 0 1-.39 1.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCashBills = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money stack"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 15.82h1.91M17.73 15.82h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h21V22.5h-21zM3.41 5.32h17.18M5.32 1.5h13.36"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 3.82,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 15.82h1.91M17.73 15.82h1.91"
  })));
};

const SvgCashWithdraw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 1.5v9.54h-4.77V6.27H6.27v4.77H1.5V1.5h21zM6.27 6.27h11.46"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 6.27h11.45V22.5H6.27z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 6.27h15.28M12 16.77v2.87"
  }));
};

const SvgCast = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5v10a2.39 2.39 0 0 1-2.39 2.41 4.29 4.29 0 0 0-4.29 4.29 4.29 4.29 0 0 0 4.29 4.3h8.12a4.78 4.78 0 0 0 4.77-4.77V1.5ZM6.27 13.91l8.59 8.59M11.01 18.64l-3.82 3.82M10.09 12l9.55 9.55M20.59 8.18l-7.16 7.16M20.59 2.45 10.57 12.48M10.09 6.27h6.68M15.82 18.68l4.77-4.77M8.4 16.04l-4.29 4.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCcComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 13.89H9.14A1.91 1.91 0 0 1 7.23 12V8.16a1.9 1.9 0 0 1 1.91-1.91h1.91M17.73 13.89h-1.91A1.91 1.91 0 0 1 13.91 12V8.16a1.9 1.9 0 0 1 1.91-1.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.48v17.18h6.68L12 21.52l3.82-2.86h6.68V1.48h-21z"
  }));
};

const SvgCcSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 3.41h21v17.18h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 15.82H9.14a1.91 1.91 0 0 1-1.91-1.91v-3.82a1.91 1.91 0 0 1 1.91-1.91h1.91M17.73 15.82h-1.91a1.91 1.91 0 0 1-1.91-1.91v-3.82a1.91 1.91 0 0 1 1.91-1.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCeilingLamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h7.64v1A2.86 2.86 0 0 1 13 5.32h-2a2.86 2.86 0 0 1-2.82-2.87v-1ZM12 12a5.73 5.73 0 0 1 5.73 5.73v1H6.27v-1A5.73 5.73 0 0 1 12 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.69 18.68a2.55 2.55 0 0 1 .17 1 2.86 2.86 0 0 1-5.72 0 2.55 2.55 0 0 1 .17-1M12 5.32V12M19.64 1.5H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCeilingLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h7.64v1A2.86 2.86 0 0 1 13 5.32h-2a2.86 2.86 0 0 1-2.82-2.87v-1 .05ZM12 5.32v12.41M19.64 1.5H4.36M12 17.73v.95a3.82 3.82 0 0 1-3.82 3.82 3.82 3.82 0 0 1-3.82-3.82v-.95M19.64 17.73v.95a3.82 3.82 0 0 1-3.82 3.82A3.82 3.82 0 0 1 12 18.68v-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13.91a2.86 2.86 0 0 1 2.86 2.86v1H1.5v-1a2.86 2.86 0 0 1 2.86-2.86ZM4.36 10.09V12M19.64 13.91a2.86 2.86 0 0 1 2.86 2.86v1h-5.73v-1a2.86 2.86 0 0 1 2.87-2.86ZM19.64 10.09V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCeilingLighting = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h7.64v1A2.86 2.86 0 0 1 13 5.32h-2a2.86 2.86 0 0 1-2.82-2.87v-1 .05ZM12 5.32v12.41M19.64 1.5H4.36M12 17.73v.95a3.82 3.82 0 0 1-3.82 3.82 3.82 3.82 0 0 1-3.82-3.82v-.95M19.64 17.73v.95a3.82 3.82 0 0 1-3.82 3.82A3.82 3.82 0 0 1 12 18.68v-.95M7.23 17.73H1.5l.96-4.77h3.81l.96 4.77zM22.5 17.73h-5.73l.96-4.77h3.82l.95 4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCelcius = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 3.89,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 14.89V5.32a3.82 3.82 0 0 0-7.64 0v9.57a4.77 4.77 0 1 0 8.6 2.84 4.74 4.74 0 0 0-.96-2.84ZM6.27 10.09v6.68M10.09 6.27h2.86M10.09 10.09h2.86M10.09 13.91h2.86M22.5 10.09A1.9 1.9 0 0 1 20.59 12a1.91 1.91 0 0 1-1.91-1.91V7.23a1.91 1.91 0 0 1 1.91-1.91 1.9 1.9 0 0 1 1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCellsMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 22.5H8.18l.96-5.73h5.72l.96 5.73zM5.32 22.5h13.36M11.19 7.23h-2.2l-1.1 1.91 1.1 1.9h2.2l1.1-1.9-1.1-1.91zM15.01 5.32h-2.2l-1.1 1.91 1.1 1.91h2.2l1.1-1.91-1.1-1.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.01 9.14h-2.2l-1.1 1.9 1.1 1.92h2.2l1.1-1.92-1.1-1.9zM5.32 9.14h2.86M18.68 7.23h-2.86"
  }));
};

const SvgCells = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7 22.5-5-3v-6l5-3 5 3v6l-5 3zM17 22.5l-5-3v-6l5-3 5 3v6l-5 3z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 13.5-5-3v-6l5-3 5 3v6l-5 3z"
  }));
};

const SvgCementMixer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 17.73H1.5V6.27l2.86-2.86h2.87ZM4.36 10.09H1.5M4.36 13.91H1.5M22.5 5.32v12.41H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 13.91a4.78 4.78 0 0 1-4.77-4.77V4.36L12 1.5h5.73l1.91 2.86v4.78a4.78 4.78 0 0 1-4.78 4.77ZM22.5 8.18h-2.86M11.05 8.18H8.18M10.09 5.32h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCementSack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m19.64 5.32 1.91-3.82H2.45l1.91 3.82a17 17 0 0 0 0 13.36L2.45 22.5h19.1l-1.91-3.82a17 17 0 0 0 0-13.36ZM15.82 5.32H4.36M15.82 18.68H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.02 10.09-2.85 4.77h5.69l-2.84-4.77z"
  }));
};

const SvgCementTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 18.68h1.91v-5.72l-1.91-5.73h-3.82v11.45M19.64 13.91h2.86M7.23 18.68h9.54v-4.77H1.5v4.77h1.91M10.09 13.91H7.23L1.5 10.09l1.91-6.68h6.68a3.82 3.82 0 0 1 3.82 3.82v2.86a3.82 3.82 0 0 1-3.82 3.82ZM8.18 3.41l-2.86 9.54M12 4.36l-2.86 9.55"
  }));
};

const SvgChainLink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.27h1.91a5.73 5.73 0 0 1 4.05 9.78 5.67 5.67 0 0 1-4.05 1.68h-1.91M9.14 17.73H7.23A5.73 5.73 0 0 1 3.18 8a5.67 5.67 0 0 1 4.05-1.73h1.91M6.27 12h11.46M14.86 4.36v3.82M14.86 15.82v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 7.23A4.76 4.76 0 0 1 13 5.32h4.78a4.77 4.77 0 1 1 0 9.54H13a4.77 4.77 0 0 1-4.67-3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.72 13a4.77 4.77 0 0 0-4.67-3.81H6.27a4.77 4.77 0 0 0 0 9.54h4.78a4.76 4.76 0 0 0 3.37-1.39 3.57 3.57 0 0 0 .44-.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChainsaw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 9.006 15.95)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.48 11.56h7.05v8.77H5.48z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.65 15.6 7.86-7.86a3.38 3.38 0 0 0 1-2.39A3.37 3.37 0 0 0 19.13 2a3.34 3.34 0 0 0-2.39 1l-7.87 7.83ZM7.23 22l1.43-1.43-4.3-4.27-2.27 2.27A2 2 0 0 0 1.5 20a2 2 0 0 0 2 2ZM9.14 15.34 2.45 8.66M10.09 16.3l.96.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 5.8,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 10.57,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgChairDining = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 13h9.57a1.91 1.91 0 0 1 1.91 1.91v1.89H5.3v-1.91A1.91 1.91 0 0 1 7.22 13ZM17.74 4.37v2.87H6.26V4.37A2.86 2.86 0 0 1 9.13 1.5h5.74a2.86 2.86 0 0 1 2.87 2.87ZM7.22 7.24h9.57v5.74H7.22zM7.22 23.5v-6.7h9.56v6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChampagne = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 9.14V1.5H4.36v7.64l-.31.21a5.73 5.73 0 0 0-2.55 4.76v8.39h9.55v-8.39A5.73 5.73 0 0 0 8.5 9.35ZM2.45 1.5h7.64M14.86 8.18h7.64V13a3.82 3.82 0 0 1-3.82 3.82A3.82 3.82 0 0 1 14.86 13V8.18ZM18.68 22.5v-5.73M21.55 22.5h-5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 14.86h5.73v3.82H1.5z"
  }));
};

const SvgChargingCable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 9.14h11.46v6.68a2.86 2.86 0 0 1-2.86 2.86H9.14a2.86 2.86 0 0 1-2.86-2.86V9.14h-.01ZM10.09 18.68h3.82v3.82h-3.82zM9.14 1.5h5.73a1.91 1.91 0 0 1 1.91 1.91v5.73H7.23V3.41A1.91 1.91 0 0 1 9.14 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 1.5,
    width: 9.55,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChartPieGraphCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 13.91a8.59 8.59 0 1 1-8.59-8.59v4.77a3.82 3.82 0 1 0 3.82 3.82ZM22.5 11.05h-5.73A3.82 3.82 0 0 0 13 7.23V1.5a9.56 9.56 0 0 1 9.5 9.55ZM16.16 19.98l-3.37-3.37",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChartPieGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 11.05H13V1.5a9.54 9.54 0 0 1 9.5 9.55Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 13.91h7.63a8.59 8.59 0 1 1-8.59-8.59v8.59L16.16 20",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChatDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.48C6.2 1.48 1.5 5.75 1.5 11a9 9 0 0 0 2 5.53l-1 5 6.66-1.33a11.39 11.39 0 0 0 2.89.38c5.8 0 10.5-4.28 10.5-9.55S17.8 1.48 12 1.48ZM11.05 11.02h1.9M15.82 11.02h1.91M6.27 11.02h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChatLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.25 8.2h9.5M7.25 12h9.5M7.25 15.8h9.5M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z"
  }));
};

const SvgChatsDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 5.3H5.32A3.81 3.81 0 0 0 1.5 9.11v5.73a3.82 3.82 0 0 0 3.82 3.82h1.91l2.86 2.86L13 18.66h1.91a3.82 3.82 0 0 0 3.82-3.82V9.11a3.81 3.81 0 0 0-3.87-3.81Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84A3.82 3.82 0 0 0 22.5 11V5.3a3.82 3.82 0 0 0-3.82-3.82H9.14A3.82 3.82 0 0 0 5.32 5.3M5.32 11.98h1.91M9.14 11.98h1.91M12.95 11.98h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChatsLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 5.3H5.32A3.81 3.81 0 0 0 1.5 9.11v5.73a3.82 3.82 0 0 0 3.82 3.82h1.91l2.86 2.86L13 18.66h1.91a3.82 3.82 0 0 0 3.82-3.82V9.11a3.81 3.81 0 0 0-3.87-3.81Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84A3.82 3.82 0 0 0 22.5 11V5.3a3.82 3.82 0 0 0-3.82-3.82H9.14A3.82 3.82 0 0 0 5.32 5.3M5.32 10.07h9.54M5.32 13.89h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 10.07 2.86 2.86 5.73-5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.27 12 3.82 3.82 7.64-7.64"
  }));
};

const SvgCheckClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.71 12.96 2.86 2.86 5.73-5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 9.11 3.81 3.82 6.69-6.68"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM15.82 11.04l-4.78 4.78-2.38-2.39"
  }));
};

const SvgCheckFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 12-5.73 5.73-2.86-2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckListFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.91 10.09.95.95 1.91-1.9M13.91 13.91l.95.95 1.91-1.9M7.23 11.05h3.82M7.23 14.86h3.82M13.91 17.73l.95.95 1.91-1.91M7.23 18.68h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgCheckMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.8 9.15-4.75 4.75-2.85-2.85"
  }));
};

const SvgCheckMessages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 10.04-3.82 3.82-1.91-1.9"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheckPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 11.05h19.09V22.5H2.45zM12 1.5a6.68 6.68 0 0 1 6.68 6.68V11H5.32V8.18A6.68 6.68 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 15.82 2.86 2.86 4.78-4.77"
  }));
};

const SvgCheckPapertray = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.13 8.15 2.88 2.88 4.8-4.79"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.52 14.87v7.67H1.42v-7.67L5.26 1.44h13.42l3.84 13.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.38 14.87h5.75a3.84 3.84 0 0 0 7.68 0h5.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 14.87h-6.71a3.84 3.84 0 0 1-7.68 0H1.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCheckShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 10.93 3.58 3.58 5.96-5.97"
  }));
};

const SvgCheckTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 17.73v-2.87A2.86 2.86 0 0 1 19.64 12a2.87 2.87 0 0 1 2.86-2.86V4.36h-21v4.78a2.82 2.82 0 0 1 2 .84 2.85 2.85 0 0 1 0 4 2.82 2.82 0 0 1-2 .84v4.78h21Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 12 2.86 2.86 5.73-5.72"
  }));
};

const SvgCheckWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 12.05-4.8 4.79-2.87-2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 1.5h21.1v21.1H1.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.53 7.25H1.43V1.5h21.1v5.75zM4.31 4.38h1.92M8.15 4.38h1.91M11.98 4.38h1.92"
  })));
};

const SvgCheese = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 14.86a1.9 1.9 0 0 1-1.9-1.79.49.49 0 0 1 0-.12 1.91 1.91 0 0 1 3.71-.62 1.84 1.84 0 0 1 .1.67 1.9 1.9 0 0 1-1.91 1.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 9.9v8.4l-11.61 2.32a1.55 1.55 0 0 0-1.54-1.27 1.58 1.58 0 0 0-1.58 1.57 1.48 1.48 0 0 0 0 .31L1.5 22.5v-8.4L8 7a1.52 1.52 0 0 0 1.37.81 1.57 1.57 0 0 0 .64-3l3-3.29h1a8.37 8.37 0 0 1 8.4 8.4Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.82 19.24a1.86 1.86 0 0 0 .84-1.55 1.91 1.91 0 0 0-3.82 0 1.87 1.87 0 0 0 1.58 1.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 4.84,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 9.14-10.81 2.45M8.88 12.23 1.5 13.91"
  }));
};

const SvgChemicalContainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36zM2.45 1.5h19.1M2.45 22.5h19.1M2.45 12h4.78M16.77 12h4.78M4.36 5.32h15.28M4.36 18.68h15.28"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 8.18v2.87M12 12l-.76.57-2.29 1.72M12 12l.76.57 2.29 1.72"
  }));
};

const SvgChemicalLab = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.5h9.54M14.86 6.27V1.5H9.14v4.77L2.7 19.15a2.3 2.3 0 0 0-.25 1 2.32 2.32 0 0 0 2.32 2.35h14.46a2.32 2.32 0 0 0 2.32-2.32 2.3 2.3 0 0 0-.25-1Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.89 10.76c5-2.17 5.31 1.9 10.42.41M7.23 18.68h1.91M10.09 14.86H12M14.86 16.77h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChemicalTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.5h9.54M9.14 1.5v9.55l-5.73 5.72v3.82a1.9 1.9 0 0 0 1.91 1.91h13.36a1.9 1.9 0 0 0 1.91-1.91v-3.82l-5.73-5.72V1.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.24 15.94c1.36.4 1.64 1.79 3.46 1.79 2.15 0 2.15-1.91 4.29-1.91s2.16 1.91 4.31 1.91c1.82 0 2.1-1.39 3.46-1.79M12.95 11.05h1.91M12.95 8.18h1.91M12.95 5.32h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChemicalTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.83 22.5a3.38 3.38 0 0 1-3.38-3.37 3.38 3.38 0 0 1 1-2.39L13.91 6.27l4.77 4.78L8.22 21.51a3.42 3.42 0 0 1-2.39.99ZM12.48 4.84l7.63 7.64M17.25 1.5a2.37 2.37 0 0 0 0 2.86 2.39 2.39 0 0 1 0 2.87M21.07 3.41a2.37 2.37 0 0 0 0 2.86 2.42 2.42 0 0 1 0 2.87M6.27 13.91h9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCheque = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 14.86H7.7a1.43 1.43 0 0 0 1.44-1.43h0A1.43 1.43 0 0 0 7.7 12h-1a1.43 1.43 0 0 1-1.43-1.43h0a1.43 1.43 0 0 1 1.48-1.43h2.39M7.23 7.23v1.91M7.23 16.77v-1.91M12.95 8.18h5.73M12.95 12h5.73M12.95 15.82h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgChessPiece = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 7.23H8.18a1.92 1.92 0 0 1-1.91-1.91V1.5h11.46v3.82a1.92 1.92 0 0 1-1.91 1.91ZM8.18 17.73h7.64a1.91 1.91 0 0 1 1.91 1.91v2.86H6.27v-2.86a1.91 1.91 0 0 1 1.91-1.91ZM15.82 17.73H8.18l.96-10.5h5.72l.96 10.5zM10.09 4.36V1.5M13.91 4.36V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChickenLeg = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.52 12.05c-2.76 2.76-7.5 3.66-9.87 1.3S9.19 6.24 12 3.48a5.88 5.88 0 0 1 8.69-.12 5.88 5.88 0 0 1-.17 8.69Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.43 14.43 8.84 18a1.94 1.94 0 0 0-.54 1.89 2 2 0 1 1-3.86 1.15 2.21 2.21 0 0 0-1.5-1.5 2 2 0 1 1 1.15-3.84A1.94 1.94 0 0 0 6 15.16l3.59-3.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChimney = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 18.68H12v3.82H4.36zM8.18 14.86h7.64v3.82H8.18zM15.82 14.86h3.82v3.82h-3.82zM4.36 14.86h3.82v3.82H4.36zM12 18.68h7.64v3.82H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 11.05H12v3.82H4.36zM8.18 7.23h7.64v3.82H8.18zM15.82 7.23h3.82v3.82h-3.82zM4.36 7.23h3.82v3.82H4.36zM12 11.05h7.64v3.82H12zM2.45 1.5h19.09v5.73H2.45zM.55 22.5h22.9"
  }));
};

const SvgChipComputer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.29,
    y: 5.29,
    width: 13.42,
    height: 13.42,
    rx: 2.24,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21.5v4.79M12 .5v4.79M16.79.5v4.79M7.21 18.71v4.79M12 18.71v4.79M16.79 18.71v4.79M.5 16.79h4.79M.5 12h4.79M.5 7.21h4.79M18.71 16.79h4.79M18.71 12h4.79M18.71 7.21h4.79"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.83,
    cy: 8.17,
    r: 0.96,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgChipMemory = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 19.66h-9.54l-1.92.95H1.5V4.39h21v15.27zM6.27 18.7v1.91M19.64 8.2h2.86M19.64 12.02h2.86M19.64 15.84h2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.2h4.77v7.64H5.32zM13.91 7.25v9.55"
  }));
};

const SvgChocolate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.23 15.82a1.55 1.55 0 0 0-1.23.68 1.54 1.54 0 0 0-2.81.85c0 2.3 2.81 3.07 2.81 3.07s2.82-.77 2.82-3.07a1.53 1.53 0 0 0-1.59-1.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 9.14H19.64V22.5H6.27v-9.54"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13H6.27a1.91 1.91 0 0 1-1.91-1.9 1.84 1.84 0 0 1 .57-1.4 1.87 1.87 0 0 1 1.34-.56h8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 13a1.91 1.91 0 0 1-1.91-1.9 1.91 1.91 0 0 1 1.91-1.96M16.77 13a1.91 1.91 0 0 1-1.91-1.9 1.91 1.91 0 0 1 1.91-1.91M7.23 1.5h11.45v7.64H7.23zM7.23 5.32h11.45M12.95 1.5v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChopper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.23a6.71 6.71 0 0 1 6.71 6.71v1.92a3.83 3.83 0 0 1-3.83 3.83H9.13a3.83 3.83 0 0 1-3.83-3.83v-1.92A6.71 6.71 0 0 1 12 6.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.23a6.71 6.71 0 0 1 6.71 6.71v1.92a3.83 3.83 0 0 1-3.83 3.83H9.13a3.83 3.83 0 0 1-3.83-3.83v-1.92A6.71 6.71 0 0 1 12 6.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.61 11.85a3.82 3.82 0 0 1-3.73 3H9.12a3.82 3.82 0 0 1-3.73-3M12 .48v5.75M.5 2.4h23M17.81 17.33a3.81 3.81 0 0 1 1.86 3.27v1.92M4.33 22.52V20.6a3.81 3.81 0 0 1 1.86-3.27M2.42 22.52h3.83M17.75 22.52h3.83M11.04 5.27h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChristmasCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 5.32V22.5H4.36V5.32L17.73 1.5v3.82h1.91zM17.73 5.32H4.36M12 11.05v5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 9.14 12 11.04l-1.91-1.9M10.09 18.68 12 16.77l1.91 1.91M14.86 13.91H9.14M16.77 15.82l-1.91-1.91L16.77 12M7.23 12l1.91 1.91-1.91 1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgChristmasTree = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.71 18.73H5.29l3.36-3.84h6.7l3.36 3.84zM16.79 14.89H7.21l3.19-3.83h3.2l3.19 3.83z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.79 14.89H7.21l3.19-3.83h3.2l3.19 3.83zM14.88 11.06H9.13L12 6.27l2.88 4.79zM12 2.31l.3.6.66.09-.48.47.11.66-.59-.31-.59.31.11-.66-.48-.47.66-.09.3-.6zM12 22.56v-3.83M23.5 22.56H.5"
  }));
};

const SvgChurchBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 11.02h3.82l1.92 5.74h-5.74M8.17 16.76H2.44l1.91-5.74h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 16.76H3.39v5.74H20.61v-5.74h-4.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 9.11 12 6.24l3.83 2.87V22.5H8.17V9.11zM12 11.02v1.91M12 18.67v3.83M12 14.85v1.91M12 .5v5.74M10.09 2.41h3.82"
  }));
};

const SvgChurchLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.92 22.52h-3.84V5.27L12 3.35l1.92 1.92v17.25zM12 .48v2.87M13.92 11.02l3.83 1.92v9.58h-3.83v-11.5zM17.75 15.81l3.83 1.92v4.79h-3.83v-6.71zM10.08 9.1l-3.83 1.92v11.5h3.83V9.1zM6.25 14.85l-3.83 1.92v5.75h3.83v-7.67zM.5 22.52h23"
  }));
};

const SvgChurchReligion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.65 14.85v7.65H4.35v-7.65"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 16.76 12 11.02l10.52 5.74M5.3 10.06 12 6.24l6.7 3.82M7.22 13.63V8.97M16.78 13.63V8.97M12 16.76a1.91 1.91 0 0 1 1.91 1.91v3.83h-3.82v-3.83A1.91 1.91 0 0 1 12 16.76ZM12 .5v5.74M10.09 2.41h3.82"
  }));
};

const SvgChurch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 22.48H1.5v-8.59l3.82-5.73 3.82 5.73v8.59zM5.32.52v7.64M2.45 3.39h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 22.48H22.5v-8.59l-4.77-5.73H5.32M22.5 13.89H9.14M5.32 17.7v4.78M5.32 13.89v1.91M12 19.61v-2.86M15.82 19.61v-2.86M19.64 19.61v-2.86"
  }));
};

const SvgCinemaChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5h5.73a2.86 2.86 0 0 1 2.86 2.86v9.55H6.27V4.36A2.86 2.86 0 0 1 9.14 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 10.09h4.77v3.34a2.39 2.39 0 0 1-2.39 2.39 2.39 2.39 0 0 1-2.38-2.39v-3.34ZM17.73 10.09h4.77v3.34a2.39 2.39 0 0 1-2.39 2.39 2.39 2.39 0 0 1-2.39-2.39v-3.34h.01Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.6 15.7a2.08 2.08 0 0 0-.23.95 2 2 0 0 0 2 2h11.24a2 2 0 0 0 2-2 2.08 2.08 0 0 0-.23-.95M17.79 13.98l-.06-.07H6.27l-.06.07M7.23 22.5v-3.82M16.77 22.5v-3.82M5.32 22.5h3.82M14.86 22.5h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCinema = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 23.5v-1.91A2.87 2.87 0 0 1 12 18.72a2.87 2.87 0 0 1 2.87 2.87v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.26,
    cy: 16.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.39 23.5v-1.91a2.87 2.87 0 0 1 2.87-2.87 2.86 2.86 0 0 1 2.87 2.87v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.74,
    cy: 16.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 23.5v-1.91a2.86 2.86 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.87 2.87v1.91M1.48 7.24V1.5H12l-.11.17A12.52 12.52 0 0 1 1.48 7.24ZM6.86 15a23.3 23.3 0 0 0-1.16-3.11 12.79 12.79 0 0 0-4.22-4.65V23.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 23.5V7.24a12.79 12.79 0 0 0-4.22 4.65A12.44 12.44 0 0 0 17.14 15M22.52 7.24V1.5H12l.11.17a12.52 12.52 0 0 0 10.41 5.57Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCirclePieChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.43 19.43A10.5 10.5 0 1 1 12 1.5v5.73a4.77 4.77 0 1 0 3.38 8.15Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a10.47 10.47 0 0 1-3.07 7.43l-4-4A4.79 4.79 0 0 0 16.77 12ZM22.5 12h-5.73A4.78 4.78 0 0 0 12 7.23V1.5A10.5 10.5 0 0 1 22.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCirclesOverlap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 15.8,
    cy: 14.91,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.13,
    cy: 14.91,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.96,
    cy: 8.19,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgClamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.7 1.5H1.52v3.82h1.91v9.54h3.82V8.18a2.86 2.86 0 0 1 2.86-2.86h12.41A3.82 3.82 0 0 0 18.7 1.5ZM13.93 11.05h9.55M16.8 11.05h3.82v3.82H16.8zM16.8 18.68h3.82v3.82H16.8zM23.48 22.5h-9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.43 14.86h17.18a1.91 1.91 0 0 1 1.91 1.91v1.91h-21v-1.91a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClickBait = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.72 9.1h5a3.82 3.82 0 1 0 0-7.64H5.32a3.82 3.82 0 0 0 0 7.64h3.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21.94 18.25-4.4-4.4 3.76-2.13L8.18 7.19l4.53 13.12 2.13-3.76 4.4 4.4 2.7-2.7z"
  }));
};

const SvgClickSelect = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v4.79M12 18.71v4.79M23.5 12h-4.79M5.29 12H.5M20.13 3.87l-3.39 3.39M7.26 16.74l-3.39 3.39M20.13 20.13l-3.39-3.39M7.26 7.26 3.87 3.87"
  }));
};

const SvgClick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.07 20.61H9.79a2 2 0 0 1-2-2 2 2 0 0 1 2-2h1.87L5 9.86a2 2 0 0 1-.19-2.65 1.88 1.88 0 0 1 1.47-.68 1.84 1.84 0 0 1 1.35.55l4.06 4.06 4.08-3.06a1.91 1.91 0 0 1 2.5.18A17.18 17.18 0 0 1 22.42 15l.06.19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.63 10.12A4.73 4.73 0 0 0 11 8.17 4.78 4.78 0 1 0 6.26 13a4.67 4.67 0 0 0 1.55-.26",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClickbaitWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 13v.48a5.61 5.61 0 0 0 1.94 4.1 2.86 2.86 0 1 1-4.81 2.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 19.64H1.5V1.5h19.09v7.64M1.5 7.23h19.09M4.36 4.36h1.91M8.18 4.36h1.91"
  }));
};

const SvgClimbingBars = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5.55v22.9M12 .55v22.9M22.5 6.27v17.18M1.5 2.45H12M1.5 6.27H12M1.5 10.09H12M1.5 13.91H12M1.5 17.73H12M1.5 21.55H12M12 8.18h10.5M12 12h10.5M12 15.82h10.5M12 19.64h10.5"
  }));
};

const SvgClip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 12h13.36a2.86 2.86 0 0 1 2.86 2.86v7.64H2.45v-7.64A2.86 2.86 0 0 1 5.32 12ZM.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 19.64h-2.86L13.91 8.18 16 6.11a2.69 2.69 0 0 0 .79-1.91 2.7 2.7 0 0 0-2.7-2.7H9.93a2.7 2.7 0 0 0-2.7 2.7A2.69 2.69 0 0 0 8 6.11l2.07 2.07-1.89 11.46H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardImage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 17.73h-7.37l.8-1.26L14.04 12l3.69 5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m11.16 16.47-.8 1.26H6.27l2.87-4.3 2.02 3.04z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 10.57,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardInfo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 17.73h3.82M10.09 12H12v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM11.05 9.14h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardLineChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.75 15.82 10.57 12l2.86 2.86 3.82-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardLinesDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 3.41V22.5H3.41V3.41h4.77a1.92 1.92 0 0 0 1.91 1.91h3.82a1.83 1.83 0 0 0 1.34-.57 1.83 1.83 0 0 0 .57-1.34Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 3.41a1.83 1.83 0 0 1-.57 1.34 1.83 1.83 0 0 1-1.34.57h-3.82a1.92 1.92 0 0 1-1.91-1.91 1.93 1.93 0 0 1 1.91-1.91h3.82a1.92 1.92 0 0 1 1.91 1.91ZM6.27 10.09h11.46M6.27 13.91h11.46M6.27 17.73h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardRefresh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 13.91-2.86-2.86L12 8.18"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM9.14 11.05H12a3.82 3.82 0 1 1-3.82 3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardSearch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.57,
    cy: 12.48,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 18.68-3.7-3.7M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05V9.14M12 18.68v-1.91M12 11.05V9.14M12 18.68v-1.91M9.52 12.48l-1.65-.96M16.13 16.3l-1.65-.96M9.52 12.48l-1.65-.96M16.13 16.3l-1.65-.96M14.48 12.48l1.65-.96M7.87 16.3l1.65-.96M14.48 12.48l1.65-.96M7.87 16.3l1.65-.96M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardShare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 11.05,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 13.91 5.72 2.86M14.86 11.05l-5.72 2.86M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 17.73a5 5 0 0 1-3.82-4.89v-2.75L12 9.14l3.82.95v2.75A5 5 0 0 1 12 17.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardSound = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.09v7.64M15.82 12v3.82M8.18 12v3.82M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 22.5H1.5V3.41h3.82a1.92 1.92 0 0 0 1.91 1.91h3.82a1.83 1.83 0 0 0 1.34-.57A1.87 1.87 0 0 0 13 3.41h3.82v4.77M20.59 15.39v-4.34h-3.82v4.34a3.82 3.82 0 1 0 3.82 0ZM22.5 11.05h-7.64M14.86 17.73h4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.9 3a1.87 1.87 0 0 1-.51 1.79 1.83 1.83 0 0 1-1.34.57H7.32a2 2 0 0 1-1.95-1.5A1.92 1.92 0 0 1 7.23 1.5H11A2 2 0 0 1 12.9 3ZM5.32 9.14h7.63M5.32 12.95h7.63M5.32 16.77h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboardVideo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM7.23 10.09h5.73v6.68H7.23zM12.96 13.91l2.86 2.86h.95v-6.68h-.95l-2.86 2.87v.95z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClipchart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13ZM15.82 2.46h4.77V22.5H3.41V2.46h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClocheCover = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.38 20.62H8.62a6.92 6.92 0 0 1-6.2-3.83h19.16a6.92 6.92 0 0 1-6.2 3.83ZM.5 16.79h23M11.6 7.21h.8a8.22 8.22 0 0 1 8.22 8.22v1.36H3.37v-1.36a8.22 8.22 0 0 1 8.23-8.22ZM12 5.29v1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.33,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClocheFoodCover = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 17.73h21v3.82h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23a9.55 9.55 0 0 1 9.55 9.55v1H2.45v-1A9.55 9.55 0 0 1 12 7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 7.23V4.36"
  }));
};

const SvgClocheFoodMeal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.71 20.63H5.29l-1.91-3.84h17.25l-1.92 3.84zM.5 16.79h23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.25a9.58 9.58 0 0 1 9.58 9.58v1H2.42v-1A9.58 9.58 0 0 1 12 6.25ZM12 3.37v2.88M10.08 3.38h3.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCloche = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 16.79h23M2.42 16.79h19.16V17a3.65 3.65 0 0 1-3.65 3.65H6.07A3.65 3.65 0 0 1 2.42 17v-.21ZM12 7.21a9.58 9.58 0 0 1 9.58 9.58H2.42A9.58 9.58 0 0 1 12 7.21Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.29,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClockTime = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36V12l4.77 4.77"
  }));
};

const SvgClock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36v6.69M16.77 16.77l-3.82-3.82"
  }));
};

const SvgClosedBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.89V5.32H9.14v1.57a1.91 1.91 0 0 1-1.2 1.77l-1.78.71A2.88 2.88 0 0 0 4.36 12v7.61a2.87 2.87 0 0 0 2.87 2.89h9.54a2.87 2.87 0 0 0 2.87-2.86V12a2.88 2.88 0 0 0-1.8-2.66l-1.78-.71a1.91 1.91 0 0 1-1.2-1.74ZM10.09 1.5h3.82v3.82h-3.82zM7.23 5.32h9.54M4.36 12h15.28M7.23 16.77h1.91M11.05 18.68h1.9M14.86 15.82h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClosedTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32h7.64v13.36A3.82 3.82 0 0 1 12 22.5a3.82 3.82 0 0 1-3.82-3.82V5.32ZM17.73 5.32H6.27M9.14 1.5h5.73v3.82H9.14zM8.18 10.09h7.64M11.05 17.73h1.9M12 13.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCloset = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 1.5H12v20.09H2.43zM12 1.5h4.78v15.3H12zM16.78 1.5h4.78v15.3h-4.78zM12 16.8h9.57v4.78H12zM5.3 23.5v-1.91M18.7 23.5v-1.91M8.17 11.07v1.91M16.78 18.72V16.8"
  }));
};

const SvgClosets = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 1.5H12v20.09H2.43zM12 1.5h9.57v20.09H12zM4.35 23.5v-1.91M19.65 23.5v-1.91M8.17 11.07v1.91M15.83 11.07v1.91"
  }));
};

const SvgClothingHanger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.76 18.68H3.24a1.74 1.74 0 0 1-1.74-1.74 1.76 1.76 0 0 1 1-1.59l9.5-4.3 9.48 4.3a1.76 1.76 0 0 1 1 1.59 1.74 1.74 0 0 1-1.72 1.74ZM12 11.05v-.26a2.53 2.53 0 0 1 1.13-2 1.91 1.91 0 1 0-3-1.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCloudArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.75 15.87 2.88-2.88 2.88 2.88"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.79 20.66a3.84 3.84 0 0 0 3.84-3.83V13M7.16 8.19l-2.88 2.88-2.87-2.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.12 3.4a3.84 3.84 0 0 0-3.84 3.83v3.84M20.59 5.32h-1v-1a2.88 2.88 0 1 0-5.75 0h-.44a2.4 2.4 0 1 0 0 4.79h7.19a1.92 1.92 0 1 0 0-3.83ZM11 18.74h-1v-1a2.88 2.88 0 0 0-5.76 0H3.8a2.4 2.4 0 0 0 0 4.8H11a1.92 1.92 0 1 0 0-3.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCloudBlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M15.83 17.75h2.88a3.86 3.86 0 0 0 3.83-3.58 2.26 2.26 0 0 0 0-.26 3.84 3.84 0 0 0-3.84-3.84h-1V8.16A5.77 5.77 0 0 0 12 2.4h-.22A5.73 5.73 0 0 0 7 5.37a2.1 2.1 0 0 0-.13.26 6.5 6.5 0 0 0-.57 2.53A4.78 4.78 0 0 0 1.45 13a1.34 1.34 0 0 0 0 .2 4.79 4.79 0 0 0 4.78 4.6h1.93",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.75,
    r: 3.84,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.71 15.03-5.43 5.43"
  })));
};

const SvgCloudDatabase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 12h-1v-1.92A5.75 5.75 0 0 0 12 4.33h-.21a5.69 5.69 0 0 0-4.82 3 2.15 2.15 0 0 0-.14.26 6.63 6.63 0 0 0-.56 2.52 4.78 4.78 0 0 0-4.8 4.8 1.41 1.41 0 0 0 0 .2 4.8 4.8 0 0 0 4.79 4.59h12.42a3.82 3.82 0 0 0 3.82-3.58 2.17 2.17 0 0 0 0-.26A3.82 3.82 0 0 0 18.68 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    "data-name": "roll brush"
  }));
};

const SvgCloudFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M17.71 16.79h1a3.84 3.84 0 0 0 3.83-3.57 2.35 2.35 0 0 0 0-.26 3.84 3.84 0 0 0-3.84-3.84h-1V7.2A5.77 5.77 0 0 0 12 1.45h-.21a5.72 5.72 0 0 0-4.83 3l-.13.26a6.49 6.49 0 0 0-.61 2.49A4.78 4.78 0 0 0 1.41 12a1.41 1.41 0 0 0 0 .2 4.78 4.78 0 0 0 4.79 4.59h1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.92 14.88 11 13H7.16v8.63a1 1 0 0 0 1 1h8.63a1 1 0 0 0 1-1v-6.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCloudLock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 15.83h7.67v5.75H8.17zM14.88 15.83H9.12v-1.91A2.87 2.87 0 0 1 12 11a2.88 2.88 0 0 1 2.88 2.88Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.84 17.75h2.88a3.82 3.82 0 0 0 3.82-3.58 2.09 2.09 0 0 0 0-.25 3.83 3.83 0 0 0-3.83-3.84h-1V8.16A5.77 5.77 0 0 0 12 2.41h-.21A5.69 5.69 0 0 0 7 5.38c0 .09-.1.17-.14.26a6.67 6.67 0 0 0-.56 2.52A4.78 4.78 0 0 0 1.45 13a1.41 1.41 0 0 0 0 .2 4.8 4.8 0 0 0 4.79 4.59h1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCloudNetwork = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M17.5 8.16h-.72V6.24a4.61 4.61 0 0 0-4.61-4.6H12A4.57 4.57 0 0 0 8.15 4a2.12 2.12 0 0 0-.15.23 5 5 0 0 0-.45 2 3.84 3.84 0 0 0-3.84 3.84.86.86 0 0 0 0 .16 3.85 3.85 0 0 0 3.83 3.68h9.96a2.9 2.9 0 0 0 2.87-2.69V11a2.87 2.87 0 0 0-2.87-2.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.98,
    cy: 20.63,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.98 13.92v4.79M10.06 20.63H.47M23.49 20.63H13.9"
  })));
};

const SvgCloudSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.75,
    r: 2.88,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 14.88v-1.92M12 22.55v-1.92M12 14.88v-1.92M12 22.55v-1.92M9.5 16.31l-1.66-.96M16.15 20.15l-1.66-.96M9.5 16.31l-1.66-.96M16.15 20.15l-1.66-.96M14.49 16.31l1.66-.96M7.84 20.15l1.66-.96M14.49 16.31l1.66-.96M7.84 20.15l1.66-.96M17.75 17.75h1a3.84 3.84 0 0 0 3.83-3.58 2.09 2.09 0 0 0 0-.25 3.84 3.84 0 0 0-3.84-3.84h-1V8.16A5.77 5.77 0 0 0 12 2.41h-.22A5.69 5.69 0 0 0 7 5.38a1.58 1.58 0 0 0-.13.26 6.49 6.49 0 0 0-.57 2.52A4.78 4.78 0 0 0 1.45 13a1.41 1.41 0 0 0 0 .2 4.78 4.78 0 0 0 4.78 4.59"
  })));
};

const SvgCloudTransfer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M13.17 6.72h-.65V5.4a3.94 3.94 0 0 0-1.15-2.79 3.88 3.88 0 0 0-2.78-1.16h-.14a3.91 3.91 0 0 0-3.29 2l-.09.18a4.56 4.56 0 0 0-.39 1.77 3.23 3.23 0 0 0-2.31 1 3.31 3.31 0 0 0-1 2.33.66.66 0 0 0 0 .14A3.28 3.28 0 0 0 4.67 12h8.5a2.64 2.64 0 0 0 1.83-.77 2.75 2.75 0 0 0 .76-1.69 1.09 1.09 0 0 0 0-.18 2.63 2.63 0 0 0-2.59-2.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.87,
    y: 14.87,
    width: 8.63,
    height: 3.84,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.87,
    y: 18.71,
    width: 8.63,
    height: 3.84,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.87 20.63H8.11V12M13.87 16.79H8.11"
  })));
};

const SvgCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.53 11.13a5.37 5.37 0 0 0 .11-1.06A5.73 5.73 0 0 0 8.42 8.43a2.77 2.77 0 0 0-1.19-.27A2.87 2.87 0 0 0 4.36 11a.51.51 0 0 0 0 .13 3.81 3.81 0 0 0 .94 7.51h13.38a3.81 3.81 0 0 0 .85-7.53Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgClouds = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.34 13h-.57a4.86 4.86 0 0 0 .09-.95 4.77 4.77 0 0 0-9.54 0 3.82 3.82 0 0 0 0 7.64h10a3.35 3.35 0 0 0 0-6.69Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.64 16.77h.52a3.34 3.34 0 0 0 0-6.68h-.57a5.88 5.88 0 0 0 .09-.95 4.77 4.77 0 0 0-9.17-1.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCloudyNight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.35 15.83h-.57a5 5 0 0 0 .09-.95 4.79 4.79 0 1 0-9.58 0 3.83 3.83 0 1 0 0 7.66h10.06a3.36 3.36 0 1 0 0-6.71Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 14.8a5.11 5.11 0 0 0 1 .08 6.68 6.68 0 0 0 6.62-5.69 4.8 4.8 0 0 1-7.58-3.9 4.83 4.83 0 0 1 1.79-3.77 6.15 6.15 0 0 0-.87-.06 6.7 6.7 0 0 0-6.71 6.71 7.05 7.05 0 0 0 .29 2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCloudy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.2 11.05h-.56a6.12 6.12 0 0 0 .09-1 5.73 5.73 0 0 0-11.46 0 4.78 4.78 0 0 0 0 9.55H18.2a4.3 4.3 0 1 0 0-8.59Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCnTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.43 8.15h-2.86L9.13 6.72V4.33h5.74v2.39ZM12 .5v3.83M11.04 8.15l-.95 14.35h3.82l-.95-14.35M3.39 22.5h17.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCoconutCocktail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 9.14H6.27L4.36 13v1.91a7.64 7.64 0 0 0 15.28 0V13ZM4.36 12.95h15.28M13.91 16.77v-3.82M19.64 1.5l-4.78.96v6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.53 1.62a3.82 3.82 0 0 1 3.82 3.82H3.71a3.82 3.82 0 0 1 3.82-3.82Z",
    transform: "rotate(-20 7.536 3.522)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.57 9.14 8.18 5.32"
  }));
};

const SvgCodingFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 15.82-2.87-2.86 2.87-2.87M14.86 15.82l2.87-2.86-2.87-2.87M12.95 10.09l-1.9 5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgCodingWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.14 17.8-2.88-2.88 2.88-2.88M15.81 17.8l2.88-2.88-2.88-2.88M10.06 17.8l3.83-5.76"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 1.49h21.1v21.1H1.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.53 7.25H1.43V1.49h21.1v5.76zM4.3 4.37h1.92M8.14 4.37h1.92M11.98 4.37h1.91"
  })));
};

const SvgCoding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 6.27 1.5 12l5.73 5.73M16.77 17.73 22.5 12l-5.73-5.73M11.05 12h1.9M15.82 12h1.91M6.27 12h1.91"
  }));
};

const SvgCoffeeDrink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 7.23 18.09 12l-.6 4.77-.72 5.73H7.23l-.72-5.73L5.92 12l-.6-4.77h13.36zM3.41 7.23h17.18M15.82 1.5H8.18L5.32 4.36v2.87h13.36V4.36L15.82 1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 14.39a2.41 2.41 0 1 1-.73-1.71 2.36 2.36 0 0 1 .73 1.71Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCoffeeMaker = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5H5.32A3.82 3.82 0 0 0 1.5 5.32v1.91h13.36v11.45H1.5v3.82h21V5.32a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 12H11v3.38a3.31 3.31 0 0 1-3.31 3.31h-1a3.31 3.31 0 0 1-3.31-3.31V12h.03ZM7.23 9.14V7.23M17.73 18.68h1.91M17.73 14.86h1.91M17.73 11.05h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCoinExchange = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 13.91v.95A5.72 5.72 0 0 1 13 20.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "m16.35 15.28 2.39-2.38 2.39 2.38M5.38 10.09v-1a5.73 5.73 0 0 1 5.72-5.74"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "m7.71 8.66-2.39 2.38-2.39-2.38"
  }));
};

const SvgCoinPurse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "wallet coin"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M11.35 6.29c-5.61.35-9.85 5.48-9.85 11.32h0a3.87 3.87 0 0 0 3.79 3.94h13.42a3.87 3.87 0 0 0 3.79-3.94v-.43A10.68 10.68 0 0 0 11.35 6.29Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.53 10.11c-4.08.26-7.17 4.1-7.17 8.48h0a2.87 2.87 0 0 0 2.76 3h9.76a2.87 2.87 0 0 0 2.76-3v-.32c0-4.68-3.64-8.45-8.11-8.16Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 4.36,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 4.36,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgCoinStack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "coins 2"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M4.36 18.68h13.36v3.82H4.36zM6.27 14.86h13.36v3.82H6.27z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgCoins = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "coins 1"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M12 4.84c0 .78-.83 1.48-2.11 1.91a9.55 9.55 0 0 1-3.14.48 9.55 9.55 0 0 1-3.14-.48C2.33 6.32 1.5 5.62 1.5 4.84c0-1.32 2.35-2.39 5.25-2.39S12 3.52 12 4.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 4.84v3.82c0 .78-.83 1.48-2.11 1.91a9.82 9.82 0 0 1-3.14.48 9.82 9.82 0 0 1-3.14-.48C2.33 10.14 1.5 9.44 1.5 8.66V4.84c0 .78.83 1.48 2.11 1.91a9.55 9.55 0 0 0 3.14.48 9.55 9.55 0 0 0 3.14-.48C11.17 6.32 12 5.62 12 4.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.66v3.82c0 .78-.83 1.48-2.11 1.91a9.84 9.84 0 0 1-3.14.47 9.84 9.84 0 0 1-3.14-.47C2.33 14 1.5 13.26 1.5 12.48V8.66c0 .78.83 1.48 2.11 1.91a9.82 9.82 0 0 0 3.14.48 9.82 9.82 0 0 0 3.14-.48C11.17 10.14 12 9.44 12 8.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.48v3.82c0 1.31-2.35 2.38-5.25 2.38S1.5 17.61 1.5 16.3v-3.82c0 .78.83 1.48 2.11 1.91a9.84 9.84 0 0 0 3.14.47 9.84 9.84 0 0 0 3.14-.47C11.17 14 12 13.26 12 12.48ZM22.5 12.48v3.82c0 1.31-2.35 2.38-5.25 2.38S12 17.61 12 16.3v-3.82c0 .78.83 1.48 2.11 1.91a9.84 9.84 0 0 0 3.14.47 9.84 9.84 0 0 0 3.14-.47c1.28-.39 2.11-1.13 2.11-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.48v7.63c0 1.32-2.35 2.39-5.25 2.39S1.5 21.43 1.5 20.11v-7.63M22.5 13.48v6.63c0 1.32-2.35 2.39-5.25 2.39S12 21.43 12 20.11v-7.63M22.5 6.75a5.25 5.25 0 1 1-5.25-5.25 5.2 5.2 0 0 1 5.25 5.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12.48c0 .78-.83 1.48-2.11 1.91a9.84 9.84 0 0 1-3.14.47 9.84 9.84 0 0 1-3.14-.47C12.83 14 12 13.26 12 12.48s.69-1.36 1.78-1.8a5.22 5.22 0 0 0 6.94 0c1.09.44 1.78 1.08 1.78 1.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgColdSnow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19v-3.54M12 8.54V5M16 1l-4 4-4-4M8 23l4-4 4 4M18.06 15.5 15 13.73M9 10.27 5.94 8.5M4.47 3.04 5.94 8.5.47 9.96M19.53 20.96l-1.47-5.46 5.47-1.46M9 13.73 5.94 15.5M18.06 8.5 15 10.27M19.53 3.04 18.06 8.5l5.47 1.46M4.47 20.96l1.47-5.46-5.47-1.46M15 10.27v3.46l-3 1.73-3-1.73v-3.46l3-1.73 3 1.73zM4 12h2M18 12h2M8 18.93l1-1.73M15 6.8l1-1.73M16 18.93l-1-1.73M9 6.8 8 5.07"
  }));
};

const SvgColdSnowflake = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 23.5V14.88M12 9.13V.5M15.35 2.9 12 6.25 8.65 2.9M12 23.5V14.88M12 9.13V.5M8.65 21.1 12 17.75l3.35 3.35M21.96 17.75l-4.98-2.87-2.49-1.44M9.51 10.56 2.04 6.25M5.79 4.54l1.23 4.59-4.58 1.22"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21.96 17.75-4.98-2.87-2.49-1.44M9.51 10.56 2.04 6.25"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.21 19.46-1.23-4.58 4.58-1.23M9.51 13.44l-7.47 4.31M14.49 10.56l2.49-1.43 4.98-2.88"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.21 4.54-1.23 4.59 4.58 1.22M9.51 13.44l-7.47 4.31"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.49 10.56 2.49-1.43 4.98-2.88M5.79 19.46l1.23-4.58-4.58-1.23M14.88 12a2.89 2.89 0 1 1-.39-1.44 2.9 2.9 0 0 1 .39 1.44Z"
  }));
};

const SvgColdTemperatureThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 13.93V4.36A2.87 2.87 0 0 0 6.27 1.5a2.86 2.86 0 0 0-2.86 2.86v9.57a4.78 4.78 0 1 0 5.73 0ZM6.27 12v4.77M17.73 8.18v5.73M19.64 6.27l-1.91 1.91-1.91-1.91M15.82 15.82l1.91-1.91 1.91 1.91M20.59 11.05h-5.73M22.5 12.96l-1.91-1.92 1.91-1.9M12.96 9.14l1.9 1.9-1.9 1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 11.05,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgColdTemperature = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.54,
    cy: 17.52,
    r: 0.93,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.24 14.77V5.48a3.71 3.71 0 1 0-7.41 0v9.29a4.56 4.56 0 0 0-.93 2.75 4.64 4.64 0 1 0 9.27 0 4.56 4.56 0 0 0-.93-2.75ZM17.54 12.89v3.71M9.2 19.38v-7.42M9.2 8.26V.84M11.98 2.7 9.2 5.48 6.42 2.7M6.42 17.52l2.78-2.78 2.78 2.78M9.2 19.38v-7.42M9.2 8.26V.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.98 2.7 9.2 5.48 6.42 2.7M6.42 17.52l2.78-2.78 2.78 2.78M10.8 11.04l2.41 1.39.62.36M7.59 9.18l-6.42-3.7M4.17 4l1.01 3.79-3.79 1.02"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.8 11.04 2.41 1.39.62.36M7.59 9.18l-6.42-3.7M4.17 4l1.01 3.79-3.79 1.02M7.59 11.04l-6.42 3.7M10.8 9.18l2.41-1.39.62-.36M4.17 16.23l1.01-3.8-3.79-1.02M7.59 11.04l-6.42 3.7"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.8 9.18 2.41-1.39.62-.36M4.17 16.23l1.01-3.8-3.79-1.02"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 10.11A1.85 1.85 0 0 1 9.2 12a1.87 1.87 0 0 1-1.61-1 1.85 1.85 0 0 1 0-1.86 1.86 1.86 0 0 1 3.21 0 1.85 1.85 0 0 1 .25.97Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgColdWinter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15 1-3 3-3-3M9 23l3-3 3 3M12 4v16"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.97 3.9 5.07 8 .97 9.1M20.03 20.1l-1.1-4.1 4.1-1.1M5.07 8l13.86 8"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.67,
    cy: 9.5,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.33,
    cy: 14.5,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.03 3.9 18.93 8l4.1 1.1M3.97 20.1l1.1-4.1-4.1-1.1M18.93 8 5.07 16"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.33,
    cy: 9.5,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.67,
    cy: 14.5,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2 12h2M20 12h2M7 20.66l1-1.73M16 5.07l1-1.73M17 20.66l-1-1.73M8 5.07 7 3.34"
  }));
};

const SvgColorSwatches = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.72 16.81v3.83M14.88 16.81v3.83M11.04 16.81v3.83M22.55 14.89v7.67H5.29a3.84 3.84 0 1 1 0-7.67Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.55 14.89v7.67H5.29a3.84 3.84 0 1 1 0-7.67Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 18.72V1.46h7.68v8"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m20.54 8.9-6 6H5.29A3.87 3.87 0 0 0 2.57 16L15.11 3.48ZM4.33 18.72h1.92M3.37 5.3h3.84M3.37 9.13h3.84M13.92 7.22l2.88 2.87M11.04 10.09l2.88 2.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgColor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.73,
    cy: 13.45,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.65,
    cy: 18.24,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.69,
    cy: 8.65,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.52,
    cy: 5.78,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.32,
    cy: 6.74,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 10.57,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 11.86a4.87 4.87 0 0 1-4.86 4.95h-1.47a4.28 4.28 0 0 0-3.57 1.91l-1.15 1.72a4.74 4.74 0 0 1-4 2.12 4.61 4.61 0 0 1-3.87-2 13.07 13.07 0 0 1-2.18-7.26V12a10.55 10.55 0 0 1 21.1-.15Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgColosseum = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 14.88h19.17v5.75H2.42zM2.42 9.13h19.17v5.75H2.42zM11.04 9.13H2.42V3.38h6.71l1.91 5.75zM.5 20.63h23M.5 14.88h23M23.5 9.13H.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.71 20.63-1.92-5.75h-1.91l-1.92-5.75h-1.92L9.13 3.38M6.25 6.25v2.88M6.25 12v2.88M10.08 12v2.88M17.75 12v2.88M6.25 17.75v2.88M10.08 17.75v2.88M13.92 17.75v2.88"
  }));
};

const SvgColumnLayout = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(90 11.97 5.32)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.13-5.23h7.67v21.1H8.13z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 17.245 12.515)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.89 7.24h6.71v10.55h-6.71z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 6.695 12.515)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.34 7.24h6.71v10.55H3.34z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 17.245 19.225)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.89 13.95h6.71V24.5h-6.71z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 6.695 19.225)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.34 13.95h6.71V24.5H3.34z"
  })));
};

const SvgCommentBlank = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCommentCaptions = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5 10h2M9 10h2M13 10h2M17 10h2M1 5v10h8v4l6-4h8V5H1z"
  }));
};

const SvgCommentDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3ZM15.82 10.07h1.91M11.05 10.07h1.9M6.27 10.07h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCompassGeometry = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m19.75 23.89-6-13.52-.28-.64A2.89 2.89 0 1 0 10 9.28l.49.49-.27.6-6 13.52-1.72-.78 6-13.52.22 1.09a4.79 4.79 0 1 1 6.6 0l.22-1.09 6 13.52-1.75.78Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 13.92h7.66M12 12v3.83M12 .5v2.88"
  }));
};

const SvgCompassPointers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a10.5 10.5 0 0 1-16.35 8.72 10.32 10.32 0 0 1-2.87-2.87A10.5 10.5 0 0 1 17.85 3.28a10.32 10.32 0 0 1 2.87 2.87A10.47 10.47 0 0 1 22.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.85 3.28 19 2.09A2 2 0 0 1 21.91 5l-1.19 1.15M7.71 16.3l6.2-2.39 2.39-6.2-6.21 2.38-2.38 6.21zM10.09 10.09l3.82 3.82M12 3.41v1.91M12 18.68v1.91M20.59 12h-1.91M5.32 12H3.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCompassTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.65 5.78a2.77 2.77 0 0 1-.17 1 2.83 2.83 0 0 1-1.74 1.7 2.77 2.77 0 0 1-1 .17 2.86 2.86 0 0 1-2.83-2.87 2.87 2.87 0 0 1 2.87-2.87 2.86 2.86 0 0 1 2.87 2.87ZM1 1l2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.48 6.74a2.77 2.77 0 0 0 .17-1 2.86 2.86 0 0 0-2.87-2.83h13.39v1.92L16.3 6.74ZM6.74 8.48v7.82l-1.91 2.87H2.91V5.78a2.86 2.86 0 0 0 2.87 2.87 2.77 2.77 0 0 0 .96-.17ZM3.87 23v-3.83M23 3.87h-3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.74 13.43a6.68 6.68 0 0 0 6.69-6.69M10.09 10.09l2.87 2.87M22 7.22A14.81 14.81 0 0 1 7.22 22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCompass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 6.25,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.02.5v3.83M5.31 23.5v-1.92L11.25 8M12.79 8l5.94 13.58v1.92M8.19 15.83h11.5"
  }));
};

const SvgComputerChip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.38,
    y: 3.38,
    width: 17.25,
    height: 17.25,
    rx: 2.18,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.21,
    y: 7.21,
    width: 9.58,
    height: 9.58,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21.5v1.92M12 .5v1.92M16.79.5v1.92M7.21 21.58v1.92M12 21.58v1.92M16.79 21.58v1.92M.5 16.79h1.92M.5 12h1.92M.5 7.21h1.92M21.58 16.79h1.92M21.58 12h1.92M21.58 7.21h1.92"
  }));
};

const SvgComputerMemory = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 2.46h1.91v20.08M22.5 4.37v14.35h-6.7v-.96h-5.74l-.95.96h-6.7V4.37H22.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.41 8.2h4.78v6.7H2.41zM11.02 9.15h7.65v3.83h-7.65zM11.98 7.24v1.91M14.85 7.24v1.91M17.72 7.24v1.91M11.98 12.98v1.91M14.85 12.98v1.91M17.72 12.98v1.91"
  }));
};

const SvgComputerMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 22.5.96-4.77M5.32 22.5h13.36"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 16.23,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.75 22.5-.95-4.77M1.5 13.91h21"
  }));
};

const SvgComputerScreen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 16.23,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 22.5H8.18l.96-4.77h5.72l.96 4.77zM5.32 22.5h13.36"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgConcierge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.17 1.5h7.65v6.7A3.83 3.83 0 0 1 12 12a3.83 3.83 0 0 1-3.83-3.8V1.5ZM8.17 5.33H18.7M4.35 23.5v-3.83A7.65 7.65 0 0 1 12 12a7.65 7.65 0 0 1 7.65 7.65v3.85M9.13 17.76h1.91M9.13 21.59h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.93 12.66 4.03 3.19v7.65"
  }));
};

const SvgCondom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 1.5a2 2 0 0 0-1.48.59l-.36.36H17.4a3.86 3.86 0 0 0-2.7 1.12L3.41 14.86l5.73 5.73L20.43 9.3a3.86 3.86 0 0 0 1.12-2.7V5.32l.36-.32a2 2 0 0 0 .59-1.44 2 2 0 0 0-2.02-2.06ZM1.5 12.95l9.55 9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgConnectedTestTubes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 10.09h5.73v9.55a2.86 2.86 0 0 1-2.86 2.86 2.86 2.86 0 0 1-2.86-2.86v-9.55ZM.55 10.09h9.54M15.82 10.09h5.73v9.55a2.86 2.86 0 0 1-2.86 2.86 2.86 2.86 0 0 1-2.86-2.86v-9.55ZM13.91 10.09h9.54M3.41 6.27h3.82v3.82H3.41zM16.77 6.27h3.82v3.82h-3.82zM5.32 6.27V4a2.48 2.48 0 0 1 2.49-2.5 2.48 2.48 0 0 1 2.06 1.11l.65 1a1.76 1.76 0 0 0 1.48.75 1.76 1.76 0 0 0 1.48-.79l.65-1a2.48 2.48 0 0 1 2.06-1.07A2.48 2.48 0 0 1 18.68 4v2.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 14.86c2.87-.95 2.87 1.91 5.73 0M15.82 14.86c2.86-.95 2.86 1.91 5.73 0M5.32 12v-1.91M18.68 12v-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgConnection = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M10.09 15.82 12 13.91l1.91 1.91M12 12v1.91M12 5.32h0a2.86 2.86 0 0 1 2.86 2.86v1h0-5.72 0v-1A2.86 2.86 0 0 1 12 5.32Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 18.68h0a2.86 2.86 0 0 1 2.86 2.86v1h0-5.73 0v-1a2.86 2.86 0 0 1 2.87-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 18.68h0a2.86 2.86 0 0 1 2.86 2.86v1h0H1.5h0v-1a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgConstructionCrane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 22.54H5.29V1.46h3.84v21.08z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 6.25h21.08v-.96L9.13 1.46H5.29L1.46 5.29v.96zM23.5 22.54H.5M20.62 6.25v3.39a1.82 1.82 0 0 0 .9 1.63A1.92 1.92 0 1 1 18.71 13M9.13 16.79l-3.84 3.84M5.29 12l3.84 3.83M9.13 7.21l-3.84 3.83"
  }));
};

const SvgConstructionHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4 15.5v-7M20 8.5v7M23 10.5l-11-9-11 9M7 14.5h2M11 14.5h2M15 14.5h2M7 22.5h2M3 22.5h2M11 22.5h2M15 22.5h2M19 22.5h2M3 18.5h2M19 18.5h2"
  }));
};

const SvgConstructionSaw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.13h21v3.82h-21zM3.41 1.49A1.91 1.91 0 0 1 5.32 3.4v5.73H1.5V3.4a1.91 1.91 0 0 1 1.91-1.91ZM20.59 1.49A1.91 1.91 0 0 1 22.5 3.4v5.73h-3.82V3.4a1.91 1.91 0 0 1 1.91-1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.01 2.1-.95 2.11.95 2.1-.95 2.1.95 2.1-.95 2.1.95 2.09-.95 2.1.95 2.1-.95 2.1.95v-9.07h-21v9.07z"
  }));
};

const SvgConstructionTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 8.2h3.82v13.36H1.5zM5.32 8.2h3.82v13.36H5.32zM9.14 8.2h3.82v13.36H9.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.2V6.77a5.25 5.25 0 0 1 5.25-5.25 5.25 5.25 0 0 1 5.25 5.25v7.16M22.5 15.84l-2.86 4.77-2.87-4.77.96-1.91h3.82l.95 1.91zM1.5 6.3v17.18M12.95 6.3v17.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgConstructionTools = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.6 9.98h10.8v4.05H6.6z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.14 9.14 12 6.27 9.14H4.36A2.87 2.87 0 0 1 1.5 6.27V4.36l.4.4A2.1 2.1 0 0 0 4.69 5a2 2 0 0 0 .15-3l-.48-.5h1.91a2.87 2.87 0 0 1 2.87 2.86v1.91ZM19.64 14.86a2.87 2.87 0 0 1 2.86 2.87v1.91l-.4-.4a2.1 2.1 0 0 0-2.79-.24 2 2 0 0 0-.15 3l.48.48h-1.91a2.87 2.87 0 0 1-2.87-2.86v-1.89L12 14.86 14.86 12l2.87 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgConstructionTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.71 18.68h7.15v-4.77H1.5v4.77h2.39M16.77 18.68h-1.91V7.23h5.73l1.91 5.73v5.72h-1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 3.41-1.91 1.91H1.5v4.77l2.86 3.82h10.5V3.41H12zM16.77 3.41h-1.91M7.23 7.23v3.82M11.05 7.23v3.82M17.73 12.95h4.77"
  }));
};

const SvgConstructionTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 18.68h1.91v-5.72l-1.91-5.73h-3.82v11.45M19.64 13.91h2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 3.41h-2.87v10.5H4.36L1.5 11.04V5.32h11.46l1.9-1.91h1.91M9.14 9.14v4.77M5.32 9.14v4.77M12.95 9.14v4.77M7.23 18.68h9.54v-4.77H1.5v4.77h1.91"
  }));
};

const SvgConstructionWorker = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 6.27V1.5M14.86 6.27V1.5M8.18 10.09H4.36M19.64 10.09h-3.82M20.59 10.09A8.6 8.6 0 0 0 12 1.5a8.6 8.6 0 0 0-8.59 8.59 1.9 1.9 0 0 0-1.88 2.23 2 2 0 0 0 2 1.59h17a2 2 0 0 0 2-1.59 1.9 1.9 0 0 0-1.94-2.23Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13.91h15.28v1A7.64 7.64 0 0 1 12 22.5a7.64 7.64 0 0 1-7.64-7.64v-1 .05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgContactMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 18.68h13.36"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.09A2.86 2.86 0 0 1 14.86 13v1H9.14v-1A2.86 2.86 0 0 1 12 10.09Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgContract = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v21H3.41zM16.77 7.23h0ZM16.77 11.05h0Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 19.64v-.96l1.91-2.86.95 2.86 1.92-.95.95.95h2.86"
  }));
};

const SvgController = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 3.21,
    rx: 3.91,
    ry: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.02 11.02h1.96M20.79 6.14l-1 2-2.09-.82a6.21 6.21 0 0 1-1.83 1.06l-1.66 12.43A2.23 2.23 0 0 1 12 22.75a2.23 2.23 0 0 1-2.21-1.94L8.2 8.87l-.07-.49A6.21 6.21 0 0 1 6.3 7.32l-2.12.77-1-1.95L5.7 3.65c1-1.41 3.47-2.4 6.3-2.4s5.27 1 6.3 2.4Z"
  }));
};

const SvgConversation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 14.89,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48v-1a4.78 4.78 0 0 1 4.77-4.77 4.78 4.78 0 0 1 4.78 4.77v1M9.14 3.43v5.73a1.91 1.91 0 0 0 1.91 1.91h2.86V13l2.86-1.91h3.82a1.91 1.91 0 0 0 1.91-1.93V3.43a1.91 1.91 0 0 0-1.91-1.91h-9.54a1.91 1.91 0 0 0-1.91 1.91ZM12 6.3h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCookie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 8.18,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCookingStation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 7.23h11.5v14.38H2.42zM13.92 16.81h7.67v4.79h-7.67zM13.92 12.02h7.67v4.79h-7.67zM13.92 7.23h7.67v4.79h-7.67zM.5 7.23h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 13.94h3.83v3.83H6.25zM5.29 3.4H11v1.91a1.92 1.92 0 0 1-1.87 1.92H7.21a1.92 1.92 0 0 1-1.92-1.92V3.4ZM15.83 3.4h-4.79M5.29 10.1h5.75M17.75 9.15V7.23M17.75 13.94v-1.92M17.75 18.73v-1.92"
  }));
};

const SvgCornSeeds = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 20.59c0 2.11-1.71 1.91-3.82 1.91s-3.82.2-3.82-1.91c0-1 1.91-5.73 3.82-5.73s3.82 4.77 3.82 5.73ZM21.77 12.56c1.49 1.49.14 2.56-1.35 4s-2.56 2.89-4.05 1.44c-.67-.68-2.7-5.4-1.35-6.75s6.08.64 6.75 1.31ZM5.32 3.42c0-2.11 1.68-1.91 3.82-1.91S13 1.31 13 3.42c0 1-1.91 5.72-3.81 5.72S5.32 4.37 5.32 3.42Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCornStarch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h15.27v21H1.5zM16.77 1.5h5.73v21h-5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 13.91h1.43a2.39 2.39 0 0 1 2.39 2.39v1.43H7.7a2.39 2.39 0 0 1-2.39-2.39v-1.43h.01Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.52 13.91H13v1.43a2.39 2.39 0 0 1-2.39 2.39H9.14V16.3a2.39 2.39 0 0 1 2.38-2.39Z",
    transform: "rotate(180 11.045 15.82)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 10.09h1.43a2.39 2.39 0 0 1 2.39 2.39v1.43H7.7a2.39 2.39 0 0 1-2.39-2.39v-1.43h.01Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.52 10.09H13v1.43a2.39 2.39 0 0 1-2.39 2.39H9.14v-1.43a2.39 2.39 0 0 1 2.39-2.39Z",
    transform: "rotate(180 11.045 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.61 6.27H11V7.7a2.39 2.39 0 0 1-2.39 2.39H7.23V8.66a2.39 2.39 0 0 1 2.38-2.39Z",
    transform: "rotate(135 9.135 8.183)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 20.59v-2.86M1.5 1.5h3.82v1a2.86 2.86 0 0 1-2.87 2.82h-1V1.5h.05ZM16.77 18.68h5.73M16.77 5.32h5.73"
  }));
};

const SvgCorn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.72 22.48a2 2 0 0 0 .56 0M7.27 10.38C7.55 4 9.57 1.5 12 1.5s4.45 2.5 4.73 8.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 10.09A6.68 6.68 0 0 1 12 16.77v5.73a6.68 6.68 0 0 1-6.68-6.68v-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 10.09v5.73A6.68 6.68 0 0 1 12 22.5v-5.73a6.68 6.68 0 0 1 6.68-6.68Z",
    transform: "rotate(180 15.34 16.295)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 6.27H12M12 9.14h1.91"
  }));
};

const SvgCornucopia = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 5.32,
    cy: 15.82,
    rx: 3.82,
    ry: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 9.14c2.11 0 3.81 3 3.81 6.68s-1.7 6.68-3.81 6.68M11.86 8.46c1.78.17 3.8 2.17 4.87 5a8.37 8.37 0 0 1 .27 6.07M14.41 6.6a5 5 0 0 1 4.26 1.7 5.36 5.36 0 0 1 1.1 1.75M16.79 3.67a3 3 0 0 1 3.09 1 3.39 3.39 0 0 1 .88 1.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 22.5h4.77a9.55 9.55 0 0 0 9.55-9.5v-1a14.3 14.3 0 0 1 2.86-8.59V1.5a8.6 8.6 0 0 0-7.3 4.05 7.65 7.65 0 0 1-6.48 3.59h-3.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCouchFurniture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.2v5.73H5.32V12a1 1 0 0 0-1-.95h-1V8.2a2.87 2.87 0 0 1 2.95-2.86h2.87A2.87 2.87 0 0 1 12 8.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 11.07h-1.91a1 1 0 0 0-1 .95v1.91H5.32V12a1 1 0 0 0-1-.95H2.45a1 1 0 0 0-1 .95v5.73h21V12a1 1 0 0 0-.9-.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 8.2v2.87h-.95a1 1 0 0 0-1 .95v1.91H12V8.2a2.87 2.87 0 0 1 2.86-2.86h2.87a2.87 2.87 0 0 1 2.86 2.86ZM2.45 19.66v-1.91M20.59 19.66v-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCouch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 13.93h11.45v4.77H6.27zM19.64 10.11h1A1.91 1.91 0 0 1 22.5 12v4.8a1.91 1.91 0 0 1-1.91 1.91h-2.86V12a1.91 1.91 0 0 1 1.91-1.91ZM3.41 10.11h1A1.91 1.91 0 0 1 6.27 12v6.7H3.41a1.91 1.91 0 0 1-1.91-1.9V12a1.91 1.91 0 0 1 1.91-1.89Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 10.11V7.25a2.87 2.87 0 0 1 2.87-2.86h9.54a2.87 2.87 0 0 1 2.87 2.86v2.86M4.36 20.61V18.7M19.64 20.61V18.7M8.18 9.16h1.91M13.91 9.16h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCount1 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 7.23v8.59M10.09 15.82h3.82M10.09 9.14h2.86M12 4.36V1.5M12 22.5v-2.86M19.64 12h2.86M1.5 12h2.86M22.5 13v-1a10.51 10.51 0 1 0-2.5 6.83"
  }));
};

const SvgCountFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.1 3.48a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9M13.9 4.43a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9M17.7 12V7.28a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9v7.6a9.81 9.81 0 0 1-.71 3.66l-.48 1.22a9.81 9.81 0 0 0-.71 3.66M6.3 14.87V4.43a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9V12M10.1 12.02V3.48M13.9 12.02V3.48M17.7 12.02V4.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.3 23.42A4.59 4.59 0 0 0 5 20.18l-1.39-1.34a3.81 3.81 0 0 1-1.11-2.69v-3.51a2.51 2.51 0 0 1 1.3-2.26 2.39 2.39 0 0 1 2.5.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCountdown2 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36V1.5M12 22.5v-2.86M19.64 12h2.86M1.5 12h2.86M22.5 13v-1a10.51 10.51 0 1 0-2.5 6.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 10.09V10a1.79 1.79 0 0 1 1.79-1.8 2 2 0 0 1 2 2 2 2 0 0 1-.59 1.43l-3.23 3.22v1h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCountdown3 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36V1.5M12 22.5v-2.86M19.64 12h2.86M1.5 12h2.86M22.5 13v-1a10.51 10.51 0 1 0-2.5 6.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18H12a1.92 1.92 0 0 1 1.91 1.91A1.91 1.91 0 0 1 12 12a1.91 1.91 0 0 1 1.91 1.91A1.92 1.92 0 0 1 12 15.82H9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCpu = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 1.5h2.86l3.82 13.36v7.64h-21v-7.64L5.32 1.5h10.5z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 18.68h3.82M1.5 14.86h21"
  }));
};

const SvgCranePipe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.61,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.61a2.85 2.85 0 0 1-.84 2 2.88 2.88 0 0 1-2 .84H4.36a2.87 2.87 0 1 0 0-5.73h15.28a2.86 2.86 0 0 1 2.86 2.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 16.75a2.87 2.87 0 0 1 0 5.73M12 .52v2.87a1.91 1.91 0 1 1-1.91 1.91M12 7.2v9.55M4.36 16.75 12 7.2M19.64 16.75 12 7.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCraneTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 19.64h2.86v-5.73L21 7.71a1.9 1.9 0 0 0-1.9-1.44h-3.28v13.37M8.18 19.64h7.64v-4.78H1.5v4.78h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 12.96 2.86.95h3.82M3.41 2.45v4.78L4.36 9v.64a1.44 1.44 0 0 1-1.43 1.44A1.44 1.44 0 0 1 1.5 9.61v-.47M15.82 14.86H9.14l1.9-3.82h4.78v3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.46h4.77l4.77 8.58"
  }));
};

const SvgCrankScrewdriver = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 13.89,
    y: 13.16,
    width: 3.37,
    height: 6.75,
    rx: 1.69,
    transform: "rotate(45 15.573 16.53)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 17.93,
    y: 1.01,
    width: 3.37,
    height: 6.75,
    rx: 1.69,
    transform: "rotate(135 19.618 4.383)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 22.5 5.71-5.71a1.36 1.36 0 0 1 1.94 0L11 18.66a1.36 1.36 0 0 0 1.94 0M18.68 5.32l-2.84 2.84a1.38 1.38 0 0 0 0 1.95L17.71 12a1.38 1.38 0 0 1 0 1.95M4.36 16.77l2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCreditCardPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 18.68h3.82a1.92 1.92 0 0 0 1.91-1.91V4.36a1.92 1.92 0 0 0-1.91-1.91H3.41A1.92 1.92 0 0 0 1.5 4.36v12.41a1.92 1.92 0 0 0 1.91 1.91h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 6.27h21v3.82h-21zM9.14 17.73h5.73v3.82H9.14zM12 13.91a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.91A1.91 1.91 0 0 1 12 13.91Z"
  }));
};

const SvgCreditCardShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 17.72h2.86a1.92 1.92 0 0 0 1.91-1.91V3.4a1.91 1.91 0 0 0-1.91-1.9H3.41A1.91 1.91 0 0 0 1.5 3.4v12.41a1.92 1.92 0 0 0 1.91 1.91h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.31h21v3.82h-21zM12 22.3a5.24 5.24 0 0 1-3.78-5v-3L12 13.14l3.86 1.1v3A5.3 5.3 0 0 1 12 22.3Z"
  }));
};

const SvgCreditCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "creadit card"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 8.18h21V12h-21zM18.68 15.82h0Z"
  })));
};

const SvgCroissant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.15 17.79a15.1 15.1 0 0 0-1.06 3.14 1.94 1.94 0 0 1-3.22 1h0c-1.72-1.72-2.19-4.35-1.56-7.19a1.69 1.69 0 0 0 .36.23l4.91 2.63a2 2 0 0 0 .57.19ZM22 3.84h0a1.94 1.94 0 0 1-1 3.22 15.1 15.1 0 0 0-3.14 1.06 2 2 0 0 0-.19-.57L15 2.64a1.69 1.69 0 0 0-.23-.36c2.83-.63 5.46-.16 7.23 1.56Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12 15.31-1.91 1.91a2.1 2.1 0 0 1-1.93.57 2 2 0 0 1-.57-.19L2.64 15a1.69 1.69 0 0 1-.36-.23 2.14 2.14 0 0 1-.16-3.16L3.76 10a1.94 1.94 0 0 0 .25.57 2.13 2.13 0 0 0 .75.74l5.44 3.1 1.29.74a1.94 1.94 0 0 0 .51.16ZM14.76 2.28a1.69 1.69 0 0 1 .23.36l2.61 4.94a2 2 0 0 1 .19.57 2.1 2.1 0 0 1-.57 1.93L15.31 12a1.94 1.94 0 0 0-.2-.5l-.74-1.29-3.1-5.44a2.13 2.13 0 0 0-.74-.77 1.94 1.94 0 0 0-.53-.24l1.6-1.64a2.14 2.14 0 0 1 3.16.16Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m11.27 4.76 3.1 5.44.74 1.29a1.94 1.94 0 0 1 .2.5 2.11 2.11 0 0 1-.55 2.06l-.71.71a2.11 2.11 0 0 1-2.06.55 1.94 1.94 0 0 1-.5-.2l-1.29-.74-5.44-3.1a2.13 2.13 0 0 1-.76-.74 1.94 1.94 0 0 1-.24-.53 2.14 2.14 0 0 1 .55-2.1L7.9 4.31a2.14 2.14 0 0 1 2.1-.55 1.94 1.94 0 0 1 .57.25 2.13 2.13 0 0 1 .7.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }
  }));
};

const SvgCropPathfinder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 8.17v14.38H8.12v-6.71h7.67V8.17h6.72zM14.83 1.45h1.92M14.83 5.29h1.92M4.28 15.84H6.2M.45 15.84h1.92M.45 12h1.92M.45 8.17h1.92M.45 4.33h1.92M.45 1.45h1.92M3.33 1.45h1.91M7.16 1.45h1.92M11 1.45h1.92"
  })));
};

const SvgCrop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.47 17.77H6.2V.51M17.71 23.53v-2.88"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.08 6.26h8.63v11.51M6.2 6.26H.45"
  })));
};

const SvgCross = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5L12 2.46 9.14 1.5v5.73H3.41l.95 2.86-.95 2.87h5.73v9.54l2.86-.95 2.86.95v-9.54h5.73l-.95-2.87.95-2.86z"
  }));
};

const SvgCrosshairs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 5.32V1.5M12 22.5v-3.82M5.32 12H1.5M22.5 12h-3.82"
  }));
};

const SvgCrosswinds = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.33 8.17h15.34a2.88 2.88 0 1 0-2.88-2.88M.5 8.17h1.92M19.67 12H4.33a2.88 2.88 0 1 0 2.88 2.88M23.5 12h-1.92M13.92 15.83h5.75a2.88 2.88 0 1 1-2.88 2.88M10.08 15.83H12M.5 4.33h7.67M10.08 4.33h3.84M13.92 19.67H8.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCruiseShip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m19.6 21.5 2.85-8.5v-1.9h-7.6L13 13H1.55v3.8a3.44 3.44 0 0 1 1.9 3.07v1.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.85 11.05-1.9 1.9H2.5l.95-5.7H13.9l.95 3.8zM6.3 2.5h3.8v4.75H6.3zM5.35 16.75h1.9M9.15 16.75h1.9M12.95 16.75h1.9M16.75 14.85h5.7M6.3 10.1v2.85M10.1 10.1v2.85M18.26 19.64a1.92 1.92 0 0 0 .54 1.2 2.12 2.12 0 0 0 3.63-1.2v-.04M14.08 19.64a2.11 2.11 0 0 0 4.18 0M9.9 19.62a2 2 0 0 0 2.1 1.83 2 2 0 0 0 2.08-1.81M9.9 19.6a2 2 0 0 1-2.08 1.81 2 2 0 0 1-2.09-1.82M5.73 19.6a1.84 1.84 0 0 1-.56 1.21 2.12 2.12 0 0 1-3.62-1.21"
  }));
};

const SvgCrutches = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.46 14.63-1.19 1.19-1.18-1.19a5.7 5.7 0 0 1-1.68-4.05V1.5h5.73v9.08a5.74 5.74 0 0 1-1.68 4.05ZM1.5 1.5h9.55M6.27 20.59v-5.73M5.32 22.5h1.91M3.41 9.14h5.73M18.91 14.63l-1.18 1.19-1.19-1.19a5.74 5.74 0 0 1-1.68-4.05V1.5h5.73v9.08a5.7 5.7 0 0 1-1.68 4.05ZM12.95 1.5h9.55M17.73 20.59v-5.73M16.77 22.5h1.91M14.86 9.14h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCubeBox3D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.75 8.09v14.66H8.09l-6.84-6.84V1.25h14.66l6.84 6.84z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.09 22.75V8.09h14.66"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.91 1.25v14.66H1.25M1.25 1.25l6.84 6.84M15.91 15.91l6.84 6.84"
  }));
};

const SvgCupMeasurement = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "measuring cup"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 1.5H2.45v1l2.87 2.82v14.32a2.86 2.86 0 0 0 2.86 2.86h10.5a2.87 2.87 0 0 0 2.87-2.86V1.5ZM14.86 6.27h3.82M16.77 9.14h1.91M14.86 12h3.82M16.77 14.86h1.91M14.86 17.73h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCupStraw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 22.5H7.23l-.96-12.41h11.46l-.96 12.41zM10.09 6.27h3.82a3.82 3.82 0 0 1 3.82 3.82H6.27a3.82 3.82 0 0 1 3.82-3.82ZM4.36 10.09h15.28M12 6.27V3.41a1.9 1.9 0 0 1 1.91-1.91h1.91"
  }));
};

const SvgCupboardDrawers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 14.9h19.17v6.71H2.42zM4.33 23.52V21.6M19.67 23.52V21.6M10.08 17.77h3.84M2.42 8.19h19.17v6.71H2.42zM10.08 11.06h3.84M2.42 1.48h19.17v6.71H2.42zM10.08 4.35h3.84M.5 1.48h23"
  }));
};

const SvgCupboardTwoDoors = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 1.5h21.04v19.13H1.48zM12 1.5v19.13M9.13 10.11v1.91M14.87 10.11v1.91M3.39 23.5v-2.87M20.61 23.5v-2.87"
  }));
};

const SvgCupboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 1.5H12v20.09H2.43zM12 16.8h9.57v4.78H12zM12 12.02h9.57v4.78H12zM12 1.5h9.57v10.52H12zM5.3 23.5v-1.91M18.7 23.5v-1.91M8.17 11.07v1.91M16.78 13.93v-1.91M16.78 18.72V16.8"
  }));
};

const SvgCupcakePastry = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.81 15.46a3.81 3.81 0 0 0 0-.59 2.86 2.86 0 0 0-5.72 0 3.81 3.81 0 0 0 0 .59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 14.86a2.87 2.87 0 0 1 5.73 0l-2.86 7.64H6.27l-2.86-7.64a2.87 2.87 0 0 1 5.73 0M9.14 14.86l.95 7.64M14.86 14.86l-.95 7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.65 4.36h.26a3.82 3.82 0 0 1 3.82 3.82v.17a2.86 2.86 0 0 1 1.91 2.7V13M4.36 13v-1.9a2.86 2.86 0 0 1 1.91-2.7v-.22a3.82 3.82 0 0 1 3.82-3.82h.26",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.95 8.18h1.91M9.14 9.14h1.91"
  }));
};

const SvgCupcake = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.82 13.05a3.63 3.63 0 0 1-2.62-1.12 3.26 3.26 0 0 1-.34-.4 4.18 4.18 0 0 1-7.72 0 3.26 3.26 0 0 1-.34.4 3.63 3.63 0 0 1-2.62 1.12 3.47 3.47 0 0 1-1.34-.25l1.86 9.7h12.6l1.86-9.7a3.47 3.47 0 0 1-1.34.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.49 9.23a.71.71 0 0 1 0 .15 3.54 3.54 0 0 1-.78 2.23 3.59 3.59 0 0 1-2.9 1.44 3.63 3.63 0 0 1-2.62-1.12 3.26 3.26 0 0 1-.34-.4 4.18 4.18 0 0 1-7.72 0 3.26 3.26 0 0 1-.34.4 3.63 3.63 0 0 1-2.62 1.12 3.47 3.47 0 0 1-1.34-.25 3.47 3.47 0 0 1-1.56-1.19 3.54 3.54 0 0 1-.77-2.23.71.71 0 0 1 0-.15v-.35C1.5 4.79 6.2 1.5 12 1.5s10.5 3.29 10.5 7.35v.35ZM12 5.32v3.82M8.18 5.32 6.27 8.18M15.82 5.32l1.91 2.86M9.9 22.5l-.88-9.65M14.98 12.85l-.88 9.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurrencyExchange = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "transfer money"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.04,
    cy: 12,
    r: 2.87,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.58 6.25v9.58a2.87 2.87 0 0 1-2.87 2.88H7.25l3.83 3.83M4.38 12h1.91M17.79 12h1.92M1.5 17.75V8.17a2.88 2.88 0 0 1 2.88-2.88h12.45L13 1.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgCurved2D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v19.1A31 31 0 0 0 12 19.64a31 31 0 0 0-10.5 1.91V2.45A31 31 0 0 0 12 4.36a31 31 0 0 0 10.5-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 10.09V10a1.8 1.8 0 0 1 1.8-1.8 2 2 0 0 1 2 2 2 2 0 0 1-.59 1.43l-3.21 3.23v1h4.78M13.91 8.18h1.91a1.91 1.91 0 0 1 1.91 1.91v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.91V8.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurved3D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.18h1.91a1.91 1.91 0 0 1 1.91 1.91v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.91V8.18ZM5.32 8.18h2.86a1.91 1.91 0 0 1 1.91 1.91A1.9 1.9 0 0 1 8.18 12a1.9 1.9 0 0 1 1.91 1.91 1.91 1.91 0 0 1-1.91 1.91H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v19.1A31 31 0 0 0 12 19.64a31 31 0 0 0-10.5 1.91V2.45A31 31 0 0 0 12 4.36a31 31 0 0 0 10.5-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurved4D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.18h1.91a1.91 1.91 0 0 1 1.91 1.91v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.91V8.18ZM10.09 8.18v4.78H6.27V12l2.87-3.82h.95zM10.09 16.77v-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v19.1A31 31 0 0 0 12 19.64a31 31 0 0 0-10.5 1.91V2.45A31 31 0 0 0 12 4.36a31 31 0 0 0 10.5-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurved4K = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 8.18v4.78H6.27V12l2.87-3.82h.95zM10.09 16.77v-3.82M13.91 7.23v9.54M17.73 7.23v1.91A2.86 2.86 0 0 1 14.86 12a2.86 2.86 0 0 1 2.87 2.86v1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v19.1A31 31 0 0 0 12 19.64a31 31 0 0 0-10.5 1.91V2.45A31 31 0 0 0 12 4.36a31 31 0 0 0 10.5-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurvedHd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.18h1.91a1.91 1.91 0 0 1 1.91 1.91v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.91V8.18ZM10.09 16.77V7.23M6.27 16.77V7.23M10.09 12H6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v19.1A31 31 0 0 0 12 19.64a31 31 0 0 0-10.5 1.91V2.45A31 31 0 0 0 12 4.36a31 31 0 0 0 10.5-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurvedTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.92 4.36h-.78a7.64 7.64 0 1 0 7.62 7.8 4.17 4.17 0 0 1 2.88 2.7h2.86A12.79 12.79 0 0 0 9.92 4.36Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 12C9.14 14.86 9.14 9.14 1.5 12M5.32 14.86h1.91M10.09 15.82H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCurvedTv = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v15.28a58.35 58.35 0 0 0-21 0V2.45a58.35 58.35 0 0 0 21 0ZM12 21.55v-4.78M7.23 21.55h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCustomerServiceAgent = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 5.32,
    width: 11.45,
    height: 15.27,
    rx: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 9.14h1.91A2.86 2.86 0 0 1 22.5 12v1.91a2.86 2.86 0 0 1-2.86 2.86h-1.91V9.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14h1.91A2.86 2.86 0 0 1 6.27 12v1.91a2.86 2.86 0 0 1-2.86 2.86H1.5V9.14Z",
    transform: "rotate(180 3.885 12.955)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 9.14A7.64 7.64 0 0 1 12 1.5a7.64 7.64 0 0 1 7.64 7.64M19.64 16.77v1a4.78 4.78 0 0 1-4.78 4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCustomerService = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m22.5 18.77-2.88 2.88c-2 2-8.18.46-12.95-4.32S.36 6.37 2.35 4.38L5.23 1.5l5 5-2.48 2.56c-1 1-.59 3 1.79 5.4s4.41 2.79 5.4 1.79l2.52-2.51ZM12.96 3.41h3.81v2.86h-2.86v2.87h3.82M22.5 2.46v3.81h-2.86V2.46M22.5 10.09V6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgCutFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M7.21 15.83H.5M.5 4.33h1.92M4.33 4.33h1.92M8.17 4.33h1.91M12 4.33h1.92M15.83 4.33h1.92M19.67 4.33h1.91M.5 12.96h1.92M4.33 12.96h1.92M8.17 12.96h1.91M12 12.96h1.92"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.92,
    cy: 20.63,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 9.13v11.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.63,
    cy: 13.92,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 15.83h11.5"
  }));
};

const SvgCycling = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.44,
    cy: 16.75,
    r: 3.75,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.56,
    cy: 16.75,
    r: 3.75,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.69 10.19 1.87 6.56M9.12 10.29l-.87-3.85M4.5 16.75H12M16.69 10.19h-1.88l-3.75 6.56"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.69 10.19h-7.5l-3.75 6.56M6.38 6.44h4.68M20.44 5.5l-3.75.94v3.75"
  }));
};

const SvgDanger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1 13.55a5.89 5.89 0 1 1 2.16 8.05",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.84 21.6a5.89 5.89 0 1 1 2.16-8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.17 1.61a5.9 5.9 0 1 1-8.34 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.74,
    r: 6.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDashCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M17.48 6.49a3.47 3.47 0 0 1 .16.71 5.12 5.12 0 0 1 .09 1v1.92h1a3.84 3.84 0 0 1 3.84 3.84 2.09 2.09 0 0 1 0 .25 3.84 3.84 0 0 1-3.83 3.58H6.22M3.34 16.78a4.72 4.72 0 0 1-1.9-3.62 1.41 1.41 0 0 1 0-.2 4.78 4.78 0 0 1 4.79-4.8 6.49 6.49 0 0 1 .57-2.52c0-.09.08-.17.13-.26a5.7 5.7 0 0 1 4.83-3H12a5.67 5.67 0 0 1 3.83 1.47M22.53 1.45l-21.1 21.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgDayCloudy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.67 16.77a3.3 3.3 0 0 0-2.18-2.66 2.86 2.86 0 0 0-1.14-.21h-.57a5.13 5.13 0 0 0 .1-1 4.79 4.79 0 0 0-4.8-4.79 5.49 5.49 0 0 0-.58 0 4.8 4.8 0 0 0-4.21 4.76 3.82 3.82 0 0 0-3.83 3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.49 14.11a4.8 4.8 0 1 0-7-5.93M13.92.48V2.4M23.5 10.06h-1.92M20.69 3.29l-1.35 1.35M8.5 4.64 7.14 3.29M.5 18.69h4.79M7.21 18.69h9.58M2.42 22.52h7.66M12 22.52h9.58M18.71 18.69h4.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDeed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.48h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 13.89,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.75h3.82v4.77l-1.91-.95-1.91.95v-4.77zM5.32 6.25h13.36M5.32 11.02H12"
  }));
};

const SvgDeer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 21.52,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 11h9.55v5.73A4.77 4.77 0 0 1 12 21.52a4.77 4.77 0 0 1-4.77-4.77V11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 11h1.91a1.91 1.91 0 0 1 1.91 1.91v1.91h-1.91a1.91 1.91 0 0 1-1.91-1.91V11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 11h1.91a1.91 1.91 0 0 1 1.91 1.91v1.91H5.32a1.91 1.91 0 0 1-1.91-1.91V11Z",
    transform: "rotate(90 5.32 12.93)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 11V9.11A1.92 1.92 0 0 0 7.23 7.2h-1A4.77 4.77 0 0 1 1.5 2.43V.52M6.27 3.39V7.2M14.86 11V9.11a1.92 1.92 0 0 1 1.91-1.91h1a4.77 4.77 0 0 0 4.73-4.77V.52M17.73 3.39V7.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDeliveryTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 17.73H1.5V4.36h17.18v3.82L20.59 12l1.91 1.07v4.66h-2.86M15.82 17.73H8.18"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 12h-5.73V8.18h3.82"
  }));
};

const SvgDentalPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 8.18A6.68 6.68 0 0 1 12 2.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 8.18A6.69 6.69 0 0 0 9.78 5.31M22.5 8.18V9.6a17.35 17.35 0 0 1-1.32 6.63 17.27 17.27 0 0 1-3.75 5.61 2.25 2.25 0 0 1-3.82-1.25L13 16.54a1 1 0 0 0-2 0l-.62 4.05a2.25 2.25 0 0 1-3.82 1.25A17.27 17.27 0 0 1 1.5 9.6V8.18M12 8.18h7.64M15.82 4.36V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDeskLampLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 4.05a4.72 4.72 0 0 1 4.72 4.72v.67H3.93v-.67a4.72 4.72 0 0 1 4.73-4.72Z",
    transform: "rotate(45 8.664 6.749)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.06 3.53 9.3 2.29a2.71 2.71 0 0 1 1.91-.79 2.7 2.7 0 0 1 2.7 2.7 2.73 2.73 0 0 1-.79 1.91l-1.24 1.24M13.91 5.32 20.59 12v.96l-4.77 9.54M6.27 22.5h13.37M9.14 20.59v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDeskLamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11 18.68h5.73a3.82 3.82 0 0 1 3.82 3.82H7.23A3.82 3.82 0 0 1 11 18.68ZM16.77 18.68V5.32A3.82 3.82 0 0 0 13 1.5h-1a3.82 3.82 0 0 0-3.82 3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32A4.77 4.77 0 0 1 13 10.09v1H3.41v-1a4.77 4.77 0 0 1 4.77-4.77ZM11.05 16.77v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDesk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 5.31h23M2.42 5.31v14.38M13.92 10.1h7.67v4.79h-7.67zM13.92 5.31h7.67v4.79h-7.67zM21.58 19.69V14.9M17.75 7.23V5.31M17.75 12.02V10.1"
  }));
};

const SvgDesktopComputer2D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v15.27h-21zM4.36 21.55h15.28M12 17.73v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 8.18v-.11a1.81 1.81 0 0 1 1.8-1.8 2 2 0 0 1 2 2 2 2 0 0 1-.57 1.46L6.27 13v1h4.78M13.91 6.27h1.91a1.91 1.91 0 0 1 1.91 1.91V12a1.91 1.91 0 0 1-1.91 1.91h-1.91V6.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDesktopComputer3D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v15.27h-21zM4.36 21.55h15.28M12 17.73v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 6.27h1.91a1.91 1.91 0 0 1 1.91 1.91V12a1.91 1.91 0 0 1-1.91 1.91h-1.91V6.27ZM5.32 6.27h2.86a1.91 1.91 0 0 1 1.91 1.91 1.9 1.9 0 0 1-1.91 1.91A1.91 1.91 0 0 1 10.09 12a1.91 1.91 0 0 1-1.91 1.91H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDesktopComputer4D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v15.27h-21zM4.36 21.55h15.28M12 17.73v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 6.27h1.91a1.91 1.91 0 0 1 1.91 1.91V12a1.91 1.91 0 0 1-1.91 1.91h-1.91V6.27ZM10.09 6.27v4.77H6.27v-.95l2.87-3.82h.95zM10.09 14.86v-3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDesktopComputer4K = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v15.27h-21zM4.36 21.55h15.28M12 17.73v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 6.27v4.77H6.27v-.95l2.87-3.82h.95zM10.09 14.86v-3.81M13.91 5.32v9.54M17.73 5.32v1.91a2.86 2.86 0 0 1-2.87 2.86A2.86 2.86 0 0 1 17.73 13v1.91"
  }));
};

const SvgDessert = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.28 14.86a1.53 1.53 0 0 0-1.28.69 1.53 1.53 0 0 0-2.81.85c0 2.3 2.81 3.06 2.81 3.06s2.81-.76 2.81-3.06a1.54 1.54 0 0 0-1.53-1.54Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.17 22.5H3.83L2.46 12h19.09l-1.38 10.5zM3.55 12a4.66 4.66 0 0 1-.14-1.13C3.41 3.84 12 1.5 12 1.5s8.59 2.34 8.59 9.37a4.66 4.66 0 0 1-.14 1.13"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.18 12v-1.13C9.14 3.84 12 1.5 12 1.5s2.86 2.34 2.86 9.37V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDestinationRoute = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.11 5.08c0 2.39-3.81 6-3.81 6s-3.82-3.58-3.82-6A3.7 3.7 0 0 1 5.3 1.5a3.7 3.7 0 0 1 3.81 3.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.3,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.34 13h4.3A2.39 2.39 0 0 1 11 15.34a2.39 2.39 0 0 1-2.38 2.39H3.86a2.39 2.39 0 0 0-2.38 2.38 2.39 2.39 0 0 0 2.38 2.39H17.7M16.75 8.18v12.41M16.75 15.82l4.77-2.86-4.77-2.87v5.73z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDevilHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.3A5.71 5.71 0 0 0 12 7.86 5.73 5.73 0 0 0 1.5 11C1.5 19.61 12 22.48 12 22.48S22.5 19.61 22.5 11a5.72 5.72 0 0 0-5.73-5.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 9.11A1.91 1.91 0 0 1 18.68 11a6.26 6.26 0 0 1-1.95 4.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.05 7.06C1.2 5 2.59 0 6.27.52a2.46 2.46 0 0 0-2.06 2.29 1.75 1.75 0 0 0 1.33 1.81L4.05 7.06ZM17.73.52C21.41 0 22.79 5 20 7.06l-1.54-2.44a1.75 1.75 0 0 0 1.33-1.81A2.46 2.46 0 0 0 17.73.52Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgDiagram = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "diagram conncection"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.14,
    width: 5.73,
    height: 5.73,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M18.68 1.5h3.82v3.82h-3.82zM18.68 10.09h3.82v3.82h-3.82zM18.68 18.68h3.82v3.82h-3.82zM18.68 20.59h-5.72V3.41h5.72M18.68 12H7.23"
  })));
};

const SvgDialLow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.8 19.61a10.34 10.34 0 0 0 1.7-5.72 10.5 10.5 0 0 0-21 0 10.34 10.34 0 0 0 1.7 5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.89,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.05 12.93-3.1-3.09"
  }));
};

const SvgDial = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m19.16 4.84-3.34 3.34"
  }));
};

const SvgDiamondRing = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 15.92,
    cy: 15.92,
    r: 6.58,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.63 10.91-.72.72H6.62l-.71-2.15 3.57-3.57 2.15.71v4.29zM8.15.5v2.87M.5 8.15h2.87M1.46 1.46l2.39 2.39"
  }));
};

const SvgDietCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 19.61H1.5V3.39h19.09v5.72M11.05.52V5.3M6.27.52V5.3M15.82.52V5.3M8.18 8.16h1.91M12 8.16h1.91M15.82 8.16h1.91M4.36 11.98h1.91M8.18 11.98h1.91M4.36 15.8h1.91M8.18 15.8h1.91M12 11.98h1.91"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 17.73,
    cy: 18.66,
    rx: 4.77,
    ry: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.11 11h1.43v1.43a2.39 2.39 0 0 1-2.39 2.39h-1.42v-1.41A2.39 2.39 0 0 1 20.11 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 11a2.86 2.86 0 0 1 2.87 2.87v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDigitalThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "digital thermometer"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M13.28 3.08 4.36 12v4.77L2.09 19a2 2 0 0 0-.59 1.44 2 2 0 0 0 2 2 2 2 0 0 0 1.5-.53l2.27-2.27H12l8.92-8.92A5.41 5.41 0 0 0 22.5 6.9a5.4 5.4 0 0 0-5.4-5.4 5.41 5.41 0 0 0-3.82 1.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(45 12.011 11.995)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.99 8.63h4.05v6.72H9.99z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 5.32 2.86 2.86"
  })));
};

const SvgDimensionSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 22.22 9.77-4.88V6.59L12 1.78 2.23 6.59v10.75L12 22.22zM21.77 6.59 12 1.78M16.89 8.54 7.11 3.73M12 17.33l9.77-4.88"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.23 6.59 9.77 4.8v10.83M12 22.22V11.39l9.77-4.8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.77 6.59 12 11.39l-9.77-4.8M7.11 8.62v10.75"
  }));
};

const SvgDimensionalPerson = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 1.78 2.23 6.67v10.74L12 22.22l9.77-4.81V6.67L12 1.78zM12 12.61v-.08M21.77 17.41l-4.54-2.23M6.77 15.18l-4.54 2.23M12 12.61v-.08M12 5.69V1.78M21.77 17.41l-4.54-2.23M6.77 15.18l-4.54 2.23"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.6,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.07 16.44v-1A2.93 2.93 0 0 1 12 12.53a2.93 2.93 0 0 1 2.93 2.93v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDimensionalView = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 18.63 6.84-3.42V7.68L12 4.32 5.16 7.68v7.53L12 18.63z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.16 8.09h.03L12 11.46v7.38M12 18.84v-7.38l6.81-3.37h.03"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.84 8.09h-.03L12 11.46 5.19 8.09h-.03M1.25 6.14V1.25h4.89M6.14 22.75H1.25v-4.89M22.75 17.86v4.89h-4.89M17.86 1.25h4.89v4.89"
  }));
};

const SvgDimensionalVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.07 13.84H5.16l-3.91 4.89a3.91 3.91 0 0 0 3.91 3.91h13.68a3.91 3.91 0 0 0 3.91-3.91l-3.91-4.89h-3.91M1.25 18.73h21.5M12 15.8v-4.89M12 11.59l4.89-2.45V3.77L12 1.36 7.12 3.77v5.37L12 11.59z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.12 3.76h.01L12 6.16v5.43M12 11.59V6.16l4.87-2.4h.01"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.88 3.76h-.01L12 6.16l-4.87-2.4h-.01"
  }));
};

const SvgDiningChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 13h9.57a1.91 1.91 0 0 1 1.91 1.91v1.89H5.3v-1.91A1.91 1.91 0 0 1 7.22 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5h3.83a2.87 2.87 0 0 1 2.87 2.87V13H7.22V4.37a2.87 2.87 0 0 1 2.87-2.87ZM7.22 23.5v-6.7h9.56v6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDiningRoomChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.29,
    y: 12.96,
    width: 13.42,
    height: 3.83,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 23.5v-6.71M16.79 23.5v-6.71M7.21 20.63h9.58M16.79.5v12.46H7.21V.5M7.21 3.38h9.58M7.21 7.21h9.58"
  }));
};

const SvgDiningRoomTable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 6.32h21v3.82h-21zM4.36 19.68h-1.9l1.9-9.54h3.82l-3.82 9.54zM19.64 19.68h1.91l-1.91-9.54h-3.82l3.82 9.54zM6.27 14.91h11.46"
  }));
};

const SvgDiningRoom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.18h13.36M10.09 17.73h3.82M12 8.18v9.55M16.77 18.68V12h5.73M22.5 5.32v13.36M16.77 15.82h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 18.68V12h5.73M22.5 5.32v13.36M16.77 15.82h5.73M7.23 18.68V12H1.5M1.5 5.32v13.36M7.23 15.82H1.5"
  }));
};

const SvgDiningTablePlates = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 12.04h7.64V8.23h-21v3.81h7.64M3.41 12.05v9.54M20.59 12.05v9.54"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 14.91 5.32 8.23h13.36L12 14.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 4.41h7.64v.51a3.31 3.31 0 0 1-3.31 3.31h-1A3.31 3.31 0 0 1 1.5 4.92v-.51ZM14.86 4.41h7.64v.51a3.31 3.31 0 0 1-3.31 3.31h-1a3.31 3.31 0 0 1-3.31-3.31v-.51h-.02Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDiningTable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 7.23h17.25v3.83H3.38zM23.5 7.23H.5M3.38 17.77v-6.71M20.63 17.77v-6.71"
  }));
};

const SvgDirectionPost = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 8.15H5.29l-2.87-2.4 2.87-2.4H12v4.8zM12 6.23h6.71l2.87 2.4-2.87 2.39H12V6.23zM12 22.52V.48M.5 22.52h23"
  }));
};

const SvgDirectionsPost = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.7 6.28H5.3L2.44 3.89 5.3 1.5h13.4v4.78zM5.3 10.11h13.4l2.87 2.39-2.87 2.39H5.3v-4.78zM12 23.5v-8.61M12 10.11V6.28M.52 22.54h22.96"
  }));
};

const SvgDiscountTag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.55 22.38H4.45V7.27l5.66-5.66h3.78l5.66 5.66v15.11zM11.06 5.38h1.88M14.83 10.1l-5.66 8.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.7,
    cy: 11.52,
    r: 0.47,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.3,
    cy: 17.19,
    r: 0.47,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDiskReader = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.43 11.52 2.87 2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 18.68h9.54"
  }));
};

const SvgDnaGenetics = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 2H5.14M13 2h2M18.86 2H16M18.71.5c0 11.5-13.42 11.5-13.42 23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.29.5c0 11.5 13.42 11.5 13.42 23M10.08 6.25H6.71M11.04 6.25h1.92M17.29 6.25h-3.37M10.08 17.75H6.71M11.04 17.75h1.92M17.29 17.75h-3.37M9.13 21.58h-3.7M10.08 21.58H12M18.57 21.58h-5.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDnaScience = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.67.5a12 12 0 0 1-6 10.59L12 12l-1.67-.91A12 12 0 0 1 4.33.5M4.33 23.5a12 12 0 0 1 6-10.59L12 12l1.67.91a12 12 0 0 1 6 10.59M19.49 3.38H8.17M18.02 7.21h-7.94M13.92 16.79H5.98M15.83 20.63H4.51",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDna = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m15.82 1.5-1 1A9.55 9.55 0 0 0 12 9.27v5.46a9.55 9.55 0 0 1-2.8 6.75l-1 1M9.27 12a9.55 9.55 0 0 0-6.75 2.8l-1 1M22.5 8.18l-1 1A9.55 9.55 0 0 1 14.73 12M13.91 2.45l7.16 7.16M12.95 6.27l2.87 2.87M2.45 13.91l6.69 6.68M8.18 14.86l3.34 3.34",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13.91ZM20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgDocuments = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.86h7.64M6.27 11.05h7.64M6.27 18.68h7.64M16.77 8.18V22.5H3.41V5.32h10.5l2.86 2.86z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 18.68h3.82V4.36L17.73 1.5H7.23v3.82"
  }));
};

const SvgDollarBill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money 2"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21v13.36h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 12h1.91M17.73 12h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 14.86h2.39a1.43 1.43 0 0 0 1.43-1.43h0A1.43 1.43 0 0 0 12.48 12h-1a1.43 1.43 0 0 1-1.43-1.43h0a1.43 1.43 0 0 1 1.43-1.43h2.39M12 8.18v.96M12 14.86v.96",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgDollarChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12.93h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43 1.44 1.44 0 0 1 1.47-1.44h3.34M12 5.3v1.9M12 12.93v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDollarClipboardFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "clipboard money"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 2.45V22.5H3.41v-20h4.77v1a1.92 1.92 0 0 0 1.91 1.91h3.82a1.92 1.92 0 0 0 1.91-1.91v-1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 16.77h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43h0a1.43 1.43 0 0 1 1.43-1.43h2.39M12 9.14v1.91M12 16.77v1.91",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgDollarClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 16.77h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43h3.34M12 9.14v1.91M12 16.77v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDollarFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 16.77h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43h3.34M12 8.18v2.87M12 16.77v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgDollarFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 17.73h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.44h-1a1.43 1.43 0 0 1-1.43-1.43A1.43 1.43 0 0 1 11.52 12h3.34M12 10.09V12M12 17.73v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDollarMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12.93h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43c0-.79.64-1.44 2.39-1.44h2.38M12 5.3v1.9M12 12.93v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDollarMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 16.23,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 22.5H8.18l.96-4.77h5.72l.96 4.77zM18.68 22.5H5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 12h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.39-1.44h0a1.43 1.43 0 0 1 1.43-1.43h2.39M12 5.32v.95M12 12v.95",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDollarPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "payment document"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 17.73h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.44h-1a1.43 1.43 0 0 1-1.43-1.43h0A1.43 1.43 0 0 1 11.52 12h2.39M12 10.09V12M12 17.73v1.91",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 8.18V22.5H3.41v-21h12.41l4.77 4.77v1.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5"
  })));
};

const SvgDollarSignCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "dolar coin"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12A10.5 10.5 0 1 1 12 1.5 10.5 10.5 0 0 1 22.5 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 15.82H13a1.91 1.91 0 0 0 1.91-1.91h0A1.9 1.9 0 0 0 13 12h-1.9a1.9 1.9 0 0 1-1.91-1.91h0a1.91 1.91 0 0 1 1.91-1.91h3.81M12 6.27v1.91M12 15.82v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgDollarSignMoney = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "dollar 1"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 1.5v2.86M12 19.64v2.86M6.27 16.77h0a2.87 2.87 0 0 0 2.87 2.87h4.77a3.82 3.82 0 0 0 3.82-3.82h0A3.82 3.82 0 0 0 13.91 12h-3.82a3.82 3.82 0 0 1-3.82-3.82h0a3.82 3.82 0 0 1 3.82-3.82h4.77a2.87 2.87 0 0 1 2.87 2.87h0"
  })));
};

const SvgDollarSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "dollar 2"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M10.09 1.5v2.86M10.09 19.64v2.86M13.91 1.5v2.86M13.91 19.64v2.86M6.27 16.77h0a2.87 2.87 0 0 0 2.87 2.87h4.77a3.82 3.82 0 0 0 3.82-3.82h0A3.82 3.82 0 0 0 13.91 12h-3.82a3.82 3.82 0 0 1-3.82-3.82h0a3.82 3.82 0 0 1 3.82-3.82h4.77a2.87 2.87 0 0 1 2.87 2.87h0"
  })));
};

const SvgDollarSuitcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money bag 2"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81zM10.09 16.77h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43h0a1.43 1.43 0 0 1 1.43-1.43h2.39M12 10.09v.96M12 16.77v.96M5.32 20.59a2.81 2.81 0 0 1-.17 1H3.41a1.92 1.92 0 0 1-1.91-1.95V17.9a2.54 2.54 0 0 1 1-.17 2.86 2.86 0 0 1 2.82 2.86ZM22.5 17.9v1.74a1.92 1.92 0 0 1-1.91 1.91h-1.74a2.81 2.81 0 0 1-.17-1 2.86 2.86 0 0 1 2.87-2.86 2.54 2.54 0 0 1 .95.21ZM5.32 7.23a2.86 2.86 0 0 1-2.87 2.86 2.75 2.75 0 0 1-1-.17V8.18a1.92 1.92 0 0 1 1.96-1.91h1.74a2.77 2.77 0 0 1 .17.96ZM22.5 8.18v1.74a2.75 2.75 0 0 1-.95.17 2.86 2.86 0 0 1-2.87-2.86 2.77 2.77 0 0 1 .17-1h1.74a1.92 1.92 0 0 1 1.91 1.95Z"
  })));
};

const SvgDonut = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.59 12-1.91 1.91M15.82 6.27l1.91.96M6.27 8.18v1.91M4.36 12.95l1.91 1.91M9.14 19.64H12M15.82 16.77v1.91M10.09 5.32 12 4.36"
  }));
};

const SvgDoorLock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 11.05v9.54a1.91 1.91 0 0 1-1.91 1.91H4.36a1.91 1.91 0 0 1-1.91-1.91V3.41A1.91 1.91 0 0 1 4.36 1.5h9.55a1.91 1.91 0 0 1 1.91 1.91v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 7.23h-8.38a2.86 2.86 0 1 0 0 3.82h8.38a1.91 1.91 0 0 0 0-3.82ZM5.32 16.77h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 1.5h11.45v17.18H6.27zM6.27 18.68h11.46l2.86 3.82H3.41l2.86-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.27 18.68 7.64-2.86V1.5M11.05 8.18v1.91"
  }));
};

const SvgDotsClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM11.05 12.95h1.9M14.86 12.95h1.91M7.23 12.95h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDotsComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12ZM14.85 12h1.9M11.05 12h1.9M7.25 12h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDotsFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM11.05 12.95h1.9M14.86 12.95h1.91M7.23 12.95h1.91"
  }));
};

const SvgDotsFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M11.05 14.86h1.9M15.82 14.86h1.91M6.27 14.86h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDotsHorizontal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDotsVertical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleBedSleep = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 23.45v-3.81M1.5 15.82h21v3.82h-21zM4.36 11h15.28a2.86 2.86 0 0 1 2.86 2.86v1.91h-21v-1.86A2.86 2.86 0 0 1 4.36 11ZM22.5 23.45v-3.81"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 7.23h3.82A1.91 1.91 0 0 1 12 9.14V11H4.36V9.14a1.91 1.91 0 0 1 1.91-1.91ZM13.91 7.23h3.82a1.91 1.91 0 0 1 1.91 1.91V11H12V9.14a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 3.41h15.27v7.64H4.36zM4.36.55v2.86M19.64.55v2.86"
  }));
};

const SvgDoubleBed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 12h17.18a1.91 1.91 0 0 1 1.91 1.91v3.82h-21v-3.8A1.91 1.91 0 0 1 3.41 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 4.39h15.28a1.91 1.91 0 0 1 1.91 1.91V12H2.45V6.3a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 8.2h2.86A1.91 1.91 0 0 1 12 10.11V12H5.32v-1.89A1.91 1.91 0 0 1 7.23 8.2ZM13.91 8.2h2.86a1.91 1.91 0 0 1 1.91 1.91V12H12v-1.89a1.91 1.91 0 0 1 1.91-1.91ZM2.45 20.61v-2.86M21.55 20.61v-2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleClick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.37 12.73 7.44 8.8a1.86 1.86 0 0 0-2.73.12 1.93 1.93 0 0 0 .19 2.57l5.82 5.82H8.91a2 2 0 0 0-1.39.58A2 2 0 0 0 7 19.27a2 2 0 0 0 2 2h7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.37 12.73 7.44 8.8l-.58-.58a1.93 1.93 0 0 1-.35-2.33 1.86 1.86 0 0 1 2.9-.36l4.3 4.3 2.33-2A1.74 1.74 0 0 1 18.4 8a16.84 16.84 0 0 1 4 6.54l.06.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.82 14.42a4.42 4.42 0 0 1-1.69.32A4.62 4.62 0 0 1 3.5 6.31a4.63 4.63 0 0 1 9.23.53 4.41 4.41 0 0 1-.32 1.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleDeckerBus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 19.64H1.5V4.36a1.91 1.91 0 0 1 1.91-1.91h15.27a1.91 1.91 0 0 1 1.91 1.91v9.55l1.91 2.86v2.87h-2.86M15.82 19.64H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 11.04v2.87H5.32v-2.87M20.59 5.32v2.86H5.32V5.32M9.14 5.32v2.86M9.14 11.05v2.86M12.95 5.32v2.86M12.95 11.05v2.86M16.77 5.32v2.86M16.77 11.05v2.86"
  }));
};

const SvgDoubleDoors = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5H12v21H2.45zM12 1.5h9.55v21H12zM23.45 22.5H.55M7.23 12.95h2.86M13.91 12.95h2.86"
  }));
};

const SvgDoubleFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.94V7.28A1.84 1.84 0 0 0 11.44 6a1.8 1.8 0 0 0-1.5-.55 2 2 0 0 0-1.72 2v8.4l-1.3-1.31a2 2 0 0 0-1.42-.58 2 2 0 0 0-1.41 3.42l5.08 5.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.94v-6.5a2 2 0 0 1 1.42-1.93 1.89 1.89 0 0 1 2.36 1.82v6.21l3.09.26a1.79 1.79 0 0 1 1.63 1.78 17.16 17.16 0 0 1-1.8 7.64l-.09.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.22 11.6a4.19 4.19 0 0 1-1.45-1 4.72 4.72 0 0 1 4.18-8 4.73 4.73 0 0 1 6.28 7.05 4.48 4.48 0 0 1-1.45 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleParagraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 3.38h5.75M.5 9.13h9.58M.5 14.88h9.58M.5 20.63h9.58M13.92 3.38h9.58M13.92 9.13h9.58M13.92 14.88h9.58M13.92 20.63h5.75"
  }));
};

const SvgDoublePress = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.93V5.37A1.84 1.84 0 0 0 11.44 4a1.86 1.86 0 0 0-1.5-.55 2 2 0 0 0-1.72 2v10.31l-1.3-1.3a2 2 0 0 0-1.42-.59 2 2 0 0 0-1.41.59 2 2 0 0 0-.59 1.42 2 2 0 0 0 .59 1.41l5.08 5.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.93v-8.4a2 2 0 0 1 1.42-1.93 1.87 1.87 0 0 1 1.8.5 1.84 1.84 0 0 1 .56 1.33v8.09l3.09.27a1.78 1.78 0 0 1 1.63 1.77 17.13 17.13 0 0 1-1.8 7.64l-.09.17M18.18 1.09a4.73 4.73 0 0 1 0 6.68M5.82 8.72a4.74 4.74 0 0 1 0-6.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleTouchFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.94V7.28A1.91 1.91 0 0 0 9.94 5.4a2 2 0 0 0-1.71 2v8.38l-1.31-1.3a2 2 0 0 0-1.41-.58 2 2 0 0 0-1.42 3.4l5.08 5.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.94v-6.5a2 2 0 0 1 1.42-1.93 1.87 1.87 0 0 1 1.8.5 1.83 1.83 0 0 1 .55 1.33v6.2l3.1.26a1.78 1.78 0 0 1 1.62 1.78 17 17 0 0 1-1.8 7.63l-.08.17M18.17 3a4.73 4.73 0 0 1 0 6.68M5.83 10.62a4.73 4.73 0 0 1 0-6.68M3.45 2.56a6.69 6.69 0 0 0 0 9.44M20.55 11.06a6.69 6.69 0 0 0 0-9.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDoubleTouch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m11 23-5.38-5.38a2.12 2.12 0 0 1 3-3L10 16V6.11A2.08 2.08 0 0 1 11.82 4 2 2 0 0 1 14 6v6l5.28.75a2 2 0 0 1 1.72 2 18 18 0 0 1-1.91 8.09L19 23M7.46 2.46a5 5 0 0 0 0 7.08M4.94 1a7.07 7.07 0 0 0 0 10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.54 9.54a5 5 0 0 0 0-7.08M19.06 11a7.07 7.07 0 0 0 0-10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.57 6.27v6.92a9.31 9.31 0 0 1-9.31 9.31h-.48a9.3 9.3 0 0 1-9.3-9.31V13H7.2A3.81 3.81 0 0 0 11 9.14V6.27a4.78 4.78 0 0 1 4.8-4.77 4.78 4.78 0 0 1 4.77 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 9.14V13a4.77 4.77 0 0 1-4.77 4.78A4.77 4.77 0 0 1 1.48 13M20.57 7.23l.95.95h-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.7,
    cy: 6.27,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgDownMove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 12.93V6.25a1.89 1.89 0 0 0-.56-1.35 1.86 1.86 0 0 0-1.52-.55 2 2 0 0 0-1.74 2v9.45l-1.32-1.32a2 2 0 0 0-1.43-.59 2 2 0 0 0-1.43 3.45l5.14 5.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 12.93V5.4a2 2 0 0 1 1.44-1.95 1.84 1.84 0 0 1 1.81.5 1.84 1.84 0 0 1 .57 1.35v7.22l3.12.27a1.8 1.8 0 0 1 1.65 1.79 17.22 17.22 0 0 1-1.82 7.72l-.09.18M7.23 7.21l-2.87 2.86L1.5 7.21M4.36.52v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDownOrientation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.22 4.35h11.51v5.75H6.22zM3.34 13.94H20.6v5.75H3.34zM23.48 10.11H.46M23.48 19.7H.46"
  })));
};

const SvgDownstairs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 18.68h9.55v3.82H1.5zM5.32 14.86h9.55v3.82H5.32z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 11.05h9.55v3.82H9.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 11.04V22.5H11.04v-3.82h3.82v-3.82h3.82v-3.82h3.82zM6.27 11.04H1.5V6.27M1.5 11.05l9.55-9.55"
  }));
};

const SvgDownwardEscalator = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m6.27 16.82 8.59-8.59h4.78a2.86 2.86 0 0 1 2.86 2.86A2.86 2.86 0 0 1 19.64 14h-2.87v2.87h-2.86v2.86h-2.86v2.87H4.36a2.87 2.87 0 0 1-2.86-2.92 2.86 2.86 0 0 1 2.86-2.86ZM21.55 3.46H11.04l-8.58 8.58",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 12.04H2.46V8.23"
  }));
};

const SvgDragDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.48-5.18-5.14a2 2 0 0 1 2.86-2.86L12 15.8V6.36a2 2 0 0 1 1.74-2 1.92 1.92 0 0 1 2.08 1.9V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 10.62a4.54 4.54 0 0 0 1.47-1 4.78 4.78 0 1 0-6.76 0 4.54 4.54 0 0 0 1.47 1M7.23 7.21l-2.87 2.86L1.5 7.21M4.36.52v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDragLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 10.64a4.54 4.54 0 0 0 1.47-1 4.78 4.78 0 1 0-6.76 0 4.54 4.54 0 0 0 1.47 1M4.36 9.14 1.5 6.27l2.86-2.86M9.14 6.27H1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDragRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m8.2 22.45-5.11-5.11a2 2 0 0 1 2.85-2.85l1.31 1.31V6.41a2 2 0 0 1 1.75-2 1.91 1.91 0 0 1 2.05 1.89V12l5 .72a1.9 1.9 0 0 1 1.65 1.88 17.16 17.16 0 0 1-1.81 7.67l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 10.65a4.4 4.4 0 0 0 1.46-1 4.75 4.75 0 1 0-6.72 0 4.4 4.4 0 0 0 1.46 1M18.65 3.45 21.5 6.3l-2.85 2.85M13.9 6.3h7.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDragUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 10.64a4.54 4.54 0 0 0 1.47-1 4.78 4.78 0 1 0-6.76 0 4.54 4.54 0 0 0 1.47 1M1.5 5.32l2.86-2.87 2.87 2.87M4.36 12V2.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDrawLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.24 22.52-5.15-5.14a2 2 0 0 1 1.44-3.47 2 2 0 0 1 1.43.6l1.32 1.32V6.37A2 2 0 0 1 8 4.36a1.83 1.83 0 0 1 1.51.55 1.86 1.86 0 0 1 .57 1.35V12l5.05.72a1.92 1.92 0 0 1 1.64 1.9A17.22 17.22 0 0 1 15 22.34l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.11 6.26h9.56l-5.73-4.78h9.56"
  }));
};

const SvgDraw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.13 22.5H9.87a2 2 0 1 1 0-4.05h1.86l-6.67-6.67a2 2 0 0 1-.19-2.65A1.92 1.92 0 0 1 7.68 9l4.05 4.05L15.81 10a1.9 1.9 0 0 1 2.49.18 17.3 17.3 0 0 1 4.17 6.74l.06.19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 1.5H8.25a1.91 1.91 0 0 0-1.91 1.91 1.92 1.92 0 0 0 1.91 1.91h2.86A1.9 1.9 0 0 1 13 7.23a1.91 1.91 0 0 1-1.91 1.91h-2.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDrawersCupboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 1.5H12v20.09H2.43zM12 15.85h9.57v5.74H12zM5.3 23.5v-1.91M18.7 23.5v-1.91M8.17 11.07v1.91M16.78 17.76v-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.07h9.57v4.78H12zM16.78 12.98v-1.91M12 6.28h9.57v4.78H12zM16.78 8.2V6.28M12 1.5h9.57v4.78H12zM16.78 3.41V1.5"
  }));
};

const SvgDrawersEndTable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.4h23M3.38 10.1h17.25v6.71H3.38zM4.33 21.6v-4.79M19.67 21.6v-4.79M10.08 12.98h3.84"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 3.4h17.25v6.71H3.38zM10.08 6.27h3.84"
  }));
};

const SvgDrawersTable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 1.5h22.96M3.39 1.5H12v8.61H3.39zM12 1.5h8.61v8.61H12zM4.35 23.5v-4.78M19.65 23.5v-4.78M6.26 4.37h2.87M14.87 4.37h2.87M3.39 10.11H12v8.61H3.39zM12 10.11h8.61v8.61H12zM6.26 12.98h2.87M14.87 12.98h2.87"
  }));
};

const SvgDrawingTablet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.48,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 9.11,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 5.3h1.91M4.36 12.93h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 21.05 2.86-.48a1 1 0 0 1 .32 1.91c0 .09-3-.47-3.18-.48a.48.48 0 0 1 0-.95Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 21.52H4.36"
  }));
};

const SvgDribble = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.12 2.24a32.47 32.47 0 0 1 4.68 6.89 33.23 33.23 0 0 1 1.58 3.56 36.16 36.16 0 0 1 2.15 8.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 4.82a18.16 18.16 0 0 1-6.87 4.31A28 28 0 0 1 1.55 11M22.42 13.21a16.66 16.66 0 0 0-8-.52 13 13 0 0 0-9.33 7.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDrillElectric = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.2 1.5h11.46a3.82 3.82 0 0 1 3.82 3.82 3.82 3.82 0 0 1-3.82 3.82H7.2V1.5ZM.52 5.32h7.64M7.2 9.14H11V13a1.91 1.91 0 0 1-1.91 1.91A1.91 1.91 0 0 1 7.2 13V9.14ZM15.8 18.68h4.77a1.91 1.91 0 0 1 1.91 1.91v1.91h-8.59v-1.91a1.91 1.91 0 0 1 1.91-1.91ZM21.52 18.68h-4.77l-1.91-9.54h4.77l1.91 9.54zM17.7 1.5v2.86M13.89 1.5v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDroneTech = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13.92 14.88 2.87-1V11a1.92 1.92 0 0 0-1.91-1.92H9.12A1.92 1.92 0 0 0 7.21 11v2.88l2.87 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.88,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 11.04H.5M23.5 11.04h-6.71M.5 6.25h5.75M17.75 6.25h5.75M3.38 6.25v4.79M20.63 6.25v4.79M3.38 17.75h1.91v-2.87l1.92-.96M20.63 17.75h-1.92v-2.87l-1.92-.96"
  }));
};

const SvgDrone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.84 8.18a3.34 3.34 0 1 1 3.34-3.34M8.18 19.16a3.34 3.34 0 1 1-3.34-3.34M15.82 4.84a3.34 3.34 0 1 1 3.34 3.34M19.16 15.82a3.34 3.34 0 1 1-3.34 3.34M19.64 19.64l-4.78-4.78M9.14 9.14 4.36 4.36M9.14 14.86l-4.78 4.78M19.64 4.36l-4.78 4.78M14.86 9.14v5.72a2.86 2.86 0 1 1-5.72 0V9.14a2.86 2.86 0 1 1 5.72 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDropbox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22 13 7 3 2 6l15 10 5-3z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2 13 17 3l5 3L7 16l-5-3zM17 16v2l-5 3-5-3v-2"
  }));
};

const SvgDropper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 6.41a4.91 4.91 0 0 1-2.31 4.17l-5.33 3.33-4.77-4.77 3.33-5.33a4.91 4.91 0 0 1 4.17-2.31 4.91 4.91 0 0 1 4.91 4.91ZM13.91 12.96 4.36 22.5H1.5v-2.86l9.54-9.55M8.18 7.23l8.59 8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDrugs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.34,
    y: 0.3,
    width: 6.74,
    height: 14.83,
    rx: 3.37,
    transform: "rotate(45 7.706 7.712)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.76,
    cy: 16.76,
    r: 5.72,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.77 20.77-7.82-7.82M10.09 10.09 5.33 5.33"
  }));
};

const SvgDumbbellGym = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 11.05a2 2 0 0 0 2-2 2 2 0 0 0-.59-1.43l-5.5-5.5A2 2 0 0 0 15 1.5a2 2 0 0 0-2 2 2 2 0 0 0 .55 1.5L19 10.45a2 2 0 0 0 1.48.6ZM9 22.5a2 2 0 0 0 2-2 2 2 0 0 0-.6-1.44L5 13.55A2 2 0 0 0 3.52 13a2 2 0 0 0-2 2 2 2 0 0 0 .59 1.43l5.5 5.5A2 2 0 0 0 9 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(45 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 5.93h3.82v12.15h-3.82z"
  }));
};

const SvgDumbbell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 1.5A4.75 4.75 0 0 0 13.29 8L8 13.29a4.82 4.82 0 1 0 2.7 2.7l5.3-5.28a4.77 4.77 0 1 0 1.73-9.21Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgDuplicateWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.41 5.32h17.26v17.26H1.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.41 5.32h17.26v5.75H1.41zM18.68 7.24h3.84v11.51h-3.84z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 1.49v5.75h-3.83V5.32H5.25V1.49h17.26zM4.29 8.2h1.92M8.13 8.2h1.92"
  })));
};

const SvgDvd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 12a2.85 2.85 0 1 1-.38-1.43 2.86 2.86 0 0 1 .38 1.43ZM12 18.68A6.69 6.69 0 0 1 5.32 12M12 5.32A6.69 6.69 0 0 1 18.68 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEarDropsBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "ear drop"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 10.09v1L1.5 13.91v6.68a1.9 1.9 0 0 0 1.91 1.91h7.64A1.9 1.9 0 0 0 13 20.59v-6.68l-2.86-2.86v-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 6.27h7.64v3.82H3.41zM7.23 1.5a1.91 1.91 0 0 1 1.91 1.91v2.86H5.32V3.41A1.91 1.91 0 0 1 7.23 1.5ZM14.86 6.27h7.64v3.82h-7.64zM18.68 1.5a1.91 1.91 0 0 1 1.91 1.91v2.86h-3.82V3.41a1.91 1.91 0 0 1 1.91-1.91ZM20.59 18.68l-1.91 2.87-1.91-2.87v-8.59h3.82v8.59zM6.27 14.86h6.68v3.82H6.27z"
  })));
};

const SvgEarMuffs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 18.2a2.37 2.37 0 0 0-1-1.94 2.12 2.12 0 0 0 .06-.44 1.91 1.91 0 1 0-3.45 1.12 2.35 2.35 0 0 0 0 2.53 1.91 1.91 0 1 0 3.45 1.12 2.12 2.12 0 0 0-.06-.44 2.38 2.38 0 0 0 1-1.95ZM1.5 18.2a2.37 2.37 0 0 1 1-1.94 2.12 2.12 0 0 1-.06-.44 1.91 1.91 0 1 1 3.46 1.12 2.35 2.35 0 0 1 0 2.53 1.91 1.91 0 1 1-3.45 1.12 2.12 2.12 0 0 1 .06-.44A2.38 2.38 0 0 1 1.5 18.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13.91V9.14A7.64 7.64 0 0 1 12 1.5a7.64 7.64 0 0 1 7.64 7.64v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 8.18A6.68 6.68 0 0 1 12 1.5a6.68 6.68 0 0 1 6.68 6.68A16.16 16.16 0 0 1 14 19.59l-1.25 1.25a5.71 5.71 0 0 1-4 1.66 3.37 3.37 0 0 1-3.37-3.37 3.34 3.34 0 0 1 1-2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 8.18A2.86 2.86 0 0 0 12 5.32a2.86 2.86 0 0 0-2.86 2.86v5.73a1.91 1.91 0 0 0 1.91 1.91A1.91 1.91 0 0 0 13 13.91 1.9 1.9 0 0 0 11.05 12H9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEarphones = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 2.64v4.45a11.22 11.22 0 0 1-2.86 1.07v5.77H1.5V4.86a3.33 3.33 0 0 1 3.34-3.34 8.88 8.88 0 0 1 3.34 1.12ZM1.5 4.86v-.47M15.82 2.64v4.45a11.22 11.22 0 0 0 2.86 1.07v5.77h3.82V4.86a3.33 3.33 0 0 0-3.34-3.34 8.88 8.88 0 0 0-3.34 1.12ZM22.5 4.39v.47M3.41 13.93a4.77 4.77 0 0 0 4.77 4.77H12v4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.55 13.93a4.77 4.77 0 0 1-4.77 4.77h-5.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEarthStatue = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 8.18,
    rx: 2.86,
    ry: 6.68,
    transform: "rotate(-45 11.998 8.18)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.28 12.91 9.44-9.45M12 15.82l6.68 6.68H5.32L12 15.82zM12 22.5v-6.68M.55 22.5h22.9"
  }));
};

const SvgEasterIsland = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.08 11.04.96-4.79h1.92l.96 4.79-1.17.96h-1.5l-1.17-.96zM8.17 6.25h7.66M10.08 14.88h3.84"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.71 15.83-1.15 1.73-.77 1.15H7.21l-.77-1.15-1.15-1.73.96-11.5 2.88-2.87h5.75l2.87 2.87.96 11.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.63 20.63v1.91H3.38v-1.91l3.06-3.07.77 1.15h9.58l.77-1.15 3.07 3.07zM.5 22.54h23"
  }));
};

const SvgEcology = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.26 15.38A4.91 4.91 0 0 0 7 15.7a5 5 0 1 0-5-5 4.8 4.8 0 0 0 .52 2.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.02,
    cy: 10.67,
    r: 1.37,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2 23v-2.37a12.15 12.15 0 0 1 4.57-9.5M20.74 6.78a3 3 0 0 0 .43-1.58 3.2 3.2 0 1 0-3.78 3.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m18 5.2.08.23a9.83 9.83 0 0 0 4.92 5.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.98,
    cy: 5.2,
    r: 0.46,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEducation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.55 17.73H18.2a2.39 2.39 0 0 1 2.39 2.38 2.39 2.39 0 0 1-2.39 2.39H.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 17.73a3.47 3.47 0 0 1 1 2.38 3.5 3.5 0 0 1-1 2.39M23.45 17.73H5.8a2.39 2.39 0 0 1-2.39-2.39A2.39 2.39 0 0 1 5.8 13h17.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 17.73a3.46 3.46 0 0 1 0-4.78M16.77 7.39c0 2.78-1.91 7.06-4.77 5-2.86 2-4.77-2.26-4.77-5s2.86-4 4.77-2c1.91-2.04 4.77-.79 4.77 2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5c1 0 1.91 1 1.91 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEgg = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 12,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.51 1.5c2.86 0 6.69 0 8.78 3.05 3.51 5.11-2.85 7.85 0 9.81s2.68 5.57 1 6.86c-3.28 2.45-7.1-2.59-11.65.65C5.7 24.65-.19 17.78 2 10.23 3.06 6.35 6.73 1.5 11.51 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEiffelTowerParis = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11 3.37C11 12 7.22 19.63 4.35 22.5M13 3.37c0 8.63 3.78 16.26 6.65 19.13M.52 22.5h22.96M9.13 3.37h5.74M12 .5v2.87M8.17 11.02h7.66M5.3 16.76h13.4M14.87 22.5H9.13l1.91-2.87h1.92l1.91 2.87zM12 14.85v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEiffelTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.61 22.5h-4.78a3.83 3.83 0 0 0-7.66 0H3.39l3.83-6.7h9.56ZM15.83 15.8H8.17l.96-3.82h5.74l.96 3.82zM12 .5a35.37 35.37 0 0 1-1.81 11.18l-.1.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 .5a35.37 35.37 0 0 0 1.81 11.18l.1.3M10.09 2.41h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricBatteryCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 3.37H3.39v15.3h9.57V3.37h-2.87V1.46H6.26v1.91zM1.48 18.67h13.39v3.83H1.48z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.17 11.02-.71.96h.71v-.96zM8.17 12.94l.72-.96h-.72v.96z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.65 3.37h1.91v5.74h-1.91a1.91 1.91 0 0 1-1.91-1.91V5.28a1.91 1.91 0 0 1 1.91-1.91Z",
    transform: "rotate(-90 19.65 6.24)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.74.5v3.83M21.57.5v3.83M19.65 8.15v9.57a2.87 2.87 0 0 1-2.87 2.87h-1.91"
  }));
};

const SvgElectricCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.75,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.16,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.84 20.59h-4.77M7.25 20.59H5.34v-5.73l1.19-3a2.86 2.86 0 0 1 2.66-1.81h6a2.87 2.87 0 0 1 2.46 1.39l2 3.38a2.87 2.87 0 0 1 2.86 2.87v2.86h-2.85M19.66 14.86h-8.59M13.93 12v2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.34 17.73h-1a2.86 2.86 0 0 1-2.87-2.87V7.23a2.87 2.87 0 0 1 2.92-2.87h11.45M17.75 1.5h1.91v5.73h-1.91a1.91 1.91 0 0 1-1.91-1.91V3.41a1.91 1.91 0 0 1 1.91-1.91ZM23.48 2.45h-3.82M23.48 6.27h-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5h1.91v5.73h-1.91a1.91 1.91 0 0 1-1.91-1.91V3.41a1.91 1.91 0 0 1 1.91-1.91ZM21.55 2.45h-3.82M21.55 6.27h-3.82M11.04 11.04l-1.9 2.87h1.9v-2.87zM12 15.82l1.91-2.86H12v2.86z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 13.43a9.07 9.07 0 1 1-9.07-9.07h2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricDrill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.7 11.05H12l-1-1v-7.6l1-1h5.7a4.78 4.78 0 0 1 4.78 4.77 4.78 4.78 0 0 1-4.78 4.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.07 2.45h1v7.64h-1a3.82 3.82 0 0 1-3.82-3.82 3.82 3.82 0 0 1 3.82-3.82ZM.52 6.27h5.73M13.89 11.04h4.77l1.91 7.64h-4.78l-1.9-7.64zM14.84 18.68h5.73a1.91 1.91 0 0 1 1.91 1.91v1.91h-9.55v-1.91a1.91 1.91 0 0 1 1.91-1.91ZM14.84 2.45v4.78M18.66 2.45v4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricLightbulb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 9.14a7.64 7.64 0 1 0-13.15 5.27 6.2 6.2 0 0 1 1.69 4.27h7.64a6.07 6.07 0 0 1 1.67-4.24 7.59 7.59 0 0 0 2.15-5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 8.18-1.91 2.86H12V8.18zM12 12.96l1.91-2.87H12v2.87zM8.18 18.68h7.64v1.91a1.91 1.91 0 0 1-1.91 1.91h-3.82a1.91 1.91 0 0 1-1.91-1.91v-1.91ZM.55 9.14h1.9M3.41 1.5h1.91M3.41 16.77h1.91M23.45 9.14h-1.9M20.59 16.77h-1.91M20.59 1.5h-1.91"
  }));
};

const SvgElectricSander = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 17.73h1.91A3.82 3.82 0 0 1 11 21.55H1.5a3.82 3.82 0 0 1 3.82-3.82ZM6.27 7.23h2.87A1.91 1.91 0 0 1 11 9.14v5.73H1.5V12a4.77 4.77 0 0 1 4.77-4.77ZM11.05 9.14V13h7.07a4.8 4.8 0 0 1 1.91.4l.17.16a1.31 1.31 0 0 0 .95.4 1.35 1.35 0 0 0 1.35-1.35v-2.12a1.34 1.34 0 0 0-1.35-1.35ZM1.5 11.05h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 7.23V4.36a1.92 1.92 0 0 1 1.91-1.91H13a1.92 1.92 0 0 1 1.91 1.91v4.78h-3.86M6.27 14.86v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricSaw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.54 10.06H1.46V7.19a5.74 5.74 0 0 1 5.75-5.75h12.94a2.39 2.39 0 0 1 2.39 2.39v6.23ZM7.21 20.6l-3.83.96v-11.5h3.83V20.6zM14.88 10.06h5.75v5.75h-5.75zM23.5 15.81H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.96,
    y: 1.44,
    width: 9.58,
    height: 4.79,
    rx: 2.4,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricStorm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 16.52a4.29 4.29 0 0 0-1.44-8.34h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.78 4.78 0 0 0-1.91 9.15",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.71 14.86-1.44 3.82h1.91L6.75 22.5M12.48 12.96l-1.44 3.81h1.92l-1.44 3.82M17.25 14.86l-1.43 3.82h1.91L16.3 22.5"
  }));
};

const SvgElectricThought = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.54 23.5a24.47 24.47 0 0 1 2.29-9.9 8.62 8.62 0 0 0 .73-3.25 8.71 8.71 0 0 0-8.31-8.85 8.61 8.61 0 0 0-8.9 8.61v.58l-1.77 3.89a1.49 1.49 0 0 0-.15.66A1.57 1.57 0 0 0 4 16.8h.35v1a2.86 2.86 0 0 0 2.87 2.87h1.91v2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 8.2 12 11.06h1.91V8.2zM13.91 13.94l1.92-2.88h-1.92v2.88z"
  }));
};

const SvgElectricityCable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 6.27H11V11a2.86 2.86 0 0 1-2.86 2.86H4.36A2.86 2.86 0 0 1 1.5 11V6.27ZM3.41.55v5.72M9.14.55v5.72M4.36 13.91h3.82v1.91a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 17.73v.47a4.3 4.3 0 0 0 4.3 4.3 4.29 4.29 0 0 0 4.29-4.3v-8.11a3.82 3.82 0 0 1 3.82-3.82 3.82 3.82 0 0 1 3.82 3.82v13.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgElectricityHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15 12.5h-3v-3l-3 4h3v3l3-4z"
  }));
};

const SvgElectricityMagnifyingGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 10.09,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-5.73-5.73M10.09 7.23l-1.91 2.86h1.91V7.23zM10.09 12.96 12 10.09h-1.91v2.87z"
  }));
};

const SvgElectricitySocketCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 11.05v1.9M14.86 11.05v1.9"
  }));
};

const SvgElectricitySocket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 10.09v3.82M14.86 10.09v3.82"
  }));
};

const SvgElectricitySquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 11.04 12 10.09V6.27l-4.77 6.69 4.77.95v3.82l4.77-6.69z"
  }));
};

const SvgElectricity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.29 1.71H18.5l-4.64 7.43h3.71L7.36 20.29l1.85-7.43H5.5L8.29 1.71z"
  }));
};

const SvgElementsHorizontal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.05 22.57H2.38L10.05 5.3v17.27zM13.89 22.57h7.67L13.89 5.3v17.27z"
  })));
};

const SvgElementsVertical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 13.94v7.67L5.25 13.94h17.26zM22.51 10.1V2.43L5.25 10.1h17.26z"
  })));
};

const SvgElevatorUpDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.08 10.6 2.34-2.33 2.33 2.33M22.75 17.13l-2.33 2.34-2.34-2.34M1.75 5.47h14.93v16.8H1.75zM18.55 13.87h3.73M9.22 5.47v16.8M8.28 1.73h1.87M12.02 1.73h1.86M4.55 1.73h1.87"
  }));
};

const SvgElevator = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h19.09v21H2.45zM11.05 4.36h1.9M7.23 4.36h1.91M14.86 4.36h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23h11.45V22.5H6.27zM12 7.23V22.5M.55 22.5h22.9"
  }));
};

const SvgElf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 16.77a5.73 5.73 0 0 1-11.46 0 5.57 5.57 0 0 1 .34-1.91h10.78a5.57 5.57 0 0 1 .34 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 11.05h11.45v3.82H6.27zM21.55 13v1.91a3.82 3.82 0 0 1-3.82 3.82v-1.96A3.82 3.82 0 0 1 21.55 13Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 13a3.82 3.82 0 0 1 3.82 3.82v1.91a3.82 3.82 0 0 1-3.82-3.82V13Z",
    transform: "rotate(180 4.365 15.82)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 3.41A1.92 1.92 0 0 1 12 5.32a1.91 1.91 0 0 1-1.91-1.91 1.91 1.91 0 0 1 3.82 0ZM16.85 11.05l-3.83-6.03M10.94 5l-4.03 6.05",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEmail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 8.18v6a1.67 1.67 0 0 0 1.67 1.67 1.64 1.64 0 0 0 1.48-.9 6.65 6.65 0 0 0 .63-3.67 6.69 6.69 0 1 0-4.23 7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEmergencySiren = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.35 18.67h15.3v3.83H4.35z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.24A5.74 5.74 0 0 1 17.74 12v6.7H6.26V12A5.74 5.74 0 0 1 12 6.24ZM9.13 12.93h5.74M12 10.07v5.73M12 .5v2.87M20.61 11.98h2.87M.52 11.98h2.87M3.88 3.86l2.03 2.03M18.09 5.89l2.03-2.03",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEndTableCupboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.4h23M3.38 3.4h8.63v13.42H3.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.4h8.63v13.42H12zM4.33 21.6v-4.79M19.67 21.6v-4.79M9.13 9.15v1.91M14.88 9.15v1.91"
  }));
};

const SvgEndTableDrawer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.4h23M3.38 3.4h8.63v6.71H3.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.4h8.63v6.71H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 10.1h17.25v6.71H3.38zM4.33 21.6v-4.79M19.67 21.6v-4.79M6.25 6.27h2.88M14.88 6.27h2.87M10.08 12.98h3.84"
  }));
};

const SvgEndTableDrawers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.4h23M3.38 3.4h8.63v6.71H3.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.4h8.63v6.71H12zM4.33 21.6v-4.79M19.67 21.6v-4.79M6.25 6.27h2.88M14.88 6.27h2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 10.1h8.63v6.71H3.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.1h8.63v6.71H12zM6.25 12.98h2.88M14.88 12.98h2.87"
  }));
};

const SvgEndTableLamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 17.73h13.36v4.77H5.32zM5.32 12.95h13.36v4.77H5.32zM12 19.64v-1.91M12 14.86V6.27M20.59 12.95H3.41M14.86 6.27H9.14l.95-4.77h3.82l.95 4.77zM9.14 12h5.72"
  }));
};

const SvgEndTable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 1.5h22.96M3.39 1.5H12v8.61H3.39zM12 1.5h8.61v8.61H12zM3.39 10.11h17.22v8.61H3.39zM4.35 23.5v-4.78M19.65 23.5v-4.78M6.26 4.37h2.87M14.87 4.37h2.87M10.09 13.93h3.82"
  }));
};

const SvgEnergyBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.32 11.98-1.28 3.82h1.92l-1.28 3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 10.07V22.5H7.22V10.07l.89-.45A1.85 1.85 0 0 0 9.13 8a1.85 1.85 0 0 0-.54-1.31l-.42-.41V4.33a1.92 1.92 0 0 0 1.92-1.92h3.82a1.92 1.92 0 0 0 1.92 1.92v1.91l-.42.41A1.85 1.85 0 0 0 14.87 8a1.85 1.85 0 0 0 1 1.66ZM12 .5v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEnergyCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.32 8.18 11.04 12h1.92l-1.28 3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 22.5H7.23l-1.91-3.82V5.32L7.23 1.5h9.54l1.91 3.82v13.36l-1.91 3.82zM5.32 5.32h10.5M5.32 18.68h10.5M4.36 1.5h15.28"
  }));
};

const SvgEnergyDrink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 3.41 9.14 1.5H6.27v5.73h11.46A3.24 3.24 0 0 0 14.89 4ZM4.36 7.23h15.28M6.27 7.23h11.46L15.82 22.5H8.18L6.27 7.23z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.32 11.04-1.28 3.82h1.92l-1.28 3.82"
  }));
};

const SvgEnergyPill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 17.73V9.14A3.82 3.82 0 0 0 13 5.32H5.32A3.82 3.82 0 0 0 1.5 9.14v9.54a3.82 3.82 0 0 0 3.82 3.82H13a3.66 3.66 0 0 0 1.33-.25M3.41 1.5h11.45v3.82H3.41z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.95,
    y: 17.73,
    width: 9.55,
    height: 4.77,
    rx: 2.39,
    transform: "rotate(-180 17.725 20.115)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 17.73v4.77M9.46 12l-1.28 3.82h1.91l-1.27 3.82M2.45 9.14h11.46"
  }));
};

const SvgEngagementRing = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.48 10.09h-.96L8.66 7.23l.95-1.91h4.78l.95 1.91-2.86 2.86zM1.5 16.77h21v2.86a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.85v-2.87Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 1.5h11.46a2.86 2.86 0 0 1 2.86 2.86v12.41H3.41V4.36A2.86 2.86 0 0 1 6.27 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.38 16.77a4.83 4.83 0 0 0 .39-1.91 4.77 4.77 0 0 0-9.54 0 4.83 4.83 0 0 0 .39 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEntrance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.63 22.5H1.5v-19l10.13-2v21zM11.63 3.5h3.65v19h-3.65zM9.8 11.5ZM19.85 15.5l-2.72-2.97 2.72-2.98M23.5 12.5h-6.39"
  }));
};

const SvgEnvelopeArrowRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 4.36h11.46L14.86 1.5M1.5 7.23h21V22.5h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h21V22.5h-21z"
  }));
};

const SvgEnvelopeCheck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 1.5 12 7.23 9.14 4.36M16.68 7.23h5.82V22.5h-21V7.23h5.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.68 7.23h5.82V22.5h-21V7.23h5.82"
  }));
};

const SvgEnvelopeLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .52V7.2M13 9.11ZM15.72 7.21h6.78v15.27h-21V7.21h6.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.21 12 17.7 22.5 7.21M9.14 14.84 1.5 22.48M22.5 22.48l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.72 7.21h6.78v15.27h-21V7.21h6.78"
  }));
};

const SvgEnvelopeLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36 12 14.86l10.5-10.5M9.14 12 1.5 19.64M22.5 19.64 14.86 12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }));
};

const SvgEnvelopeMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 2.93h7.64M16.68 5.79h5.82v15.28h-21V5.79h5.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.79 12 16.3 22.5 5.79M9.14 13.43 1.5 21.07M22.5 21.07l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.68 5.79h5.82v15.28h-21V5.79h5.82"
  }));
};

const SvgEnvelopePaperEmail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 6.97 3.82 3.12V22.5h-21V10.09l3.82-3.12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 11.04 12 18.68l10.5-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 13.91V1.5h13.36v12.41M8.18 5.32h7.64M8.18 9.14h7.64M8.18 12.95h7.64"
  }));
};

const SvgEnvelopePaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 12V1.5h13.36V12M8.18 6.27h7.64M8.18 10.09h7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 3.41 1.5 7.23V22.5h21V7.23l-3.82-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 8.18 12 18.68l10.5-10.5"
  }));
};

const SvgEnvelopeQuestion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 3.41A1.91 1.91 0 0 1 12 1.5a1.91 1.91 0 0 1 1.91 1.91v.16a1.9 1.9 0 0 1-.56 1.35l-.79.79A1.92 1.92 0 0 0 12 7.06v.17M14.77 7.23h7.73V22.5h-21V7.23h3.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.77 7.23h7.73V22.5h-21V7.23h7.64M13 9.14Z"
  }));
};

const SvgEnvelopeXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 1.5 5.72 5.73M14.86 1.5 9.14 7.23M17.63 7.23h4.87V22.5h-21V7.23h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.63 7.23h4.87V22.5h-21V7.23h4.77"
  }));
};

const SvgEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36 12 14.86l10.5-10.5"
  }));
};

const SvgEnvelopesLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h17.18v13.36H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 3.41v3.82h14.32v9.54h3.82V3.41H4.36z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 7.04 8.4 8.4 8.4-8.4M8.18 13.72 1.5 20.4M18.3 20.4l-6.68-6.68"
  }));
};

const SvgEraser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13.59 19-2.82 2.83a2.33 2.33 0 0 1-1.63.67 2.31 2.31 0 0 1-1.63-.67l-5.34-5.34a2.31 2.31 0 0 1-.67-1.63 2.33 2.33 0 0 1 .67-1.63L5 10.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 13.756 10.252)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.45 4.17h12.59v12.15H7.45z"
  }));
};

const SvgEthernetPort = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 6.27v7.64h1.91v1.91h2.86v1.91h3.82v-1.91h2.86v-1.91h1.91V6.27H5.32zM8.18 9.14V6.27M12 9.14V6.27M15.82 9.14V6.27"
  }));
};

const SvgEuroCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "eauro coin"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 14.86h0A2.86 2.86 0 0 1 13 17.73h-1a2.86 2.86 0 0 1-2.86-2.87V9.14A2.86 2.86 0 0 1 12 6.27h1a2.86 2.86 0 0 1 2.87 2.87h0M7.23 10.09h3.82M7.23 13.91h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgEuroSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 16.77h0a5.72 5.72 0 0 1-5.73 5.73H12a5.73 5.73 0 0 1-5.73-5.73V7.23A5.73 5.73 0 0 1 12 1.5h2.86a5.72 5.72 0 0 1 5.73 5.73h0M3.41 9.14h6.68M3.41 14.86h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgEuropeanPlug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 6.27H11V11a2.86 2.86 0 0 1-2.86 2.86H4.36A2.86 2.86 0 0 1 1.5 11V6.27ZM3.41.55v5.72M9.14.55v5.72M4.36 13.91h3.82v1.91a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 17.73v.47a4.3 4.3 0 0 0 4.3 4.3 4.29 4.29 0 0 0 4.29-4.3v-8.11a3.82 3.82 0 0 1 3.82-3.82 3.82 3.82 0 0 1 3.82 3.82v13.36M6.27 2.45v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEuropeanSocket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 12v2.86M14.86 12v2.86M12 8.18v2.87"
  }));
};

const SvgEvenScale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 12.94h6.71v.73a3.11 3.11 0 0 1-3.11 3.11h-.5a3.11 3.11 0 0 1-3.11-3.11v-.73h.01Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 5.27h5.42a3.18 3.18 0 0 0 2.29-1 3.24 3.24 0 0 1 2.29-1h3a3.27 3.27 0 0 1 2.31 1 3.27 3.27 0 0 0 2.32 1h5.37M12 .48v22.04M17.75 22.52H6.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.29 5.27h-.96l-2.87 6.71v.96h6.71v-.96L5.29 5.27zM15.83 12.94h6.71v.73a3.11 3.11 0 0 1-3.11 3.11h-.5a3.11 3.11 0 0 1-3.11-3.11v-.73h0Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.67 5.27h-.96l-2.88 6.71v.96h6.71v-.96l-2.87-6.71z"
  }));
};

const SvgExclamationChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 5.3v6.68M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3ZM11.05 13.89h1.9"
  }));
};

const SvgExclamationClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 9.14v6.68M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM11.05 17.73h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExclamationDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 12.95v4.78M16.77 18.68v1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 20.59H1.5V1.5h15.27v7.64M4.36 5.32h9.55M4.36 9.14h9.55M4.36 12.95h4.78M4.36 16.77h4.78"
  }));
};

const SvgExclamationFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 9.14v6.68M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM11.05 17.73h1.9"
  }));
};

const SvgExclamationFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.09v6.68M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M11.05 18.68h1.9"
  }));
};

const SvgExclamationLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.61a2.86 2.86 0 0 1-2.86 2.87H4.36a2.86 2.86 0 0 1-2.86-2.87 1.91 1.91 0 0 1 1.91-1.91h5.73l.95 1h3.82l.95-1h5.73a1.91 1.91 0 0 1 1.91 1.91ZM16.77 5.3h1.91a1.91 1.91 0 0 1 1.91 1.9v10.5M3.41 17.7V7.2a1.91 1.91 0 0 1 1.91-1.9h1.91M12 2.43V7.2M12 8.16v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 6.25,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExclamationMessageAlert = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86H1.5V1.5h19.09v7.64M16.77 12.95v4.78M16.77 18.68v1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 1.5 9.54 7.64 9.55-7.64"
  }));
};

const SvgExclamationMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 5.3v6.68M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82ZM11.05 13.89h1.9"
  }));
};

const SvgExclamationMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64v.95A1.92 1.92 0 0 1 13 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V3.41A1.92 1.92 0 0 1 3.41 1.5H13a1.92 1.92 0 0 1 1.91 1.91v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 2.45H6.27a1 1 0 0 1-.95-1h5.73a1 1 0 0 1-.96 1ZM7.23 19.64h1.91M16.77 8.18v4.77M16.77 13.91v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExclamationMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 5.32h.95a1.9 1.9 0 0 1 1.91 1.91v9.54a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V7.23a1.9 1.9 0 0 1 1.91-1.91h1M12 22.5v-3.82M16.77 22.5H7.23M12 3.41v4.77M12 9.14v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExclamationTriangle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41a1.71 1.71 0 0 0-1.46.81l-8.81 14.1a1.48 1.48 0 0 0-.23.79A1.48 1.48 0 0 0 3 20.59h18a1.48 1.48 0 0 0 1.48-1.48 1.48 1.48 0 0 0-.23-.79l-8.79-14.1A1.71 1.71 0 0 0 12 3.41ZM12 8.18v6.68M12 15.82v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExclamationUsbStick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.52V7.23H2.45v10.5a4.77 4.77 0 0 0 8.82 2.53M3.41 1.5h7.64v5.73H3.41zM15.82 12.95v4.78M15.82 18.68v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 11.05h3.82"
  }));
};

const SvgExclamationWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.97 10.13v5.76M1.42 1.5h21.1v21.1H1.42z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.52 7.25H1.42V1.5h21.1v5.75zM4.3 4.38h1.92M8.13 4.38h1.92M11.97 4.38h1.92M11.01 18.76h1.92"
  })));
};

const SvgExerciseBike = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 16.3,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 13.91h12.41M6.27 18.68h12.41M18.68 6.27v7.64M6.27 2.45v6.69M.55 1.5h1.91l7.63 2.86M6.27 18.68 4.36 22.5M18.68 18.68v3.82M23.45 22.5H.55M21.55 5.32a3.28 3.28 0 0 1-2.31.95h-3.42"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExitSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 18.71H1.46v-7.67h4.79M6.25 14.88H1.46M13.92 18.71h-.96l-4.79-7.67h-.96"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 18.71h.96l4.79-7.67h.96M15.83 10.08v9.59M17.75 11.04h5.75M20.63 19.67v-8.63M.5 22.54h23M.5 7.21h23M6.25 7.21 12 2.42l5.75 4.79"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.42,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgExit = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.5 22.5h-10v-19l10-2v21zM11.5 3.5h4v19h-4zM9.5 11.5ZM19.5 9.5l2.98 2.97-2.98 2.98M15.5 12.5h7"
  }));
};

const SvgExtender = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m6.27 14.86-2.4 1.65a1.43 1.43 0 0 1-.83.26H3a1.46 1.46 0 0 1-1.5-1.46V8.69A1.46 1.46 0 0 1 3 7.23a1.47 1.47 0 0 1 .81.24l2.46 1.67ZM17.73 9.14l2.4-1.65a1.43 1.43 0 0 1 .87-.26 1.46 1.46 0 0 1 1.5 1.46v6.62a1.46 1.46 0 0 1-1.5 1.46 1.47 1.47 0 0 1-.81-.24l-2.49-1.67ZM8.18 10.09h7.64M8.18 13.91h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEyeArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.84 12A7.52 7.52 0 0 1 12 15.91 7.52 7.52 0 0 1 5.16 12 7.52 7.52 0 0 1 12 8.09 7.52 7.52 0 0 1 18.84 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.25 7.12V1.25h5.87M22.75 16.89v5.86h-5.86M7.12 22.75H1.25v-5.86M16.89 1.25h5.86v5.87M1.25 1.25l5.86 5.86M1.25 22.75l5.86-5.86M16.89 7.11l4.88-4.88M22.75 22.75l-5.86-5.86"
  }));
};

const SvgEyeDrops = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "eye drop"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "m8.18 10.09-1.91 4.77v5.73a1.91 1.91 0 0 0 1.91 1.91h7.64a1.91 1.91 0 0 0 1.91-1.91v-5.73l-1.91-4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 16.89a1.91 1.91 0 0 1-3.82 0c0-1.67 1.91-3.1 1.91-3.1s1.91 1.43 1.91 3.1ZM7.23 6.27h9.55v3.82H7.23z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 3.91v-.5A1.91 1.91 0 0 0 12 1.5a1.91 1.91 0 0 0-1.91 1.91v.5a2 2 0 0 1-.2.86l-.75 1.5h5.72l-.75-1.5a2 2 0 0 1-.2-.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgEyeMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "eye minus"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 12h5.72M22.5 12A12.24 12.24 0 0 1 12 17.73 12.24 12.24 0 0 1 1.5 12 12.24 12.24 0 0 1 12 6.27 12.24 12.24 0 0 1 22.5 12Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgEyePlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "eye plus"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 12h5.72M12 9.14v5.72M22.5 12A12.24 12.24 0 0 1 12 17.73 12.24 12.24 0 0 1 1.5 12 12.24 12.24 0 0 1 12 6.27 12.24 12.24 0 0 1 22.5 12Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgEye = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12A12.24 12.24 0 0 1 12 17.73 12.24 12.24 0 0 1 1.5 12 12.24 12.24 0 0 1 12 6.27 12.24 12.24 0 0 1 22.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgEyedropperTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "m4.44 20.8-1.15.78-.9-.9.77-1.15 1.41-4 13.3-13.3a2.71 2.71 0 0 1 1.92-.79 2.71 2.71 0 0 1 2.71 2.74 2.75 2.75 0 0 1-.79 1.92L8.41 19.4ZM11.27 5.91l6.78 6.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgEyedropper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.34 17.73a6.9 6.9 0 0 1 2-4.89L14 7.23l2.86 2.86-5.63 5.61a6.92 6.92 0 0 1-4.89 2.03Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.32 10.57 13.5 6.75 18 2.29a2.69 2.69 0 0 1 1.91-.79 2.7 2.7 0 0 1 2.7 2.7 2.73 2.73 0 0 1-.79 1.91ZM12.07 5.32 18.75 12M6.34 21.55a1 1 0 0 1-1.91 0 6.27 6.27 0 0 1 1-1.91 6.29 6.29 0 0 1 .91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFaceMaskPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m19.67 16.88-4 2a8 8 0 0 1-3.63.86 8 8 0 0 1-3.63-.86l-4-2V8.25h15.26ZM9.13 14h5.75M12 11.13v5.75M4.33 16.88H.5M19.67 16.88h3.83M20.63 8.25h2.87M4.33 8.25H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFaceMask = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.62 7.13a8 8 0 0 0-7.24 0l-2.11 1v7.64l2.11 1.05a8 8 0 0 0 7.24 0l2.11-1.05V8.18ZM17.73 9.14h1.91A2.86 2.86 0 0 1 22.5 12a2.86 2.86 0 0 1-2.86 2.86h-1.91V9.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14h1.91A2.86 2.86 0 0 1 6.27 12a2.86 2.86 0 0 1-2.86 2.86H1.5V9.14Z",
    transform: "rotate(180 3.885 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 10.09h5.72M9.14 13.91h5.72"
  }));
};

const SvgFacebook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 6.27V1.5h-1a7.64 7.64 0 0 0-7.59 7.64v.95H6.27v3.82h2.87v8.59h4.77v-8.59h2.86v-3.82h-2.86v-.95a2.86 2.86 0 0 1 2.86-2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFahrenheit = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 5.3h-3.83v7.66M22.54 9.13h-2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.33,
    cy: 3.87,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.28,
    cy: 17.74,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.11 14.9V5.3a3.83 3.83 0 0 0-7.65 0v9.6a4.67 4.67 0 0 0-1 2.84 4.79 4.79 0 1 0 8.61-2.84ZM6.28 10.09v6.69M10.11 6.26h2.87M10.11 10.09h2.87M10.11 13.91h2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFarmingTractor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 18.2a3.64 3.64 0 0 1 0 .48 4.29 4.29 0 0 1-8.53 0 3.64 3.64 0 0 1 0-.48 4.3 4.3 0 0 1 8.59 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 18.2v.06a.48.48 0 0 1-.95 0v-.06a.48.48 0 0 1 .95 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.06 18.68h9.58L22.5 13a2.86 2.86 0 0 0-2.86-2.86H3.41A1.92 1.92 0 0 0 1.5 12v6.68M12 10.09H3.41V1.5h6.68L12 10.09zM2.45 1.5H12M14.86 12.95h3.82M16.77 10.09V7.23a1.91 1.91 0 0 1 1.91-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFastCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 16.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.86H9.14M5.32 16.86H2.45L1.5 14v-2.86l.26-.14A16.86 16.86 0 0 1 9.3 9.23a20.16 20.16 0 0 1 10.34 2.86L22.5 14v2.86h-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.59 9.64 5.45 3.4 8.6-.95"
  }));
};

const SvgFastEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 8.17h4.78M1.46 12h3.82M2.41 15.83h2.87M5.28 18.7H22.5V5.3H5.28"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.28 5.3 8.61 8.42L22.5 5.3M11.98 12l-6.7 6.7M22.5 18.7 15.8 12"
  }));
};

const SvgFastForward = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.04 12-4.77 2.86V9.14L11.04 12zM16.77 12 12 14.86V9.14L16.77 12zM17.73 7.23v9.54"
  }));
};

const SvgFaucet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 12h21v1a8.59 8.59 0 0 1-8.59 8.59h-3.82a8.59 8.59 0 0 1-8.59-8.66V12ZM6.27 8.16l1.91.95v2.87M17.73 8.16l-1.91.95v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12V4.34a2.86 2.86 0 0 1 2.86-2.86 2.86 2.86 0 0 1 2.87 2.86v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFavouriteGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 6.14h3.9a2 2 0 0 1 2 2v7.82a2 2 0 0 1-2 1.95h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.07H3.21a2 2 0 0 1-2-1.95V8.09a2 2 0 0 1 2-1.95h13.68ZM4.18 10.05h1.96M4.18 13.95h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.61 9.89h.06a.32.32 0 0 1 .32.32v2.45h-.69V10.2a.32.32 0 0 1 .31-.31Z",
    transform: "rotate(-45 16.646 11.265)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.76 9.89h.69v2.43a.33.33 0 0 1-.33.33.33.33 0 0 1-.33-.33V9.89h-.03Z",
    transform: "rotate(-135 18.106 11.269)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFeatherInk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 22.5 18.68 5.32M10.09 13.91h3.82M17.78 1.5a4.73 4.73 0 0 1 4.72 4.72 4.76 4.76 0 0 1-1.38 3.35L13 17.73H6.27v-6.68l8.16-8.17a4.76 4.76 0 0 1 3.35-1.38ZM12.95 7.23v3.82"
  }));
};

const SvgFeedly = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m19.5 1.66-2.81 13.12h-5.63L4.5 21.34V1.66h15zM18.09 8.22h-7.96"
  }));
};

const SvgFemaleGender = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 8.18,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 9.59-9.59M1.5 13.91l8.59 8.59"
  }));
};

const SvgFemaleRelationship = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 6.27,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 11.05V22.5M1.5 17.73h9.55"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 12.95V1.5M22.5 6.27h-9.55"
  }));
};

const SvgFemaleRomance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 9.14V22.5M1.5 17.73h9.55M8.39 1.5a2.55 2.55 0 0 0-2.12 1.14A2.52 2.52 0 0 0 4.15 1.5a2.55 2.55 0 0 0-2.54 2.55c0 3.81 4.66 5.09 4.66 5.09s4.67-1.28 4.67-5.09A2.55 2.55 0 0 0 8.39 1.5ZM17.73 14.86V1.5M22.5 6.27h-9.55M15.61 22.5a2.55 2.55 0 0 0 2.12-1.14 2.52 2.52 0 0 0 2.12 1.14 2.55 2.55 0 0 0 2.54-2.5c0-3.81-4.66-5.09-4.66-5.09s-4.67 1.23-4.67 5.09a2.55 2.55 0 0 0 2.55 2.5Z"
  }));
};

const SvgFemale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 8.11-8.11M1.5 14.86l7.64 7.64"
  }));
};

const SvgFence = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 22.5H9.14V3.41L12 1.5l2.86 1.91V22.5zM20.59 22.5h-5.73V3.41l2.87-1.91 2.86 1.91V22.5zM9.14 22.5H3.41V3.41L6.27 1.5l2.87 1.91V22.5zM5.32 8.18h1.91M11.05 8.18h1.9M16.77 8.18h1.91M5.32 17.73h1.91M11.05 17.73h1.9M16.77 17.73h1.91"
  }));
};

const SvgFileArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 14.86 12 11.04l3.82 3.82M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.04V22.5H3.41v-21h12.41l4.77 4.77V22.5h-5.61"
  }));
};

const SvgFileAudio = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 22.5H3.41v-21h12.41l4.77 4.77V22.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5h.96l4.77 4.77v.96z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.77v-5.73L9.14 12v5.73"
  }));
};

const SvgFileImage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 17.73h-7.37l.8-1.26L14.04 12l3.69 5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m11.16 16.47-.8 1.26H6.27l2.87-4.3 2.02 3.04z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 10.57,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileInfo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 18.68h3.82M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM11.05 10.09h1.9M10.09 12.96H12v5.72"
  }));
};

const SvgFileLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 16.77 3.81-3.81 1.92 1.9 3.81-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileRefresh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.08 13.83 9.3 11.04l2.78-2.78"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 11.05H12a3.82 3.82 0 1 1-3.82 3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileSearch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 12.95,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 17.73-2.75-2.75M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12v-1.91M12 19.64v-1.91M12 12v-1.91M12 19.64v-1.91M9.52 13.43l-1.65-.95M16.13 17.25l-1.65-.95M9.52 13.43l-1.65-.95M16.13 17.25l-1.65-.95M14.48 13.43l1.65-.95M7.87 17.25l1.65-.95M14.48 13.43l1.65-.95M7.87 17.25l1.65-.95M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileShare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 14.86 5.72 2.87M14.86 12l-5.72 2.86M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.68a5.23 5.23 0 0 1-3.82-5v-2.52L12 10.09l3.82 1.07v2.48A5.23 5.23 0 0 1 12 18.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileSound = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05v7.63M15.82 12.95v3.82M8.18 12.95v3.82M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFileVideo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 11.05h5.73v6.68H7.23zM12.96 14.86l2.86 2.87h.95v-6.69h-.95l-2.86 2.87v.95z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgFilingCabinet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 1.98h21v6.68h-21zM1.5 8.66h21v6.68h-21zM1.5 15.34h21v6.68h-21zM10.09 3.89h3.82M10.09 10.57h3.82M10.09 17.25h3.82"
  }));
};

const SvgFilmLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 5.32H6.27L8.18 1.5h7.64l1.91 3.82zM6.27 18.68h11.46l-1.91 3.82H8.18l-1.91-3.82zM18.68 17.73V6.27l3.82 1.91v7.64l-3.82 1.91zM5.32 6.27v11.46L1.5 15.82V8.18l3.82-1.91z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFilmMusic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5.55v22.9M18.68 1.5v1.91M18.68 5.32v1.91M18.68 9.14v1.91M18.68 12.95v1.91M18.68 16.77v1.91M18.68 20.59v1.91M1.5 23.45V.55M5.32 22.5v-1.91M5.32 18.68v-1.91M5.32 14.86v-1.91M5.32 11.05V9.14M5.32 7.23V5.32M5.32 3.41V1.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 8.18h-2.86v6.68"
  }));
};

const SvgFilmPlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.44h23M.5 5.27h1.92M4.33 5.27h1.92M8.17 5.27h1.91M12 5.27h1.92M15.83 5.27h1.92M19.67 5.27h1.91M.5 19.65H12M.5 15.81h1.92M4.33 15.81h1.92M8.17 15.81h1.91M14.88 21.56v-5.75l5.75 2.88-5.75 2.87z"
  }));
};

const SvgFilter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.71H3.41l6.68 8.9v5.41l3.82-1.91v-3.5l6.68-8.9zM1.5 7.7h21"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 4.84,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.51 7.7a2.71 2.71 0 0 0 .17-1 2.87 2.87 0 0 0-5.73 0 2.51 2.51 0 0 0 .18 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFingerprint = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23V1.5h5.73M16.77 1.5h5.73v5.73M1.5 16.77v5.73h5.73M16.77 22.5h5.73v-5.73M12 10.09v4.77M9.59 15.45a2.81 2.81 0 0 1-.45-1.54v-2.86a2.86 2.86 0 1 1 5.72 0M14.86 13v1A2.86 2.86 0 0 1 12 16.77a2.63 2.63 0 0 1-.89-.14M6.27 13v-1.9a5.61 5.61 0 0 1 .54-2.42"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.36 14.86a5.71 5.71 0 0 0 10 2.81M17.73 11.05v2.86a5.69 5.69 0 0 1-.39 2.09M7.91 7.05a5.71 5.71 0 0 1 8.14 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFireAlarm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 1.5v3.83h1.91v3.82h17.22V5.33h1.91V1.5H1.48zM5.3 9.15h13.4A3.83 3.83 0 0 1 14.87 13H9.13A3.83 3.83 0 0 1 5.3 9.15ZM15.83 5.33H3.39M12 15.85l-.96 3.82h1.92L12 23.5M5.3 15.85l-.95 3.82h1.91L5.3 23.5M18.7 15.85l-.96 3.82h1.91l-.95 3.83"
  }));
};

const SvgFireExtinguisher = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.14 5.64a4.55 4.55 0 0 1 4.55 4.55V22h-9.1V10.18a4.55 4.55 0 0 1 4.55-4.54Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.59 12.91h9.09v4.55H5.59zM8.32 2h3.64v3.64H8.32zM21.95 5.64l-5.45-.91V2.91L21.95 2v3.64zM11.95 3.82h4.55M8.32 3.82H3.8L1.04 7.46"
  }));
};

const SvgFireTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.25 20.75a2.25 2.25 0 0 1-4.5 0C9.75 19.25 12 17 12 17s2.25 2.25 2.25 3.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1 24v-2l3-7h16l3 7v2M7 23h10M8 1h8"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14 7V1h-4v6l-3.51 4.39A2.2 2.2 0 0 0 6 12.78 2.21 2.21 0 0 0 8.22 15h7.56A2.21 2.21 0 0 0 18 12.78a2.2 2.2 0 0 0-.49-1.39ZM8 10h5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFireTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 22.5H8.18l-1.91-4.77h11.46l-1.91 4.77zM4.36 17.73h15.28M23.45 22.5H.55M12 19.64v2.86M14.86 17.73H9.14l.95-10.5h3.82l.95 10.5zM8.18 7.23h7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.29 4.94a2.29 2.29 0 1 1-4.58 0C9.71 3.67 12 1.5 12 1.5s2.29 2.17 2.29 3.44Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFireTriangle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.13 3.41h-.26a1.48 1.48 0 0 0-1.26.7L1.73 18.32a1.48 1.48 0 0 0-.23.79A1.48 1.48 0 0 0 3 20.59h18a1.48 1.48 0 0 0 1.48-1.48 1.48 1.48 0 0 0-.23-.79L13.39 4.11a1.48 1.48 0 0 0-1.26-.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 14.86a2.86 2.86 0 1 1-5.72 0C9.14 13 12 10.09 12 10.09s2.86 2.91 2.86 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 16.14a.95.95 0 0 1-1.9 0c0-.64.95-1.59.95-1.59s.95.95.95 1.59Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgFireWood = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.7,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 14.89h13.36a3.82 3.82 0 0 1 3.82 3.81 3.82 3.82 0 0 1-3.82 3.82H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 10.11a4.77 4.77 0 1 1-9.54 0c0-2.83 1.68-4.37 3-5.93l.78 1.16.99-2.86s4.77 2.86 4.77 7.63Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 12.79a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.44 1.91-3.44s1.91 1.53 1.91 3.44Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFire = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.15 5.08a2.15 2.15 0 1 1-4.3 0C9.85 3.65 12 1.5 12 1.5s2.15 2.15 2.15 3.58ZM15.82 12V9.14H8.18V12l-3.57 1.43a1.9 1.9 0 0 0-1.2 1.77v5.39a1.9 1.9 0 0 0 1.91 1.91h13.36a1.9 1.9 0 0 0 1.91-1.91V15.2a1.9 1.9 0 0 0-1.2-1.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23v9a3 3 0 0 0 2.39 2.91 3 3 0 0 1 2.38 2.91v.43M3.41 15.82h6.68M15.82 15.82h4.77M6.27 9.14h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFireplaceHeat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 9.11h19.13V22.5H2.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 12.93h11.48v9.57H6.26zM.52 9.11h22.96M23.48 22.5H.52M10.09.5v2.87L6.26 6.24v2.87h11.48V6.24l-3.83-2.87V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 20.59a1.91 1.91 0 1 1-3.82 0c0-1.92 1.91-3.83 1.91-3.83s1.91 1.91 1.91 3.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFireplaceHeating = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 4.77,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 6.27h19.09V22.5H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.09a5.73 5.73 0 0 1 5.73 5.73v6.68H6.27v-6.68A5.73 5.73 0 0 1 12 10.09Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64a2.86 2.86 0 0 1-5.72 0c0-1.59 2.86-4.78 2.86-4.78s2.86 3.19 2.86 4.78Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.43 21.07a1.43 1.43 0 0 1-2.86 0c0-.79 1.43-2.39 1.43-2.39s1.43 1.6 1.43 2.39Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9"
  }));
};

const SvgFireplace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 5.32h19.09V22.5H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 11a5.73 5.73 0 0 1 5.73 5.73v5.77H6.27v-5.73A5.73 5.73 0 0 1 12 11ZM.55 5.32h22.9M3.41 1.5h17.18v3.82H3.41z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64a2.86 2.86 0 0 1-5.72 0c0-1.59 2.86-4.3 2.86-4.3s2.86 2.71 2.86 4.3ZM.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFirewall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 14.9h6.71v3.83H1.46zM15.83 14.9h6.71v3.83h-6.71z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 14.9h7.67v3.83H8.17zM12 18.73h6.71v3.83H12zM5.29 18.73H12v3.83H5.29zM.5 22.56h4.79v-3.83H1.46M22.54 18.73h-3.83v3.83h4.79"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.79 10.1a4.79 4.79 0 1 1-9.58 0C7.21 7.46 12 2.44 12 2.44l1 3.83 1.83-.87c1.01 1.69 1.96 3.53 1.96 4.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.92 13a1.92 1.92 0 0 1-3.84 0c0-1.06 1.92-2.88 1.92-2.88s1.92 1.8 1.92 2.88Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFirstAidBox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "first aid"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81zM9.14 12h5.72M12 9.14v5.72M1.5 17.73h21"
  })));
};

const SvgFishHook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.32v.21a8.5 8.5 0 0 0 3.49 6.7 5.73 5.73 0 1 1-9.22 4.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 16.77-2.87-2.86v2.86"
  }));
};

const SvgFist = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.17 10.86A8.16 8.16 0 0 1 14.33 19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 17.73,
    y: 2.48,
    width: 4.77,
    height: 7.64,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.95,
    y: 1.52,
    width: 4.77,
    height: 8.59,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.56 9.89A2.37 2.37 0 0 0 13 7.73V3.91a2.39 2.39 0 1 0-4.77 0v2.28",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 7.79V3.91a2.39 2.39 0 1 1 4.77 0v2.28",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 23.48v-1.91l-.75-.64c-2.57-2.58-4-5.12-4-8.77a6 6 0 0 1 1.73-4.22 6 6 0 0 1 4.22-1.75h2.2A2.33 2.33 0 0 1 12 8.52a2.33 2.33 0 0 1-2.33 2.34h-3.5M17.73 23.48v-1.91l.75-.64c2.57-2.58 4-5.12 4-8.77v-4.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFitnessBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a10.5 10.5 0 0 1-19.75 5 10.31 10.31 0 0 1-1.2-4v-.92A10.5 10.5 0 0 1 12 1.5h.92a10.31 10.31 0 0 1 4 1.2A10.46 10.46 0 0 1 22.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17 2.74a10.35 10.35 0 0 1 1.24 5A10.49 10.49 0 0 1 7.7 18.2 10.35 10.35 0 0 1 2.75 17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.92 1.54v.91A10.49 10.49 0 0 1 2.45 13h-.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlagMountain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 22.5H2.46l4.02-4.82L12 11.04l5.52 6.64 4.03 4.82zM12 1.5h5.73v4.77H12zM12 11.05V5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.28 15.51 2.76 2.22.96-.96 1.91 1.91 2.62-2.18"
  }));
};

const SvgFlag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.8 6.28a1.92 1.92 0 0 1-1.91 1.92H12a1.91 1.91 0 0 0-1.91 1.91V12H5.28V4.37h8.61a1.92 1.92 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m19.63 15.85 1.91 3.82H12a1.92 1.92 0 0 1-1.91-1.91v-7.65A1.92 1.92 0 0 0 12 12h9.56Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.8 6.28V12H12a1.92 1.92 0 0 1-1.91-1.91A1.91 1.91 0 0 1 12 8.2h1.91a1.92 1.92 0 0 0 1.89-1.92ZM1.46 23.5V3.41A1.91 1.91 0 0 1 3.37 1.5a1.91 1.91 0 0 1 1.91 1.91V23.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlame = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.15 5.08a2.15 2.15 0 1 1-4.3 0C9.85 3.65 12 1.5 12 1.5s2.15 2.15 2.15 3.58ZM15.82 13V9.14H8.18V13a7.61 7.61 0 0 0-4.77 7v.59a1.9 1.9 0 0 0 1.91 1.91h13.36a1.9 1.9 0 0 0 1.91-1.91V20a7.61 7.61 0 0 0-4.77-7ZM19.64 7.23v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23v9a3 3 0 0 0 2.39 2.91 3 3 0 0 1 2.38 2.91v.43M19.87 16.77H4.13M8.18 9.14h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlashlight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 20.59,
    cy: 12,
    rx: 1.91,
    ry: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 16.77h-3.82c-1 0-1.91-2.14-1.91-4.77s.86-4.77 1.91-4.77h3.82c-1.05 0-1.91 2.14-1.91 4.77s.86 4.77 1.91 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.64 16-8.41-1.14h-4.3c-.79 0-1.43-1.28-1.43-2.86s.64-2.86 1.43-2.86h4.3L15.64 8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.75 14.86c-.75 0-1.43-1.28-1.43-2.86S6 9.14 6.75 9.14M10.09 12H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlatScrewdriver = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.91 12 12 8.09l4.86-5.67a3.33 3.33 0 0 1 2.54-1.17 3.35 3.35 0 0 1 3.35 3.35 3.33 3.33 0 0 1-1.17 2.53ZM10.54 6.62l6.84 6.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.92 16.66A2.07 2.07 0 0 1 7 18.73v2.76H2.85v-2.76a2.07 2.07 0 0 1 2.07-2.07Z",
    transform: "rotate(45 4.918 19.077)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.96 10.04-6.84 6.84"
  }));
};

const SvgFlickr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlightDate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.11h21v13.36h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 3.39h21v5.73h-21zM6.27.52v5.73M12 .52v5.73M17.73.52v5.73M12 11.02v7.64M10.09 19.61l1.91-.95M13.91 19.61 12 18.66M12 13.89 8.18 15.8M12 13.89l3.82 1.91"
  }));
};

const SvgFlightDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 1.5h15.27a1.91 1.91 0 0 1 1.91 1.91v17.18a1.91 1.91 0 0 1-1.91 1.91H3.41v-21ZM12 5.32v7.63M10.09 13.91l1.91-.96M13.91 13.91 12 12.95M12 8.18l-3.82 1.91M12 8.18l3.82 1.91M7.23 17.73h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlippers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 14.86,
    width: 5.73,
    height: 7.64,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 1.5 1.91 16.23M9.14 17.73 11.05 1.5M11.05 1.5a2.81 2.81 0 0 1-4.77 0 2.82 2.82 0 0 1-4.78 0M6.27 9.14v5.72"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 14.86,
    y: 1.5,
    width: 5.73,
    height: 7.64,
    rx: 2.86,
    transform: "rotate(180 17.725 5.32)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 22.5 20.59 6.27M14.86 6.27 12.95 22.5M13 22.5a2.81 2.81 0 0 1 4.77 0 2.82 2.82 0 0 1 4.78 0M17.73 14.86V9.14"
  }));
};

const SvgFloppyDiskSave = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 22.5h-21v-21h15.27l5.73 5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 1.5h7.64v4.77H8.18zM6.27 17.73h11.45v4.77H6.27z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFloppyDisk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 22.5h-21v-21h17.18l3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5h9.55v4.77a1 1 0 0 1-1 1h-7.6a1 1 0 0 1-1-1V1.5h.05ZM6.27 14.86h11.45v7.64H6.27zM9.14 18.68h5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFloral = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.4 4a5 5 0 0 1 .48-.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.26 1.82a5 5 0 0 1 6.23.61",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.12 3.16a5 5 0 0 1 .48.84M16.6 20a5 5 0 0 1-.48.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.74 22.18a5 5 0 0 1-6.23-.61",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.88 20.84A5 5 0 0 1 7.4 20M11.4 11a5 5 0 0 1-4-7 5.2 5.2 0 0 1 1.9.63A5 5 0 0 1 11.4 11ZM2.81 12a5 5 0 0 1-.52-.85",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.81 9.28a5.06 5.06 0 0 1 .66-2.78 4.94 4.94 0 0 1 3-2.31",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.4 4a4.78 4.78 0 0 1 1 0M17 18a4.94 4.94 0 0 1-.4 2 5.2 5.2 0 0 1-1.9-.63A5 5 0 0 1 12.6 13a5 5 0 0 1 4.4 5ZM21.19 12a5 5 0 0 1 .52.85",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.19 14.72a5.06 5.06 0 0 1-.66 2.78 4.94 4.94 0 0 1-3 2.31",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.6 20a4.78 4.78 0 0 1-1 0M10.8 12a5 5 0 0 1-6.5 1.33A4.9 4.9 0 0 1 2.81 12a4.9 4.9 0 0 1 1.49-1.33A5 5 0 0 1 10.8 12ZM9.3 19.33a5.2 5.2 0 0 1-1.9.67 5 5 0 0 1 4-6.92 5 5 0 0 1-2.1 6.25ZM7.4 20a4.78 4.78 0 0 1-1 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.55 19.47A5 5 0 0 1 2 13.76",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.29 12.85a5 5 0 0 1 .52-.85M17 6a5 5 0 0 1-4.4 5 5 5 0 0 1 2.1-6.29A5.2 5.2 0 0 1 16.6 4a4.94 4.94 0 0 1 .4 2ZM21.19 12a4.9 4.9 0 0 1-1.49 1.33A5 5 0 0 1 13.2 12a5 5 0 0 1 6.5-1.33A4.9 4.9 0 0 1 21.19 12ZM16.6 4a4.78 4.78 0 0 1 1 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.45 4.53A5 5 0 0 1 22 10.24",
    style: {
      strokeDasharray: '1.93 1.93',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.71 11.15a5 5 0 0 1-.52.85",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFlourBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 19.64H5.32q-3.82-7.23 0-15.28h13.36q3.83 8.04 0 15.28ZM5.32 19.64h13.36l.96 2.86H4.36l.96-2.86zM4.36 1.5h15.28l-.96 2.86H5.32L4.36 1.5z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.35 16a2.36 2.36 0 0 1-1.78.8 2.39 2.39 0 1 1 2.16-3.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 8.18h7.64"
  }));
};

const SvgFlower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.81 12.69a5.72 5.72 0 0 1-7.9 4.57 5.9 5.9 0 0 1 .72-2.18 5.7 5.7 0 0 1 7.18-2.39ZM18.86 6.29a5.73 5.73 0 0 1 2.23.45 5.9 5.9 0 0 1-.72 2.18 5.7 5.7 0 0 1-7.18 2.39 5.7 5.7 0 0 1 5.67-5.02ZM12 13.37a5.71 5.71 0 0 1 1.52 7.43A5.65 5.65 0 0 1 12 22.5a5.65 5.65 0 0 1-1.52-1.7A5.71 5.71 0 0 1 12 13.37ZM20.37 15.08a5.9 5.9 0 0 1 .72 2.18 5.72 5.72 0 0 1-7.9-4.57 5.7 5.7 0 0 1 7.18 2.39ZM5.14 6.29a5.7 5.7 0 0 1 5.67 5 5.7 5.7 0 0 1-7.18-2.37 5.9 5.9 0 0 1-.72-2.18 5.73 5.73 0 0 1 2.23-.45ZM12 1.5a5.65 5.65 0 0 1 1.52 1.7A5.71 5.71 0 0 1 12 10.63a5.71 5.71 0 0 1-1.52-7.43A5.65 5.65 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFoldChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 14.85h17.22M3.39 14.85H5.3l13.4 7.65h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.61 14.85H18.7L5.3 22.5H3.39M7.22 11h9.57a1.91 1.91 0 0 1 1.91 1.91v1.91H5.3v-1.89A1.91 1.91 0 0 1 7.22 11ZM18.7.5v14.35M5.3 14.85V.5M5.3 2.41h13.39v3.83H5.3z"
  }));
};

const SvgFoldableChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 12h19.16v1a2.87 2.87 0 0 1-2.87 2.87H5.29A2.87 2.87 0 0 1 2.42 13v-1ZM5.29 2.42h13.42v4.79H5.29z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.71.5V12H5.29V.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 9.13h-1.92V12H2.42V9.13H.5M18.71 15.83 5.29 22.54v.96"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.29 15.83 13.42 6.71v.96"
  }));
};

const SvgFolderArchive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 9.14H4.36V1.5h5.73L12 3.41h7.64v5.73zM1.5 9.14h21L20.59 22.5H3.41L1.5 9.14z"
  }));
};

const SvgFolderArrowDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09v8.59M13.91 14.86l-3.82 3.82-3.82-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-8.59M8.18 14.86 12 11.04l3.82 3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderBlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 14.86,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.79 12.16-5.4 5.41M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderBroken = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 13.91 1.5 12V7.23h17.18V12l-2.86 1.91L12.96 12l-2.88 1.91L7.23 12l-2.87 1.91zM20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91v-4.77l2.86 1.91 2.87-1.91 2.85 1.91L13 15.82l2.87 1.91 2.86-1.91v4.77a1.92 1.92 0 0 0 1.86 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 12V7.23H5.32V1.5h9.54l1.87 1.91h5.77v17.18a1.91 1.91 0 0 1-3.82 0v-4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 12 2.86 1.91L7.23 12l2.85 1.91L12.96 12l2.86 1.91L18.68 12M1.5 15.82l2.86 1.91 2.87-1.91 2.85 1.91 2.88-1.91 2.86 1.91 2.86-1.91"
  }));
};

const SvgFolderCheck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.91 12.96-4.77 4.77-2.39-2.39"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderDollar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 17.73h3.34A1.43 1.43 0 0 0 12 16.3a1.43 1.43 0 0 0-1.43-1.44h-1a1.43 1.43 0 0 1-1.43-1.43A1.43 1.43 0 0 1 9.61 12H13M10.09 10.09V12M10.09 17.73v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91ZM9.14 14.86h1.91M12.95 14.86h1.91M5.32 14.86h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 12v6.68M10.09 13.91v4.77M6.27 15.82v2.86M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 14a2.05 2.05 0 0 0-2.08-2 2.1 2.1 0 0 0-1.74.9 2.1 2.1 0 0 0-1.73-.9 2.06 2.06 0 0 0-2.09 2c0 2.36 3.82 3.71 3.82 3.71s3.82-1.33 3.82-3.71Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderImage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 18.68h-7.37l.8-1.25 2.88-4.47 3.69 5.72z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m11.16 17.43-.8 1.25H6.27l2.87-4.29 2.02 3.04z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 11.52,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderInfo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 18.68h1.9M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M10.09 18.68h3.82M11.05 11.05h1.9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 13.91H12v4.77"
  }));
};

const SvgFolderLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.79 17.73 4.78-4.77 2.86 2.86 4.77-4.78"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderList = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 14.86H8.18M14.86 18.68H8.18M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91ZM4.36 18.68h1.91M4.36 14.86h1.91M14.86 11.05H8.18M4.36 11.05h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderLock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 14.86h5.73v3.82H7.23z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 11A1.91 1.91 0 0 1 12 13v1.91H8.18V13a1.91 1.91 0 0 1 1.91-2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.86h7.64M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderMusic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 17.73a1 1 0 1 1 1 .95 1 1 0 0 1-1-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 16.77v-5.73L8.18 12v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 20.59h4.77a1.9 1.9 0 0 0 1.91-1.91V4.36H10.09L9.14 1.5H1.5v17.18a1.9 1.9 0 0 0 1.91 1.91h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 16.77h7.64v5.73H8.18zM12 12a1.91 1.91 0 0 1 1.91 1.91v2.86h-3.82v-2.86A1.91 1.91 0 0 1 12 12ZM1.5 8.18h21"
  }));
};

const SvgFolderPlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.91 14.86-7.64 3.58v-7.16l7.64 3.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.86h7.64M10.09 11.05v7.63M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderQuestion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 13a1.91 1.91 0 0 1 1.91-1.9A1.9 1.9 0 0 1 12 13v.17a1.92 1.92 0 0 1-.56 1.35l-.79.79a1.9 1.9 0 0 0-.56 1.35v.16",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91ZM9.14 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderSearch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.52,
    cy: 14.39,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 19.64-2.86-2.87M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgFolderSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12v-1.91M12 19.64v-1.91M12 12v-1.91M12 19.64v-1.91M9.52 13.43l-1.65-.95M16.13 17.25l-1.65-.95M9.52 13.43l-1.65-.95M16.13 17.25l-1.65-.95M14.48 13.43l1.65-.95M7.87 17.25l1.65-.95M14.48 13.43l1.65-.95M7.87 17.25l1.65-.95M1.5 7.23h21"
  }));
};

const SvgFolderShareNetwork = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 3.41-.96-1.91H4.36v14.32h15.28V3.41H12zM4.36 7.23h15.28"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 20.59H.55M23.45 20.59h-9.54M12 15.82v2.86M7.23 11.05h1.91M11.05 11.05h1.9M14.86 11.05h1.91"
  }));
};

const SvgFolderSharePadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 7.23V3.41H12l-.96-1.91H4.36v14.32h10.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 20.59H.55M23.45 20.59h-9.54M12 15.82v2.86M16.77 12.95h5.73v3.82h-5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 9.14A1.91 1.91 0 0 1 21.55 11v2h-3.82v-2a1.91 1.91 0 0 1 1.91-1.86ZM4.36 7.23h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderSharing = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 14.86 5.72 2.87M14.86 12l-5.72 2.86M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgFolderShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 19.64a5.24 5.24 0 0 1-3.82-5v-2.52L12 11.05l3.82 1.07v2.48A5.24 5.24 0 0 1 12 19.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderSound = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05v7.63M15.82 12.95v3.82M8.18 12.95v3.82M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgFolderStar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m10.09 11.04 1.18 2.52 2.64.4L12 15.92l.45 2.76-2.36-1.3-2.36 1.3.45-2.76-1.91-1.96 2.64-.4 1.18-2.52z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderText = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 18.68h9.54M5.32 14.86h9.54M5.32 11.05h9.54M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderTransfer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 10.09-2.86 2.87h7.63M12 19.64l2.86-2.87H7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.27 14.86 3.82-3.82 3.82 3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91ZM10.09 11.05v8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 12.95,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 14.86A2.86 2.86 0 0 1 13 17.73v1H7.23v-1a2.86 2.86 0 0 1 2.86-2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderVideo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 11.05h5.73v6.68H7.23zM12.96 14.86l2.86 2.87h.95v-6.69h-.95l-2.86 2.87v.95z"
  }));
};

const SvgFolderVoice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 16.77h7.64M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderWifi = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.12 15.71a4.2 4.2 0 0 1 5.94 0M4.89 13.48a7.36 7.36 0 0 1 10.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolderXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 12 5.72 5.73M12.95 12l-5.72 5.73M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V7.23h17.18v13.36a1.92 1.92 0 0 0 1.91 1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v17.18a1.91 1.91 0 0 1-3.82 0V7.23H5.32V1.5h9.54l1.87 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFolders = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 21.59H4.37a2.87 2.87 0 0 1-2.87-2.87V3.41h7.65L12 7.24h10.54v11.48a2.87 2.87 0 0 1-2.87 2.87ZM12.02 3.41H23.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFoodStore = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 1.5H4.36L2.45 5.32v1.91a1.91 1.91 0 0 0 3.82 0 1.91 1.91 0 0 0 3.82 0 1.91 1.91 0 0 0 3.82 0 1.91 1.91 0 1 0 3.82 0 1.91 1.91 0 1 0 3.82 0V5.32ZM12 13.91a3.82 3.82 0 0 1 3.82 3.82v1H8.18v-1A3.82 3.82 0 0 1 12 13.91ZM12 12v1.91M6.27 18.68h11.46M.55 22.5h22.9M3.41 8.18V22.5M20.59 8.18V22.5M2.45 5.32h19.1M6.27 5.32v1.91M10.09 5.32v1.91M13.91 5.32v1.91M17.73 5.32v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFoot = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43.5a80.11 80.11 0 0 0 1.11 13.3l.06.38a3.55 3.55 0 0 1-.6 2.47 3.71 3.71 0 0 0-.57 2.47 4.09 4.09 0 0 0 4 3.38h2.62l1-.25a12.28 12.28 0 0 1 5.78 0l1 .25h2.79a1.92 1.92 0 0 0 1.85-2.5 2 2 0 0 0-1.92-1.31 7.56 7.56 0 0 1-3.43-.81l-4.33-2.18a2.89 2.89 0 0 1-1.58-2.76L11 .5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgForbiddenCity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 7.2c1.92-1 3.83-2.87 3.83-4.79h11.48c0 1.92 1.91 3.83 3.83 4.79M1.56 7.2H.52h22.96-1.05",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 11c1.27-.63 1-1.91 1.92-3.82h15.3c1 1.91.65 3.19 1.92 3.82M.52 11.02h22.96M6.26.5v1.91M17.74.5v1.91M3.39 11.02h17.22v7.65H3.39z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 14.85h3.83v3.83h-3.83zM6.26 14.85v3.82M17.74 14.85v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 18.67h19.13v3.83H2.43zM.52 22.5h22.96"
  }));
};

const SvgForkliftWarehouseVehicle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.5,
    cy: 19.61,
    r: 1.89,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.97,
    cy: 19.61,
    r: 1.89,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 11.08v8.53a1.9 1.9 0 1 0-3.79 0H5.39a1.89 1.89 0 1 0-3.78 0v-5.69h8.52A2.85 2.85 0 0 1 13 11.08Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 11.08H13a2.85 2.85 0 0 0-2.84 2.84H1.61V3.5h5.68a7.58 7.58 0 0 1 7.58 7.58ZM4.45 10.13v3.79M11.5 11.5 9.66 9.66M11.08 8.24l-2.37 2.37M14.87 13.92h3.79v5.68h-3.79zM18.66 19.61V3.5M23.39 19.61h-4.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgForklift = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 4.37,
    cy: 18.67,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 19.63a1.89 1.89 0 1 1-.25-1 2 2 0 0 1 .25 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 14.85v4.78a2 2 0 0 0-.25-1 1.92 1.92 0 0 0-3.57 1H7.24v-1a2.89 2.89 0 0 0-2.87-2.83V5.28h6.7l3.48 9.57ZM16.8 1.46v17.21M23.5 18.67h-6.7M4.37 14.85h6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFormatFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 12.95h13.36v5.73H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 18.68v3.82h17.19V6.27L16.77 1.5H4.36v11.46"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 6.27v.96h-5.73V1.5h.95l4.78 4.77z"
  }));
};

const SvgFourFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 3.43A1.91 1.91 0 0 1 13 1.52a1.91 1.91 0 0 1 1.91 1.91M14.86 4.39a1.91 1.91 0 0 1 1.91-1.91 1.9 1.9 0 0 1 1.91 1.91M18.68 12a1.92 1.92 0 0 1 1.91-1.91A1.91 1.91 0 0 1 22.5 12v2.87a9.87 9.87 0 0 1-.71 3.68l-.49 1.25a9.87 9.87 0 0 0-.71 3.68M8.18 23.48a4.57 4.57 0 0 0-1.35-3.26l-4.74-4.74a2 2 0 0 1-.59-1.43 2.07 2.07 0 0 1 .59-1.44 2 2 0 0 1 2.87 0l2.27 2.28V4.39a1.9 1.9 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91V12M11.05 12.02V3.43M14.86 12.02V3.43M18.68 12.02V4.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFrame360 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 8.09h2.93a2 2 0 0 1 2 2 2 2 0 0 1-2 1.91H3.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 15.91h2.93a2 2 0 0 0 2-2 2 2 0 0 0-2-1.91H3.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.95,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.05 14v-2A3.91 3.91 0 0 1 14 8.09",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.89,
    y: 8.09,
    width: 3.91,
    height: 7.82,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.25 5.16V1.25h3.91M5.16 22.75H1.25v-3.91M22.75 18.84v3.91h-3.91M18.84 1.25h3.91v3.91"
  }));
};

const SvgFreeze = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 23.5v-7.67M12 8.17V.5M15.83 1.46 12 5.29 8.17 1.46M8.17 22.54 12 18.71l3.83 3.83M8.17 12H.5M23.5 12h-7.67M22.54 15.83 18.71 12l3.83-3.83M1.46 8.17 5.29 12l-3.83 3.83M9.29 14.71l-4 4M18.71 5.29l-4 4M20.63 2.42v1.91M3.38 19.67v1.91M9.29 9.29l-4-4M18.71 18.71l-4-4M21.58 20.63h-1.91M4.33 3.38H2.42M15.83 12a3.82 3.82 0 1 1-1.12-2.71A3.86 3.86 0 0 1 15.83 12Z"
  }));
};

const SvgFrenchFries = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 17.73,
    rx: 3.82,
    ry: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5v10.18a25.88 25.88 0 0 1-3.82-.94V1.5ZM12 2.45V12a21.8 21.8 0 0 1-3.82-.35v-9.2ZM15.82 3.41v8.27A21.8 21.8 0 0 1 12 12V3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 10.09v1L20.17 22.5H3.83L2.45 11.05v-1c.65.24 1.29.46 1.91.65a25.88 25.88 0 0 0 3.82.94A21.8 21.8 0 0 0 12 12a21.8 21.8 0 0 0 3.82-.35 25.88 25.88 0 0 0 3.82-.94c.62-.16 1.26-.38 1.91-.62Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 1.5v9.24a25.88 25.88 0 0 1-3.82.94V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFreshBread = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 15.45c0 2.37-4.71 3.22-10.52 3.22s-10.52-.85-10.52-3.22S6.19 10.07 12 10.07s10.52 3 10.52 5.38ZM17.01 10.12l-1.1 4.39M12.18 10.29l-1.09 4.39M7.36 10.45l-1.1 4.4M1.48 18.67h21a3.83 3.83 0 0 1-3.78 3.83H5.3a3.83 3.83 0 0 1-3.83-3.83ZM7.22.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24M13 1.46c0 1.11-1 1.11-1 2.23s1 1.11 1 2.23S12 7 12 8.15M18.7.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFridge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5h9.55a1.91 1.91 0 0 1 1.91 1.91V22.5H5.32V3.41A1.91 1.91 0 0 1 7.23 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5h9.55a1.91 1.91 0 0 1 1.91 1.91v6.68H5.32V3.41A1.91 1.91 0 0 1 7.23 1.5ZM8.18 4.36v2.87M8.18 12.95v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFrog = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.8 4.83a3.23 3.23 0 0 0 0-.82 2.82 2.82 0 0 0-5.61.43 2.55 2.55 0 0 0 0 .39 4.53 4.53 0 0 1-.84 3.42A6.2 6.2 0 0 0 7.16 12c0 3.12 2.17 5.65 4.84 5.65s4.84-2.55 4.84-5.65a6.18 6.18 0 0 0-1.2-3.73 4.53 4.53 0 0 1-.84-3.44ZM16.71 1.62l2.82 3.76M19.53.68v4.7M23 18.51l-4.66-.67M21.67 21.17l-3.33-3.33",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.5 15.87 3.5-1.74a.87.87 0 0 1 1 .16.86.86 0 0 1 .09 1.1l-1.72 2.45.63 4.66M8.5 15.87 5 14.13a.87.87 0 0 0-1 .16.86.86 0 0 0-.09 1.1l1.72 2.45L5 22.5M1 18.51l4.66-.67M2.33 21.17l3.33-3.33M4.99 22.51l.67-4.67M4.47.68v4.7M7.29 1.62 4.47 5.38M22.36 1.62l-2.83 3.76.86 2.62a1.51 1.51 0 0 1 .08.51 1.61 1.61 0 0 1-1.62 1.62h-2.28M1.5 1.62l2.83 3.76L3.47 8a1.52 1.52 0 0 0-.09.51A1.62 1.62 0 0 0 5 10.09h2.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFrontDesk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.44 23.5v-7.65h19.13v7.65M23.48 15.85H.52"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.11a4.78 4.78 0 0 1 4.78 4.78v1H7.22v-1A4.78 4.78 0 0 1 12 10.11ZM9.13 1.5h5.74v5.74A2.87 2.87 0 0 1 12 10.11a2.87 2.87 0 0 1-2.87-2.87V1.5ZM9.13 5.33h7.65M12 12.98v-2.87M13.91 17.76v5.74M10.09 23.5v-5.74M10.09 20.63h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFrontVrVisual = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.08 16.62a33.25 33.25 0 0 1 5.92-.48 33.14 33.14 0 0 1 5.86.48M22.69 19.07V4.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.2 4.41v14.66c0 1 1.94 1.93 4.88 2.46V6.87C3.14 6.35 1.2 5.45 1.2 4.41 1.2 2.79 6 1.48 12 1.48s10.69 1.31 10.69 2.93c0 1-1.94 1.94-4.88 2.46v14.66c2.94-.53 4.88-1.43 4.88-2.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.2 4.41C1.2 2.79 6 1.48 12 1.48s10.69 1.31 10.69 2.93M6.08 11.73a34.23 34.23 0 0 1 5.92-.48 34.11 34.11 0 0 1 5.86.48M6 6.85a35 35 0 0 1 6-.48 35.08 35.08 0 0 1 6 .48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgFunnelSort = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2 2v3.64l8.18 10V22l3.64-1.82v-4.54l8.18-10V2H2z"
  }));
};

const SvgFunnel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.48v4.77l5.73 6.68v8.59l3.81-1.91v-6.68l5.73-6.68V1.48H7.23z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 4.34,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 5.3H7.23"
  }));
};

const SvgFurnace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 9.15,
    y: 1.48,
    width: 3.83,
    height: 21.04,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.8,
    y: 1.48,
    width: 3.83,
    height: 21.04,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.48,
    width: 3.83,
    height: 21.04,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.33 5.3h3.82M5.33 18.7h3.82M12.98 5.3h3.82M12.98 18.7h3.82M20.63 5.3h2.87M20.63 18.7h2.87"
  }));
};

const SvgGamePlan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 3.89,
    r: 2.39,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.45 7.23 3.82 3.82M6.27 7.23l-3.82 3.82M17.73 15.82l3.82 3.82M21.55 15.82l-3.82 3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.07 8.18-4.74 4.74a4.78 4.78 0 0 0 0 6.75l2.83 2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 8.18h2.86v2.86"
  }));
};

const SvgGamepad = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.34 4.21A4.86 4.86 0 0 0 14 6.14h-4a4.86 4.86 0 0 0-4.34-1.93 5 5 0 0 0-4.41 5.07v7A3.5 3.5 0 0 0 8 17.61c.42-1.05.94-2.37 1.42-3.66h5.16c.48 1.29 1 2.61 1.42 3.66a3.5 3.5 0 0 0 6.75-1.29v-7a5 5 0 0 0-4.41-5.11ZM18.84 12ZM18.84 8.09ZM20.79 10.05ZM16.89 10.05ZM7.11 12ZM7.11 8.09ZM9.07 10.05ZM5.16 10.05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGasoline = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 1.5h13.36v8.59H1.48zM2.43 10.09h11.45V22.5H2.43zM15.8 22.5H.52"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.24 17.56a2.08 2.08 0 0 1-4.16 0c0-1.78 2.08-3.86 2.08-3.86s2.08 2.08 2.08 3.86ZM5.3 4.36v2.87M8.16 4.36v2.87M11.02 4.36v2.87M13.89 10.09h2.86A1.92 1.92 0 0 1 18.66 12v7.64a1.91 1.91 0 0 0 1.91 1.91 1.92 1.92 0 0 0 1.91-1.91V6.27l-3.82-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.13 4.93a1.87 1.87 0 0 0-.56 1.34 1.92 1.92 0 0 0 1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGateLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 2.42h19.17v19.17H2.42z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13a3.83 3.83 0 0 1 3.83 3.83v4.79H8.17v-4.83A3.83 3.83 0 0 1 12 13ZM.5 8.17h23M.5 21.58h23M6.25 5.29v2.88M10.08 5.29v2.88M13.92 5.29v2.88M17.75 5.29v2.88M18.71 12.96v2.87M5.29 12.96v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGearWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.96,
    cy: 14.93,
    r: 2.88,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.47 16.37-.82.47M15.28 13.01l-.82.48M9.47 16.37l-.82.47M15.28 13.01l-.82.48M9.47 13.49l-.82-.48M15.28 16.84l-.82-.47M9.47 13.49l-.82-.48M15.28 16.84l-.82-.47M11.96 12.05v-.96M11.96 18.76v-.96M11.96 12.05v-.96M11.96 18.76v-.96M1.41 1.5h21.1v21.1H1.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 7.25H1.41V1.5h21.1v5.75zM4.29 4.38h1.92M8.13 4.38h1.92M11.96 4.38h1.92"
  })));
};

const SvgGear = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 12a8.12 8.12 0 0 0-.15-1.57l2.09-1.2-2.87-5-2.08 1.2a8.65 8.65 0 0 0-2.72-1.56V1.5H9.14v2.41a8.65 8.65 0 0 0-2.72 1.56l-2.08-1.2-2.87 5 2.09 1.2a8.29 8.29 0 0 0 0 3.14l-2.09 1.2 2.87 5 2.08-1.2a8.65 8.65 0 0 0 2.72 1.56v2.33h5.72v-2.41a8.65 8.65 0 0 0 2.72-1.56l2.08 1.2 2.87-5-2.09-1.2a8.12 8.12 0 0 0 .15-1.53Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGeography = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.88,
    cy: 10.18,
    r: 7.47,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12.88,
    cy: 10.18,
    rx: 2.8,
    ry: 7.47,
    transform: "rotate(-45 12.879 10.185)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.21 16.69a29.13 29.13 0 0 0 5.65-4.53 28.86 28.86 0 0 0 4.53-5.66M6.38 13.86A29.45 29.45 0 0 1 10.9 8.2a29.06 29.06 0 0 1 5.66-4.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m18.17 15.47 2.64 2.64A11.21 11.21 0 0 1 5 2.26L7.6 4.9M12.88 21.39v1.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGiftBox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h21v4.77h-21zM2.45 13.91h19.09v8.59H2.45zM12 9.14V4.25A2.75 2.75 0 0 0 9.25 1.5a2 2 0 0 0-2 2A2 2 0 0 0 7.82 5L12 9.1H6.12a2.71 2.71 0 0 1-2.71-2.71 2 2 0 0 1 2-2A4.37 4.37 0 0 1 8.5 5.63Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.18V4.29a2.75 2.75 0 0 1 2.75-2.75 2 2 0 0 1 2 2A2 2 0 0 1 16.18 5L12 9.14h5.84a2.71 2.71 0 0 0 2.71-2.71 2 2 0 0 0-2-2 4.37 4.37 0 0 0-3.05 1.24ZM12 22.5V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGiftSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.39 10.09h-.16a1.9 1.9 0 0 1-1.91-1.91 1.91 1.91 0 0 1 1.91-1.91h.16a1.9 1.9 0 0 1 1.35.56l1.35 1.35-1.35 1.35a1.9 1.9 0 0 1-1.35.56ZM12.79 6.27H13a1.91 1.91 0 0 1 1.91 1.91A1.9 1.9 0 0 1 13 10.09h-.16a1.9 1.9 0 0 1-1.35-.56l-1.4-1.35 1.35-1.35a1.9 1.9 0 0 1 1.35-.56Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 1.5v21M5.32 8.18H1.5M14.86 8.18h7.64M12.95 13.91l-2.86-5.73M7.23 13.91l2.86-5.73"
  }));
};

const SvgGifts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 12.98V9.16H2.46v13.36h11.45M1.5 5.34h13.36v3.82H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 12.98H22.5v9.55H11.05zM11.05 17.75H22.5M16.77 12.02v11.46M5.32 1.52a2.86 2.86 0 0 1 2.86 2.87v1H5.32a1.91 1.91 0 0 1-1.91-1.96 1.91 1.91 0 0 1 1.91-1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.52H13v1a2.86 2.86 0 0 1-2.86 2.86 1.91 1.91 0 0 1-1.96-1.95 1.91 1.91 0 0 1 1.91-1.91Z",
    transform: "rotate(180 10.57 3.43)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGingerbreadMan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.52 8.18h4.16a1.91 1.91 0 0 1 0 3.82h-2.86v8.59a1.91 1.91 0 0 1-3.82 0 1.91 1.91 0 0 1-3.82 0V12H5.32a1.91 1.91 0 0 1 0-3.82h4.16a3.82 3.82 0 1 1 5 0ZM12 15.82v4.77M11.05 12.95h1.9M7.23 8.18V12M16.77 8.18V12M8.18 18.68h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlasses3D = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.91H1.5v8.59h8.65l.63-1.95a1.29 1.29 0 0 1 1.22-.91 1.3 1.3 0 0 1 1.24.88l.67 2h8.59v-8.61Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 18.68H5.32v-.95h2.86a1 1 0 0 1-.95.95ZM18.68 18.68h-1.91a1 1 0 0 1-.95-.95h2.86ZM1.5 13.91V5.32A3.82 3.82 0 0 1 5.32 1.5h1.91M22.5 13.91V5.32a3.82 3.82 0 0 0-3.82-3.82h-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlassesHelmet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 7.23V2.45M16.77 7.23V2.45M17.73 22.5h-2.44a1.92 1.92 0 0 1-1.82-1.31l-.21-.65a1.32 1.32 0 0 0-1.26-.9 1.32 1.32 0 0 0-1.26.9l-.21.65a1.92 1.92 0 0 1-1.82 1.31H6.27a2.86 2.86 0 0 1-2.86-2.86v-4.78h17.18v4.78a2.86 2.86 0 0 1-2.86 2.86ZM23.45 11.05H.55M12 1.5a8.59 8.59 0 0 1 8.59 8.59v1H3.41v-1A8.59 8.59 0 0 1 12 1.5ZM12 8.18V1.5"
  }));
};

const SvgGlassesMask = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 5.82,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 5.82,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.4 3.5a3.82 3.82 0 0 1 5.2 0M22.5 23.48V6.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlassesVirtualReality = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 6.14h3.9a2 2 0 0 1 2 2v7.82a2 2 0 0 1-2 1.95h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.07H3.21a2 2 0 0 1-2-1.95V8.09a2 2 0 0 1 2-1.95h13.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.14,
    cy: 12,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.86,
    cy: 12,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlassesVision = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.33 9.15h3.84a1.92 1.92 0 0 1 1.92 1.92v1a3.83 3.83 0 0 1-3.83 3.83h-1A2.87 2.87 0 0 1 2.42 13v-1.94a1.92 1.92 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.79 9.15h1A3.83 3.83 0 0 1 21.58 13v1a1.92 1.92 0 0 1-1.92 1.92h-3.83A1.92 1.92 0 0 1 13.91 14v-2a2.87 2.87 0 0 1 2.88-2.85Z",
    transform: "rotate(180 17.75 12.5)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.08 12a1.92 1.92 0 0 1 3.84 0M23.5 10.1h-1.92M2.42 10.1H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 13.92H8A2.07 2.07 0 0 1 10.08 16v1.53A3.11 3.11 0 0 1 7 20.63H5.52a3.11 3.11 0 0 1-3.11-3.11v-3.6h.01ZM16 13.92h5.6v3.6a3.11 3.11 0 0 1-3.11 3.11H17a3.11 3.11 0 0 1-3.11-3.11V16A2.07 2.07 0 0 1 16 13.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.08 16.79a1.92 1.92 0 0 1 3.84 0M.5 13.92h1.92M23.5 13.92h-1.92M1.46 13.92l2.91-8A3.82 3.82 0 0 1 8 3.38h2.1M22.54 13.92l-2.91-8A3.83 3.83 0 0 0 16 3.37h-2.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlazedDonut = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12a3.82 3.82 0 0 0-7.64 0M8.18 12a3.82 3.82 0 0 0 7.64 0M8.18 12c-3.34 1.91-3.34-2.86-6.68 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 12c3.34-2.86 3.34 1.91 6.68 0M22.5 12c-3.34 1.91-3.34-2.86-6.68 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12c3.34-2.86 3.34 1.91 6.68 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 7.23h1.91M9.14 5.32h1.91M13.91 4.36h1.91M16.77 8.18h1.91"
  }));
};

const SvgGlobalMegaphone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 14.89h1.91v3.81h-1.91a1.91 1.91 0 0 1-1.91-1.91 1.91 1.91 0 0 1 1.91-1.9ZM17.73 14.89l4.77-1.91v7.63l-4.77-1.91v-3.81zM17.73 23.48l-1.91-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.16 13.91a9.56 9.56 0 1 0-4.16 5.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.79 4.86A9.58 9.58 0 0 0 7.5 7.52a9.35 9.35 0 0 0 3.55.68 9.3 9.3 0 0 0 3.54-.68 9.58 9.58 0 0 0 3.71-2.66M3.79 17.27a9.55 9.55 0 0 1 3.71-2.65 9.45 9.45 0 0 1 7.09 0 7 7 0 0 1 .74.33",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.42 15.5c.07-.29.12-.58.17-.88a22.07 22.07 0 0 0 .27-3.55 22.07 22.07 0 0 0-.27-3.55c-.57-3.52-1.94-6-3.54-6s-3 2.48-3.55 6a22.07 22.07 0 0 0-.27 3.55 22.07 22.07 0 0 0 .27 3.55c.57 3.51 1.94 6 3.55 6 1.16 0 2.21-1.3 2.91-3.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlobalMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.64 6.27h3.91v12.41H2.46V6.27h3.9M12 22.5v-3.82M16.77 22.5H7.23"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23h11.46"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 7.23,
    rx: 1.91,
    ry: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlobalPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 17a10.27 10.27 0 0 0-5.2.36 10.34 10.34 0 0 0-3.92 2.33M4.79 4.36A10.46 10.46 0 0 0 12 7.23a10.46 10.46 0 0 0 7.21-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12c0-5.8-1.71-10.5-3.82-10.5S8.18 6.2 8.18 12a25.25 25.25 0 0 0 .53 5.31c.66 3.11 1.89 5.19 3.29 5.19M16.77 18.68h5.73v3.82h-5.73zM19.64 14.86a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.91a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 22.33a10.94 10.94 0 0 1-1.91.17A10.5 10.5 0 1 1 22.5 12h-21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlobalWarming = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 16.18V12a2.87 2.87 0 0 0-5.73 0v4.18a3.77 3.77 0 0 0-1 2.5 3.82 3.82 0 1 0 6.69-2.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 13v4.78M21.6 16.26A10.5 10.5 0 0 0 4.32 4.84a10.5 10.5 0 0 0 11.92 16.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.6 16.46-.14-.05a10.51 10.51 0 0 0-11.14 2.75M4.32 4.84A10.47 10.47 0 0 0 12 8.18a10.47 10.47 0 0 0 7.68-3.34",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.4 16.76a2 2 0 0 0 .06-.35 26.33 26.33 0 0 0 .36-4.41 26.33 26.33 0 0 0-.36-4.41c-.58-3.45-1.81-5.87-3.26-6.08h-.4c-1.45.21-2.68 2.63-3.26 6.08A26.33 26.33 0 0 0 8.18 12a26.33 26.33 0 0 0 .36 4.41c.58 3.45 1.81 5.87 3.26 6.08h.4c1.06-.15 2-1.51 2.67-3.58M1.5 12h14.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGlobePlant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.45,
    r: 6.05,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.83 13.73h-4.97M12.43 14.16l2.13 2.16v1.7l-3.42 3.43v-2.54l-1.73-1.73v-2.59H12l.43-.43.43-.43.87-.87V9.41M6 2.5h1.68A4.32 4.32 0 0 1 12 6.82h-1.73A4.32 4.32 0 0 1 6 2.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.32 2.5H18a4.32 4.32 0 0 1-4.32 4.32H12a4.32 4.32 0 0 1 4.32-4.32Z",
    transform: "rotate(180 15.025 4.66)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 9.41V6.82"
  }));
};

const SvgGlobeWarming = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.64,
    r: 6.36,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.14 12.82h-5.23M12.46 13.27l2.24 2.27v1.8l-3.61 3.61v-2.68l-1.82-1.82v-2.72H12l.46-.46.45-.45.91-.91V8.27M6.55 1.91c2.72 2.73-1.82 2.73.9 5.45M12 1c2.73 2.73-1.82 2.73.91 5.45M17.45 1.91c2.73 2.73-1.81 2.73.91 5.45"
  }));
};

const SvgGlove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.55 8.18v10.5H7.18l-5.13-5.13a2 2 0 0 1 2.86-2.87l.64.65a1 1 0 0 0 1.63-.68V8.46a6.9 6.9 0 0 1 6.9-7 6.7 6.7 0 0 1 6.47 6.68ZM7.18 18.68h13.36v3.82H7.18z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGloves = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11 18.68h11.5v1.91a1.91 1.91 0 0 1-1.91 1.91H13a1.91 1.91 0 0 1-2-1.91v-1.91ZM22.5 10.57v8.11H11.05l-1.72-2.29a5.12 5.12 0 0 1-.81-1.53A5.61 5.61 0 0 1 8.18 13a1.83 1.83 0 0 1 .57-1.34 1.87 1.87 0 0 1 1.34-.56 1.89 1.89 0 0 1 1.35.56A1.87 1.87 0 0 1 12 13v-2.43a5.25 5.25 0 1 1 10.5 0ZM12 14.86v-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 18.68H6.27a1.92 1.92 0 0 1-1.91-1.91v-1.91h4.16a5.12 5.12 0 0 0 .81 1.53Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.67 5.56a5.25 5.25 0 0 0-3.67 5V13a1.87 1.87 0 0 0-.56-1.34 1.89 1.89 0 0 0-1.35-.56 1.87 1.87 0 0 0-1.34.56A1.83 1.83 0 0 0 8.18 13a5.61 5.61 0 0 0 .34 1.91H4.36l-1.71-2.34A5.67 5.67 0 0 1 1.5 9.14a1.91 1.91 0 0 1 1.91-1.91 1.87 1.87 0 0 1 1.34.56 1.84 1.84 0 0 1 .57 1.35V6.75a5.25 5.25 0 0 1 9-3.71 5 5 0 0 1 1.35 2.52ZM5.32 11.05V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGoldenGateBridge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5.52v22.96M3.41 15.83h3.83M3.41 19.65h3.83M3.41 2.43h3.83M3.41 6.26h3.83M9.15 15.83H23.5M9.15 19.65H23.5M7.24 23.48V.52M7.24.52C7.24 8.17 16.8 12 23.5 12M11.07 8.17v5.74M15.85 11.04v2.87M19.67 12v1.91"
  }));
};

const SvgGolfCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.37,
    cy: 19.65,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.67,
    cy: 19.65,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.28 19.65h3.83v-3.82a1.92 1.92 0 0 0-1.91-1.92H1.46v5.74M16.76 19.65v-6.69l5.74 1.91v4.78h-1.91M16.76 19.65H9.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.37 13.91V2.44h11.48l1.91 10.52M.5 2.43h16.26M11.98 12.96l.95-3.83M16.76 12.96l-3.83-1.92"
  }));
};

const SvgGondola = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M23.5 1.46ZM7.21 8.17h9.58A2.88 2.88 0 0 1 19.67 11v11.5H4.33V11a2.88 2.88 0 0 1 2.88-2.83ZM12.96 5.29h-1.92L8.17 1.46h7.66l-2.87 3.83zM12 8.17V5.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 12.96h5.75v9.58H9.13zM4.33 16.79h4.8M14.88 16.79h4.79M9.13 12.96h-4.8M18.71 12.96h-4.79"
  }));
};

const SvgGoogleDrive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 2.46h7.64l6.68 13.36-2.86 5.73H4.36L1.5 15.82 8.18 2.46zM8.18 2.45l7.64 13.37M22.5 15.82H8.18M4.36 21.55 12 9.14"
  }));
};

const SvgGooglePlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.2 12h6.69a6.71 6.71 0 1 1-2.28-5M23.5 12h-5.74M20.63 14.87V9.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGovernmentBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.35 8.15h15.3M12 3.37a4.78 4.78 0 0 1 4.78 4.78H7.22A4.78 4.78 0 0 1 12 3.37ZM12 .5v2.87M10.09 11.98V22.5M13.91 11.98V22.5M17.74 8.15V22.5M6.26 8.15V22.5M17.74 11.02h4.78V22.5h-4.78zM1.48 11.02h4.78V22.5H1.48zM.52 22.5h22.96M3.39 14.85h2.87M3.39 18.67h2.87M17.74 14.85h2.87M17.74 18.67h2.87"
  }));
};

const SvgGraduate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21.5 9.15-9.5 5.7-9.5-5.7 9.5-5.7 9.5 5.7zM18.65 10.88v4.92"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.65 15.8v.95c0 2.1-3 3.8-6.65 3.8s-6.65-1.7-6.65-3.8v-5.87M12 9.15l3.8 3.8M15.8 16.75v-3.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGraduation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12a9.55 9.55 0 0 1 9.55 9.55v1H2.45v-1A9.55 9.55 0 0 1 12 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5h9.55v5.73A4.77 4.77 0 0 1 12 12a4.77 4.77 0 0 1-4.77-4.77V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 4.36 4.77.96 4.77-1.25M3.41 1.5h17.18M16.77 12.95l-3.42 3.43M10.65 16.38l-3.42-3.43"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGrapes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 15.82a2.73 2.73 0 0 1-.17 1 2.82 2.82 0 0 1-2.52 1.89h-.17a2.86 2.86 0 0 1-2.87-2.86 2.78 2.78 0 0 1 .17-1A2.81 2.81 0 0 0 9 13h.35a2.81 2.81 0 0 0 2.52 1.89 2.78 2.78 0 0 1 .13.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 15.82a2.86 2.86 0 0 1-2.87 2.86h-.17a2.82 2.82 0 0 1-2.52-1.89 2.73 2.73 0 0 1-.17-1 2.78 2.78 0 0 1 .17-1A2.81 2.81 0 0 0 14.69 13H15a2.81 2.81 0 0 0 2.52 1.89 2.78 2.78 0 0 1 .21.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64a2.86 2.86 0 0 1-5.72 0 2.57 2.57 0 0 1 .17-1 2.82 2.82 0 0 0 2.52-1.89h.34a2.82 2.82 0 0 0 2.52 1.89 2.57 2.57 0 0 1 .17 1ZM9.14 12A2.52 2.52 0 0 1 9 13a2.81 2.81 0 0 1-2.52 1.89h-.21a2.86 2.86 0 0 1 0-5.72h.17A2.85 2.85 0 0 0 9 11a2.52 2.52 0 0 1 .14 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.18a2.78 2.78 0 0 1-.17 1A2.84 2.84 0 0 1 9.31 11H9a2.85 2.85 0 0 1-2.56-1.85 2.78 2.78 0 0 1-.17-1 2.87 2.87 0 0 1 5.73 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 12a2.52 2.52 0 0 1-.17 1 2.81 2.81 0 0 1-2.52 1.89h-.34A2.81 2.81 0 0 1 9.31 13a2.8 2.8 0 0 1 0-1.92 2.84 2.84 0 0 0 2.52-1.89h.34A2.84 2.84 0 0 0 14.69 11a2.52 2.52 0 0 1 .17 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 8.18a2.78 2.78 0 0 1-.17 1A2.85 2.85 0 0 1 15 11h-.35a2.84 2.84 0 0 1-2.52-1.89 2.78 2.78 0 0 1-.17-1 2.87 2.87 0 0 1 5.73 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 12a2.86 2.86 0 0 1-2.86 2.86h-.17A2.81 2.81 0 0 1 15 13a2.65 2.65 0 0 1 0-2 2.85 2.85 0 0 0 2.52-1.89h.17a2.86 2.86 0 0 1 2.9 2.89ZM8.18 1.5A3.82 3.82 0 0 1 12 5.32v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGraphChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 14.86h3.82v7.64H2.45zM17.73 9.14h3.82V22.5h-3.82zM10.09 1.5h3.82v21h-3.82zM.55 22.5h22.9"
  }));
};

const SvgGraphChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.75 11.98 3.82-3.82 2.86 2.86 3.82-3.81"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGraphDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.05v6.68M12 12.95v4.78M8.18 14.86v2.87M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgGraphFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 17.73 3.81-3.82 1.92 1.91L16.77 12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgGraphLinesClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 10.09v6.68M12 12v4.77M8.18 13.91v2.86M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGraphLinesFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 12v6.68M12 13.91v4.77M8.18 15.82v2.86M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgGraphMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.79 13.89 4.78-4.78 2.86 2.87 4.77-4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreatBuddha = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 18.68,
    width: 15.27,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.09a5.73 5.73 0 0 1 5.73 5.73v2.86H6.27v-2.86A5.73 5.73 0 0 1 12 10.09Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 3.41,
    width: 5.73,
    height: 6.68,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a1 1 0 0 1 1 1v1h-2v-1a1 1 0 0 1 1-1ZM7.23 18.68l3.82 3.82M16.77 18.68l-3.82 3.82M10.09 18.68v-2.86l4.89-4.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreatWall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 13.91h9.55v8.59H1.5zM1.5 11.05v2.86M6.27 11.05v2.86M11.05 11.05v2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 19.64a1 1 0 0 1 1 1v1.86H5.32v-1.91a1 1 0 0 1 1-1ZM14.86 12V3.41h7.64V12M14.86.55v2.86M18.68.55v2.86M22.5.55v2.86M11.05 23.45c0-3.81 11.45-5.72 11.45-11.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 17.73c0-3.82 11.45-4.78 11.45-10.5M11.05 9.14c1.54-1.1 3.81-2 3.81-3.82M18.68 8.18V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreekChurch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.12 17.73a1 1 0 0 1 1 1v3.83H8.17v-3.87a1 1 0 0 1 1-1ZM14.87 17.73a1 1 0 0 1 1 1v3.83h-1.95v-3.87a1 1 0 0 1 .95-.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.23a7.67 7.67 0 0 1 7.67 7.67v8.63H4.33V13.9A7.67 7.67 0 0 1 12 6.23ZM12 .48v5.75M10.08 2.4h3.84M2.42 14.85h19.16M.5 22.52h23M11.04 11.98h1.92M14.88 11.98h1.91M7.21 11.98h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenBattery = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 15.82v-2.86H1.5v9.54h19.09v-2.86h1.91v-3.82h-1.91zM4.36 1.5h2.19A5.45 5.45 0 0 1 12 7H9.82a5.45 5.45 0 0 1-5.46-5.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.45 2.45h2.18a5.45 5.45 0 0 1-5.45 5.45H12a5.45 5.45 0 0 1 5.45-5.45Z",
    transform: "rotate(180 15.82 5.18)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12.95V6.27M5.32 14.86v5.73M9.14 14.86v5.73M12.95 14.86v5.73"
  }));
};

const SvgGreenBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.57 22.5H5.34a1.91 1.91 0 0 1-1.91-1.91 1.92 1.92 0 0 1 1.91-1.91h16.23M19.66 18.68v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.66 22.5H5.34a1.91 1.91 0 0 1-1.91-1.91V3.41A1.91 1.91 0 0 1 5.34 1.5h15.27v17.18h-.95Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.2 6.27h2.46a4.23 4.23 0 0 1 4.23 4.23V13h-2.46A4.23 4.23 0 0 1 8.2 8.73V6.27ZM16.8 14.86l-5.73-5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 1.5 4.36 4.36v16.23l1.91 1.91h11.46l1.91-1.91V4.36L17.73 1.5H6.27zM4.36 1.5h15.28M4.36 5.32h12.41M4.36 18.68h12.41"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 9.14H11a3.29 3.29 0 0 1 3.29 3.29v1.91h-1.87A3.29 3.29 0 0 1 9.14 11V9.14ZM15.82 15.82l-1.91-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 20.59H7.23M3.41 20.59H1.5v-5.73h2.86l2-3.38a2.87 2.87 0 0 1 2.46-1.39h5.38a2.86 2.86 0 0 1 2.45 1.39l2 3.38h1a2.87 2.87 0 0 1 2.86 2.87v2.86h-2.87M18.68 14.86H8.18M12.95 12v2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.64 1.5h2.46V4a4.23 4.23 0 0 1-4.24 4.18H3.41V5.73A4.23 4.23 0 0 1 7.64 1.5Z",
    transform: "rotate(-180 6.75 4.84)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 10.09 5.73-5.73"
  }));
};

const SvgGreenCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5h1.91v5.73h-1.91a1.91 1.91 0 0 1-1.91-1.91V3.41a1.91 1.91 0 0 1 1.91-1.91ZM21.55 2.45h-3.82M21.55 6.27h-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 13.43a9.07 9.07 0 1 1-9.07-9.07h2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 10.09h2.45a4.23 4.23 0 0 1 4.23 4.23v2.46h-2.46a4.23 4.23 0 0 1-4.23-4.23v-2.46h.01ZM15.82 18.68l-5.73-5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenContainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36zM2.45 1.5h19.1M4.36 5.32h15.28M4.36 18.68h15.28M2.45 22.5h19.1M2.45 12h3.82M17.73 12h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 8.18h2.46a4.23 4.23 0 0 1 4.23 4.23v2.46h-2.46a4.23 4.23 0 0 1-4.23-4.23V8.18ZM16.77 16.77l-5.72-5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenFactory = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h4.77v21H2.45zM.55 1.5h8.59M12 17.73h4.77v4.77H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 12v10.5H7.23v-8.59L14.86 12v1.91L21.55 12z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.18 1.5h2.46V4a4.23 4.23 0 0 1-4.23 4.23H13v-2.5a4.23 4.23 0 0 1 4.18-4.23Z",
    transform: "rotate(-180 16.295 4.84)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.05 10.09 5.72-5.73M.55 22.5h22.9"
  }));
};

const SvgGreenGas = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 1.5h4.77v3.82H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 4.36v16.23a1.91 1.91 0 0 1-1.91 1.91H6.27a1.91 1.91 0 0 1-1.91-1.91V7.23a1.91 1.91 0 0 1 1.91-1.91H13l1.35-2a1.91 1.91 0 0 1 1.59-.85h1.84a1.92 1.92 0 0 1 1.86 1.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 5.32a3.28 3.28 0 0 0 2.31.95h4.38M8.18 10.09h2.46a4.23 4.23 0 0 1 4.23 4.23v2.46h-2.46a4.23 4.23 0 0 1-4.23-4.23v-2.46ZM16.77 18.68l-5.72-5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1 10.5 11-9 11 9M8 10.5h2.57A4.43 4.43 0 0 1 15 14.93v2.57h-2.57A4.43 4.43 0 0 1 8 13.07V10.5ZM17 19.5l-6-6"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 7.5v15H4v-15M22 22.5H2"
  }));
};

const SvgGreenLightbulb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 9.14a7.64 7.64 0 1 0-13.15 5.27 6.2 6.2 0 0 1 1.69 4.27h7.64a6.07 6.07 0 0 1 1.67-4.24 7.59 7.59 0 0 0 2.15-5.3ZM8.18 18.68h7.64v1.91a1.91 1.91 0 0 1-1.91 1.91h-3.82a1.91 1.91 0 0 1-1.91-1.91v-1.91ZM.55 9.14h1.9M3.41 1.5h1.91M3.41 16.77h1.91M23.45 9.14h-1.9M20.59 16.77h-1.91M20.59 1.5h-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 7.79h2.46A4.23 4.23 0 0 1 15.34 12v2.46h-2.45a4.23 4.23 0 0 1-4.23-4.23V7.79Z",
    transform: "rotate(45 12.003 11.122)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 18.55v-8.46"
  }));
};

const SvgGreenTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 9.14V1.5H9.14v7.64l-7.23 9.93a2.14 2.14 0 0 0-.41 1.27 2.16 2.16 0 0 0 2.16 2.16h16.68a2.16 2.16 0 0 0 2.16-2.16 2.14 2.14 0 0 0-.41-1.27ZM7.23 1.5h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 13H12a3.29 3.29 0 0 1 3.29 3.29v1.91h-1.91a3.29 3.29 0 0 1-3.29-3.29V13ZM16.77 19.64l-1.91-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenThought = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.54 23.5a24.47 24.47 0 0 1 2.29-9.9 8.62 8.62 0 0 0 .73-3.25 8.71 8.71 0 0 0-8.31-8.85 8.61 8.61 0 0 0-8.9 8.61v.58l-1.77 3.89a1.49 1.49 0 0 0-.15.66A1.57 1.57 0 0 0 4 16.8h.35v1a2.86 2.86 0 0 0 2.87 2.87h1.91v2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 7.24h2.46a4.23 4.23 0 0 1 4.23 4.23v2.46h-2.45A4.23 4.23 0 0 1 9.13 9.7V7.24ZM17.74 15.85 12 10.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGreenWater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.35 15.15a7.35 7.35 0 0 1-14.7 0C4.65 8.85 12 1.5 12 1.5s7.35 7.35 7.35 13.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.5 9.09h2.57a4.43 4.43 0 0 1 4.43 4.43v2.57h-2.57a4.43 4.43 0 0 1-4.43-4.43V9.09Z",
    transform: "rotate(45 12 12.58)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 20.36V11.5"
  }));
};

const SvgGrid = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.47 4.34h23.02M.47 12.01h23.02M.47 19.68h23.02M19.66.5v23.02M11.98.5v23.02M4.31.5v23.02"
  })));
};

const SvgGripEquipment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18 15h3.82v5.73a1.91 1.91 0 0 1-1.91 1.91A1.91 1.91 0 0 1 18 20.71V15Z",
    transform: "rotate(-20 19.928 18.805)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.63 15.21-1.79-4.93"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.06 15A1.91 1.91 0 0 1 6 16.89v5.73H2.15v-5.73A1.91 1.91 0 0 1 4.06 15Z",
    transform: "rotate(-160 4.062 18.797)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.16 10.28-1.79 4.93"
  }));
};

const SvgGroupTeam = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.43,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.2A2.86 2.86 0 0 1 12 5.34a2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 23.48a2.87 2.87 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48a2.87 2.87 0 0 1 2.86-2.87 2.87 2.87 0 0 1 2.87 2.87M12 9.16v4.77M8.18 16.8 12 13.93l3.82 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGymBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 9.14h5.73a7.64 7.64 0 0 1 7.64 7.64v4.77H1.5v-4.78a7.64 7.64 0 0 1 7.64-7.63Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.59 11.52a7.61 7.61 0 0 0 5.55 2.39h5.72a7.61 7.61 0 0 0 5.55-2.39M6.27 10.09V8.18A5.74 5.74 0 0 1 12 2.45a5.74 5.74 0 0 1 5.73 5.73v1.91M6.15 21.55a3.77 3.77 0 0 0 .12-1 3.82 3.82 0 0 0-3.82-3.82 3.35 3.35 0 0 0-1 .13M22.5 16.9a3.35 3.35 0 0 0-.95-.13 3.82 3.82 0 0 0-3.82 3.82 3.77 3.77 0 0 0 .12 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGymWeights = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 12h1.92M6.25 13.92h11.5M6.25 10.08h11.5M21.58 12h1.92"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 2.42,
    y: 5.29,
    width: 4.79,
    height: 13.42,
    rx: 2.14,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.79,
    y: 5.29,
    width: 4.79,
    height: 13.42,
    rx: 2.14,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgGym = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 16.77h9.55v5.73H7.23zM12 16.77v5.73M7.23 6.27h9.54M9.14 4.36v3.82M14.86 4.36v3.82M5.32 12.95h1.91M9.14 12.95h1.91M12.95 12.95h1.91M16.77 12.95h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 9.14V6.27a4.78 4.78 0 0 0-4.77-4.77H8.18a4.78 4.78 0 0 0-4.77 4.77v2.87H1.5V22.5h21V9.14ZM6.27 9.14H3.41M17.73 9.14h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12.48a4.29 4.29 0 0 0-4.3-4.3h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.77 4.77 0 0 0 0 9.54H18.2a4.29 4.29 0 0 0 4.3-4.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 22.02,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 20.11,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.39,
    cy: 22.02,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 20.11,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHairDryer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.61 4.36H18a17.16 17.16 0 0 1-8-2.2A5.73 5.73 0 1 0 7.25 13a5.6 5.6 0 0 0 2.9-.79 16.26 16.26 0 0 1 8.29-2.07h2.17ZM20.61 2.45V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.25,
    cy: 7.23,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.07 7.23h3.82M4.67 12.33l1.22 5.48a2.32 2.32 0 0 0 2.28 1.83 2.36 2.36 0 0 0 .75-.13 2.32 2.32 0 0 0 1.52-2.71l-1-4.3"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m8.92 19.51.5 1.24A2.77 2.77 0 0 0 12 22.5h.12a2.78 2.78 0 0 0 2.78-2.78v-2.47a2.38 2.38 0 0 1 2.38-2.39 2.39 2.39 0 0 1 2.39 2.39A3.33 3.33 0 0 0 23 20.59h.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHamburger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.4 13.91 5.25 3.82 1.31.95 1.31-.95 5.25-3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.27 17.73h8.23v1.91a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86v-1.91h10.15M14.27 17.73h5.37a1.92 1.92 0 0 0 1.91-1.91 1.91 1.91 0 0 0-1.91-1.91H4.36a1.91 1.91 0 0 0-1.91 1.91 1.92 1.92 0 0 0 1.91 1.91h7.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 10.09,
    width: 19.09,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 10.09,
    width: 19.09,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5h5.73a7.64 7.64 0 0 1 7.63 7.64v1h-21v-1A7.64 7.64 0 0 1 9.14 1.5ZM5.32 7.23h1.91M11.05 7.23h1.9M16.77 7.23h1.91M8.18 4.36h1.91M13.91 4.36h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHammerNail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 17.76v5.74M4.35 17.76h3.82M9.13 1.5v11.48H3.39V4.37L6.26 1.5h2.87zM.52 8.2h2.87M9.13 8.2h14.35"
  }));
};

const SvgHammerTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 14.194 9.81)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.39 2.21h7.6V17.4h-7.6z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13 14-8.21 8.14a2 2 0 0 1-1.47.61 2.07 2.07 0 0 1-2.07-2.07 2 2 0 0 1 .61-1.47L10 11ZM20.41 5.66a2.05 2.05 0 0 1-.6 1.46l-1.47 1.47-2.93-2.93 1.47-1.47a2.07 2.07 0 0 1 3.53 1.47Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHammer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.24 12 17 17.24 7.47 7.71a4 4 0 0 0 0-5.71h4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.19 13.43-8 8a2 2 0 0 1-2.86-2.86l8-8ZM20.45 5.33a2 2 0 0 1-.59 1.43l-1.43 1.43-2.86-2.86L17 3.9a2 2 0 0 1 3.45 1.43Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHandHoldingGlobe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 22.5h7.57a4.77 4.77 0 0 0 3.38-1.4l4.71-4.71a2 2 0 0 0-2.86-2.87l-5.16 5.16H13a1.91 1.91 0 0 0 1.88-2.23 2 2 0 0 0-2-1.59H9.14l-.93-.46a4.66 4.66 0 0 0-5 .55 4.57 4.57 0 0 0-1.71 3.62v.11M12.96 18.68H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 7.23,
    rx: 1.91,
    ry: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23h11.46"
  }));
};

const SvgHandHoldingPlant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.28 22.49h7.56a4.74 4.74 0 0 0 3.37-1.4l4.71-4.71a2 2 0 0 0 .59-1.45 2 2 0 0 0-3.45-1.41l-5.15 5.15H13a1.9 1.9 0 0 0 1.88-2.22 2 2 0 0 0-2-1.59H9.14l-.93-.46a4.66 4.66 0 0 0-5 .54 4.6 4.6 0 0 0-1.69 3.62v.11M12.95 18.67H8.19M5.33 1.51h1.9A4.77 4.77 0 0 1 12 6.28h-1.91a4.77 4.77 0 0 1-4.76-4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.47h1.91a4.77 4.77 0 0 1-4.77 4.77H12a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(180 15.34 4.85)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 14.86V6.28"
  }));
};

const SvgHandHoldingSeedling = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 22.5h7.57a4.77 4.77 0 0 0 3.38-1.4l4.71-4.71a2 2 0 0 0-2.86-2.87l-5.16 5.16H13a1.91 1.91 0 0 0 1.88-2.23 2 2 0 0 0-2-1.59H9.14l-.93-.46a4.66 4.66 0 0 0-5 .55 4.57 4.57 0 0 0-1.71 3.62v.11M12.96 18.68H8.18M5.32 1.5h1.91A4.77 4.77 0 0 1 12 6.27h-1.91A4.77 4.77 0 0 1 5.32 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.45h1.91a4.77 4.77 0 0 1-4.77 4.77H12a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(-180 15.34 4.84)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.09V6.27M7.3 14.06a4.77 4.77 0 0 1 9.47.8 4.21 4.21 0 0 1-.12 1.08"
  }));
};

const SvgHandHoldingWater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.28 22.49h7.56a4.78 4.78 0 0 0 3.37-1.39l4.71-4.71a2 2 0 0 0-1.41-3.45 2 2 0 0 0-1.45.59l-5.15 5.15H13a1.9 1.9 0 0 0 1.88-2.23 2 2 0 0 0-2-1.58H9.14l-.93-.47a4.68 4.68 0 0 0-5 .55 4.57 4.57 0 0 0-1.69 3.62v.11M12.95 18.68H8.19M16.77 8.87a3.82 3.82 0 1 1-7.63 0C9.14 5.6 13 1.79 13 1.79s3.77 3.81 3.77 7.08Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHandKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.21 23.79v-2.94A6.86 6.86 0 0 1 8.08 14H14a2 2 0 0 1 2 2 2 2 0 0 1-2 2h1l4.3-4.29a2.08 2.08 0 0 1 1.41-.71 2.08 2.08 0 0 1 2.08 2.08 2.08 2.08 0 0 1-.61 1.47l-4.12 4.13a4 4 0 0 1-2.78 1.15H11a2 2 0 0 0-2 2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.14,
    cy: 9.15,
    r: 2.94,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.84 5.19-1.96-3.4L8.69 7.68M17.45 7.15l-1.97-3.4"
  }));
};

const SvgHangingFrame = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21V22.5h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 9.14h13.36v9.55H5.32zM17.73 5.32 12 1.5 6.24 5.32"
  }));
};

const SvgHangingPresentation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 15.83h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 1.46h19.17v14.38H2.42zM12 15.83v2.88"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.63,
    r: 1.92,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHangingSignDollar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "hanging sign"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 5.29v12.46h4.18a1.87 1.87 0 0 1 1.77 1.37 4.79 4.79 0 0 0 9.18 0 1.87 1.87 0 0 1 1.77-1.37h4.18V5.29Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.08 15.83h2.4a1.44 1.44 0 0 0 1.44-1.43h0a1.44 1.44 0 0 0-1.44-1.4h-1a1.45 1.45 0 0 1-1.44-1.44h0a1.45 1.45 0 0 1 1.44-1.44h2.4M12 9.13v.95M12 15.83v.96",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 1.46v6.71M17.75 1.46v6.71M.5 1.46h23"
  })));
};

const SvgHangout = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.61v3.78c.94 0 8.5-4.72 8.5-12.28a8.5 8.5 0 1 0-8.5 8.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.22 8.22h1.89v1.89H8.22z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.17 12.94a3.22 3.22 0 0 0 .94-2.28v-.55M13.89 8.22h1.89v1.89h-1.89z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.83 12.94a3.19 3.19 0 0 0 .95-2.28v-.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHardDisk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 12.41,
    height: 16.23,
    rx: 2.86,
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 14.86H1.5M10.09 14.86h3.82M5.32 18.68H1.5M10.09 18.68h3.82M9.14 6.27a4.77 4.77 0 0 1 4.77-4.77h1.91a4.78 4.78 0 0 1 4.77 4.77v9.55"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.86a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.91a1.91 1.91 0 0 1 1.91-1.91ZM19.64 18.68h1.91v1.91h-1.91z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHardware = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 1.5v12.41a4.77 4.77 0 1 1-9.54 0v-3.82l.95-.95V5.32l-.95-1V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 5.32h1.91"
  }));
};

const SvgHatFashion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 18.68,
    width: 21,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 3.41a1.91 1.91 0 0 1-3.82 0 1.91 1.91 0 0 1 3.82 0ZM20.59 18.68 12.94 5.07M11.06 5.07 3.41 18.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHatSanta = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 20.11,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 18.68V9.14a7.64 7.64 0 0 0-7.64-7.64A11.46 11.46 0 0 0 2.45 13v2.87h15.28V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 15.82h14.32v4.77H3.41a1.91 1.91 0 0 1-1.91-1.91v-1a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21 17.07-5.27 1.17a17.09 17.09 0 0 1-3.77.42 17.09 17.09 0 0 1-3.77-.42L3 17.07a1.86 1.86 0 0 1-1.5-1.81 1.86 1.86 0 0 1 2.27-1.82l4.46 1a17.7 17.7 0 0 0 3.77.41 17.7 17.7 0 0 0 3.77-.41l4.46-1a1.86 1.86 0 0 1 2.27 1.82 1.86 1.86 0 0 1-1.5 1.81ZM5.34 10l2.89.64A17.7 17.7 0 0 0 12 11a17.7 17.7 0 0 0 3.77-.41l2.89-.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m4.73 13.65 1.2-7.23a2.48 2.48 0 0 1 2.45-2.08 2.45 2.45 0 0 1 1.39.42L12 6.25l2.23-1.49a2.45 2.45 0 0 1 1.39-.42 2.49 2.49 0 0 1 1.61.59 2.46 2.46 0 0 1 .84 1.49l1.2 7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHdDesktop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v15.27h-21zM4.36 21.55h15.28M12 17.73v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 6.27h1.91a1.91 1.91 0 0 1 1.91 1.91V12a1.91 1.91 0 0 1-1.91 1.91h-1.91V6.27ZM10.09 14.86V5.32M6.27 14.86V5.32M10.09 10.09H6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeadGear = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "human resource"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 22.5v-2.82H7.27a2 2 0 0 1-1.95-2v-2.82l-1.91-.95 1.9-3.81v-.63a7.86 7.86 0 0 1 7.13-8 7.61 7.61 0 0 1 8.14 7.62 10.49 10.49 0 0 1-2.86 7.2v6.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 10.09,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12.95 6.27v.96M12.95 13.91v-.96M9.65 8.18l.82.48M16.26 12l-.83-.48M16.26 8.18l-.83.48M9.65 12l.82-.48"
  })));
};

const SvgHeadphones = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 11h1.91v7.64H3.41a1.91 1.91 0 0 1-1.91-1.87V13a1.91 1.91 0 0 1 1.91-2ZM18.68 11h1.91a1.91 1.91 0 0 1 1.91 2v3.82a1.91 1.91 0 0 1-1.91 1.91h-1.91V11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 18.68a3.82 3.82 0 0 1-3.82 3.82H12M4.36 11.05V9.14A7.64 7.64 0 0 1 12 1.5a7.64 7.64 0 0 1 7.64 7.64v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartArrow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.7 5.33a4.45 4.45 0 0 0-3.72 2 4.47 4.47 0 0 0-8.19 2.46c0 6.7 8.19 8.93 8.19 8.93s8.18-2.23 8.18-8.93a4.46 4.46 0 0 0-4.46-4.46ZM4.33 19.67l7.65-7.65M18.2 5.8l4.3-4.3M18.67 1.5h3.83v3.83M.5 19.67h3.83v3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartBalloon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.32 2A4 4 0 0 0 12 3.72 4 4 0 0 0 8.68 2a3.91 3.91 0 0 0-4 3.83c0 5.76 7.3 9 7.3 9s7.3-3.19 7.3-8.95A3.91 3.91 0 0 0 15.32 2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.78c0 3.65-2.69 4.57-.19 8.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.26 16.61 12 14.78l2.74 1.83"
  }));
};

const SvgHeartBed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 14.89h15.28a2.86 2.86 0 0 1 2.86 2.86v2.86h-21v-2.86a2.86 2.86 0 0 1 2.86-2.86ZM7.38 11.07h2.56A2.06 2.06 0 0 1 12 13.13v1.76H5.32v-1.76a2.06 2.06 0 0 1 2.06-2.06ZM14.06 11.07h2.56a2.06 2.06 0 0 1 2.06 2.06v1.76H12v-1.76a2.06 2.06 0 0 1 2.06-2.06ZM3.41 23.48v-2.87M20.59 23.48v-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.92 14.89a10.09 10.09 0 0 0 3.58-7.64A5.72 5.72 0 0 0 12 4.09 5.72 5.72 0 0 0 1.5 7.25a10.09 10.09 0 0 0 3.58 7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.14 6A2.55 2.55 0 0 0 12 7.18 2.52 2.52 0 0 0 9.9 6a2.55 2.55 0 0 0-2.54 2.59c0 3.81 4.66 5.09 4.66 5.09s4.67-1.28 4.67-5.09A2.55 2.55 0 0 0 14.14 6Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.61 1.5v17.18H5.34a1.93 1.93 0 0 0-1.91 1.91V3.41A1.92 1.92 0 0 1 5.34 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.57 22.5H5.34a1.92 1.92 0 0 1-1.91-1.91 1.93 1.93 0 0 1 1.91-1.91h14.32v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartBow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.46 11.14a4.16 4.16 0 0 1-1.81 3.14A10.9 10.9 0 0 1 12 15.82a10.9 10.9 0 0 1-2.65-1.54 4.16 4.16 0 0 1-1.81-3.14 2 2 0 0 1 1.37-1.79A2.65 2.65 0 0 1 10 9.14a2.6 2.6 0 0 1 2 .86 2.6 2.6 0 0 1 2-.89 2.65 2.65 0 0 1 1.07.21 2 2 0 0 1 1.39 1.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.35 14.28 6.1 17.06a2.79 2.79 0 0 1-4.6-2.12v-.15A2.79 2.79 0 0 1 4.29 12 2.79 2.79 0 0 1 1.5 9.21v-.15a2.79 2.79 0 0 1 4.6-2.12l2.81 2.41a2 2 0 0 0-1.37 1.79 4.16 4.16 0 0 0 1.81 3.14ZM19.71 12a2.79 2.79 0 0 1 2.79 2.79v.15a2.79 2.79 0 0 1-4.6 2.12l-3.25-2.78a4.16 4.16 0 0 0 1.81-3.14 2 2 0 0 0-1.37-1.79l2.81-2.41a2.79 2.79 0 0 1 4.6 2.12v.15A2.79 2.79 0 0 1 19.71 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartBox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.84 6.76a2.75 2.75 0 0 1 2.16 1 2.75 2.75 0 0 1 2.16-1 2.4 2.4 0 0 1 2.59 2.14c0 3.21-4.75 5-4.75 5s-4.75-1.78-4.75-5a2.4 2.4 0 0 1 2.59-2.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.5 1.55h19v20.9h-19z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.5 18.65h19v3.8h-19z"
  }));
};

const SvgHeartCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 12.93a2.23 2.23 0 0 0-1.74.77 2.23 2.23 0 0 0-1.74-.77 1.93 1.93 0 0 0-2.08 1.72c0 2.58 3.82 4 3.82 4s3.82-1.43 3.82-4a1.93 1.93 0 0 0-2.08-1.72ZM1.5 3.39h21v5.73h-21z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.11h21v13.36h-21zM6.27.52v5.73M12 .52v5.73M17.73.52v5.73"
  }));
};

const SvgHeartCandle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.28 13.91a1.51 1.51 0 0 0-1.28.69 1.51 1.51 0 0 0-1.28-.69 1.54 1.54 0 0 0-1.53 1.53c0 2.3 2.81 3.07 2.81 3.07s2.81-.77 2.81-3.07a1.54 1.54 0 0 0-1.53-1.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 22.5H6.27V8.18l.3.1a35.25 35.25 0 0 0 11.16 1.81ZM13.91 5.32a1.91 1.91 0 0 1-3.82 0C10.09 3.41 12 1.5 12 1.5s1.91 1.91 1.91 3.82ZM12 7.23v2.86M3.41 22.5h17.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartCandles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 22.5H1.5V9.14l.29.09A35.31 35.31 0 0 0 13 11.05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.95 15.82h9.55v6.68h-9.55zM9.14 5.32a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.82 1.91-3.82s1.91 1.91 1.91 3.82ZM19.64 11.05a1.91 1.91 0 0 1-3.82 0c0-1.91 1.91-3.82 1.91-3.82s1.91 1.91 1.91 3.82ZM7.23 7.23v2.86M17.73 12.95v2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.5 14.86a1.53 1.53 0 0 0-1.27.69A1.56 1.56 0 0 0 6 14.86a1.53 1.53 0 0 0-1.58 1.54c0 2.3 2.81 3.06 2.81 3.06S10 18.7 10 16.4a1.54 1.54 0 0 0-1.5-1.54Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgHeartCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 22.5H4.36V5.32l11.21-3.74a1.75 1.75 0 0 1 .51-.08 1.65 1.65 0 0 1 1.65 1.64v2.18a1.91 1.91 0 0 1 1.91 1.91v13.36a1.91 1.91 0 0 1-1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 5.32a1.91 1.91 0 0 1 1.91 1.91v13.36a1.91 1.91 0 0 1-1.91 1.91H4.36V5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 9.14a2.2 2.2 0 0 0-1.74.77 2.2 2.2 0 0 0-1.74-.77 1.92 1.92 0 0 0-2.08 1.71c0 2.58 3.82 4 3.82 4s3.82-1.43 3.82-4a1.92 1.92 0 0 0-2.08-1.71ZM8.18 18.68h7.64M17.73 5.32H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.44 9.56a2.36 2.36 0 0 0-4.33-1.3 2.35 2.35 0 0 0-4.32 1.3c0 2.75 4.32 4.33 4.32 4.33s4.33-1.58 4.33-4.33Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgHeartChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 11.73a1.62 1.62 0 0 0-1.56-1.68 1.55 1.55 0 0 0-1.31.75 1.53 1.53 0 0 0-1.3-.75A1.62 1.62 0 0 0 12 11.73c0 2 2.86 3.09 2.86 3.09s2.87-1.12 2.87-3.09Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartChemistry = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.9 8.44a4.61 4.61 0 0 0-2 .46V1.5h-3.81v7.4a4.61 4.61 0 0 0-2-.46 4.69 4.69 0 0 0-4.69 4.69c0 7 8.59 9.37 8.59 9.37s8.59-2.34 8.59-9.37a4.69 4.69 0 0 0-4.68-4.69ZM8.18 1.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 13.91c8.59-3.82 8.59 2.86 17.18 0M8.18 16.77h1.91M12 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.44 13.4a2.36 2.36 0 0 0-4.33-1.3 2.36 2.36 0 0 0-4.32 1.3c0 2.76 4.32 4.33 4.32 4.33s4.33-1.57 4.33-4.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartCommentGroup = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 23.48A2.87 2.87 0 0 1 12 20.61a2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 23.48a2.87 2.87 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48a2.87 2.87 0 0 1 2.86-2.87 2.87 2.87 0 0 1 2.87 2.87M1.5 3.43V8.2a1.9 1.9 0 0 0 1.91 1.91h1.91V12l2.86-1.91h1.91L12 12l1.91-1.91h1.91L18.68 12v-1.89h1.91A1.9 1.9 0 0 0 22.5 8.2V3.43a1.91 1.91 0 0 0-1.91-1.91H3.41A1.91 1.91 0 0 0 1.5 3.43Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.87 4.39a1.1 1.1 0 0 0-.87.42 1.1 1.1 0 0 0-.87-.42 1 1 0 0 0-1 1C10.09 6.77 12 7.25 12 7.25s1.91-.48 1.91-1.91a1 1 0 0 0-1.04-.95ZM18.6 4.39a1.07 1.07 0 0 0-.87.42 1.1 1.1 0 0 0-.87-.42 1 1 0 0 0-1 1c0 1.43 1.91 1.91 1.91 1.91s1.91-.48 1.91-1.91a1 1 0 0 0-1.08-1ZM7.14 4.39a1.1 1.1 0 0 0-.87.42 1.07 1.07 0 0 0-.87-.42 1 1 0 0 0-1 1c0 1.43 1.91 1.91 1.91 1.91s1.91-.48 1.91-1.91a1 1 0 0 0-1.08-1Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgHeartComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.44 9.56a2.36 2.36 0 0 0-4.33-1.3 2.35 2.35 0 0 0-4.32 1.3c0 2.75 4.32 4.33 4.32 4.33s4.33-1.58 4.33-4.33Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartEarth = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.45A5.62 5.62 0 0 0 12 5.3a5.62 5.62 0 0 0-4.77-2.85C4.06 2.45 1.5 5.3 1.5 8.82 1.5 15.18 12 21.55 12 21.55s10.5-6.37 10.5-12.73c0-3.52-2.56-6.37-5.73-6.37Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.05,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 11.05,
    rx: 1.91,
    ry: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 11.05h11.46"
  }));
};

const SvgHeartEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 3.86a2.23 2.23 0 0 0-2.08-2.36A2 2 0 0 0 12 2.56a2 2 0 0 0-1.74-1.06 2.23 2.23 0 0 0-2.08 2.36C8.18 6.61 12 8.18 12 8.18s3.82-1.57 3.82-4.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 7.23h4.77V22.5h-21V7.23h4.77"
  }));
};

const SvgHeartFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13.74a2.62 2.62 0 0 0-2.54-2.69 2.53 2.53 0 0 0-2.12 1.2 2.5 2.5 0 0 0-2.11-1.2 2.62 2.62 0 0 0-2.54 2.69c0 3.15 4.66 4.94 4.66 4.94s4.65-1.79 4.65-4.94Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgHeartFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 14a2.05 2.05 0 0 0-2.08-2 2.1 2.1 0 0 0-1.74.9 2.1 2.1 0 0 0-1.74-.9 2.05 2.05 0 0 0-2.08 2c0 2.36 3.82 3.71 3.82 3.71s3.82-1.33 3.82-3.71Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgHeartGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.85 14.86a2.42 2.42 0 0 0-2 1 2.38 2.38 0 0 0-2-1 2.34 2.34 0 0 0-2.35 2.29c0 3.44 4.36 5.35 4.36 5.35s4.37-1.91 4.37-5.35a2.34 2.34 0 0 0-2.38-2.29ZM20.16 15a2.37 2.37 0 0 0-2 1 2.35 2.35 0 0 0-1.95-1 2.3 2.3 0 0 0-2.34 2.26c0 3.38 4.29 5.26 4.29 5.26s4.3-1.88 4.3-5.26a2.3 2.3 0 0 0-2.3-2.26Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.07 18.23a3.66 3.66 0 0 1 1.93-.5 3.64 3.64 0 0 1 2.06.59M1.5 16.77 3.78 4.61A3.82 3.82 0 0 1 7.53 1.5h2.56M22.5 16.77 20.22 4.61a3.82 3.82 0 0 0-3.75-3.11h-2.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartHandGesture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13V8.28a2 2 0 0 0-1.59-2A1.9 1.9 0 0 0 12 8.18v7.32l-.54-.5a2 2 0 0 0-2.53-.28 1.91 1.91 0 0 0-.25 2.91L12 20.9l1.91 1.6h6.68a6.52 6.52 0 0 0 1.91-4.61v-2.07A2.87 2.87 0 0 0 19.64 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.83 1.5a3.12 3.12 0 0 0-2.6 1.37A3.13 3.13 0 0 0 4.62 1.5 3.09 3.09 0 0 0 1.5 4.55c0 4.59 5.73 6.11 5.73 6.11S13 9.14 13 4.55A3.08 3.08 0 0 0 9.83 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M12.5 12l-.5.5-.5-.5a2.12 2.12 0 0 0-3 0 2.12 2.12 0 0 0 0 3l.5.5 3 3 3-3 .5-.5a2.12 2.12 0 0 0 0-3 2.12 2.12 0 0 0-3 0Z"
  }));
};

const SvgHeartKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.87 4.65A2.2 2.2 0 0 0 19.1 4a2.22 2.22 0 0 0-.68-1.78 1.93 1.93 0 0 0-2.69-.25c-1.82 1.82-.13 5.53-.13 5.53s3.71 1.69 5.53-.13a1.92 1.92 0 0 0-.26-2.72Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.29 22.5-2.86-2.86L15.84 7.23M5.82 17.25l1.91 1.91M8.2 14.86l2.87 2.87"
  }));
};

const SvgHeartLockKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 18.5a2.25 2.25 0 0 0-.77-1.74A2.22 2.22 0 0 0 22.5 15a1.93 1.93 0 0 0-1.72-2.09c-2.58 0-4 3.82-4 3.82s1.43 3.82 4 3.82a1.93 1.93 0 0 0 1.72-2.05ZM12.61 9.56a4.15 4.15 0 0 0-3.47 1.86 4.17 4.17 0 0 0-7.64 2.31c0 6.24 7.64 8.33 7.64 8.33s7.63-2.09 7.63-8.33a4.16 4.16 0 0 0-4.16-4.17Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 9.26v-3a4.79 4.79 0 0 1 8.16-3.38 4.85 4.85 0 0 1 1.39 3.38v3M9.14 18.67v-3.82M9.14 16.76h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartLoveYou = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.47 1.52a3.33 3.33 0 0 0-2.61 1.16 3.31 3.31 0 0 0-2.6-1.16A2.89 2.89 0 0 0 9.14 4.1c0 3.87 5.72 6 5.72 6s5.73-2.14 5.73-6a2.89 2.89 0 0 0-3.12-2.58ZM2.45 1.52h3.82M4.36 10.11V1.52M2.45 10.11h3.82M7.23 14.89v.95l-2.87 3.82-2.86-3.82v-.95M4.36 23.48v-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 15.84,
    width: 4.77,
    height: 6.68,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.89v5.25a2.39 2.39 0 0 1-2.39 2.38 2.39 2.39 0 0 1-2.38-2.38v-5.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartMail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 7.23A2.2 2.2 0 0 0 12 8a2.2 2.2 0 0 0-1.74-.77A1.93 1.93 0 0 0 8.18 9c0 2.57 3.82 4 3.82 4s3.82-1.43 3.82-4a1.93 1.93 0 0 0-2.08-1.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 10.09V22.5H3.41V10.09"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 9.14v.95l-7 7a2.32 2.32 0 0 1-1.63.68 2.32 2.32 0 0 1-1.63-.68l-7-7v-.95l7-7a2.29 2.29 0 0 1 3.26 0ZM20.59 22.5l-6.2-6.2M9.61 16.3l-6.2 6.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.53 11.09a1.93 1.93 0 0 0-1.93-1.94A1.89 1.89 0 0 0 12 10a1.89 1.89 0 0 0-1.6-.87 1.93 1.93 0 0 0-1.93 1.94c0 2.26 3.53 3.55 3.53 3.55s3.53-1.27 3.53-3.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.05 8.18a1.53 1.53 0 0 0-1.28.69 1.5 1.5 0 0 0-1.27-.69A1.54 1.54 0 0 0 14 9.71c0 2.3 2.81 3.07 2.81 3.07s2.81-.77 2.81-3.07a1.53 1.53 0 0 0-1.57-1.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 16.3v4.29A1.92 1.92 0 0 1 13 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V3.41A1.92 1.92 0 0 1 3.41 1.5H13a1.92 1.92 0 0 1 1.91 1.91V4.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 2.45H6.27a1 1 0 0 1-.95-1h5.73a1 1 0 0 1-.96 1ZM16.77 4.36a5.73 5.73 0 0 0-3.82 10v2.42l3.82-.95a5.73 5.73 0 0 0 0-11.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 5.27,
    width: 13.36,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 7.18 3.82.96v7.63l-3.82.96V7.18zM5.32 16.73l-3.82-.96V8.14l3.82-.96v9.55zM10.09 3.36v1.91M13.91 3.36v1.91M13.74 8.83a2.08 2.08 0 0 0-1.74.93 2.08 2.08 0 0 0-3.82 1.15C8.18 14 12 15.08 12 15.08s3.82-1 3.82-4.17a2.08 2.08 0 0 0-2.08-2.08Z"
  }));
};

const SvgHeartMug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 3.39H15.8v10a7.17 7.17 0 0 1-7.17 7.17 7.17 7.17 0 0 1-7.17-7.17v-10ZM17.72 20.61H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 19.15,
    cy: 8.17,
    rx: 3.35,
    ry: 3.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.79 9.08a2.44 2.44 0 0 0-1.91.85A2.44 2.44 0 0 0 7 9.08 2.12 2.12 0 0 0 4.69 11c0 2.83 4.19 4.4 4.19 4.4s4.19-1.57 4.19-4.4a2.11 2.11 0 0 0-2.28-1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartMusic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.15,
    cy: 19.63,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.63,
    cy: 16.76,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 16.76V2.41L11.02 5.28v14.35M22.5 6.24 11.02 9.11"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.9 5.28a1.28 1.28 0 0 0-1.06.57 1.28 1.28 0 0 0-2.34.71c0 1.91 2.34 2.55 2.34 2.55s2.34-.64 2.34-2.55A1.28 1.28 0 0 0 3.9 5.28ZM8.07 10.41a1 1 0 0 0-.87.47 1 1 0 0 0-1.92.58c0 1.56 1.92 2.08 1.92 2.08s1.91-.54 1.91-2.08a1 1 0 0 0-1.04-1.05ZM8.33.5a.79.79 0 0 0-.66.35.78.78 0 0 0-1.43.43c0 1.18 1.43 1.57 1.43 1.57s1.44-.39 1.44-1.57A.78.78 0 0 0 8.33.5Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgHeartPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.9 8.44a4.68 4.68 0 0 0-3.9 2.1 4.68 4.68 0 0 0-8.59 2.59c0 7 8.59 9.37 8.59 9.37s8.59-2.34 8.59-9.37a4.69 4.69 0 0 0-4.69-4.69Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 9.27v-3a4.77 4.77 0 1 1 9.54 0v3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-2.87"
  }));
};

const SvgHeartPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 5.06A2.08 2.08 0 0 0 12 6a2.08 2.08 0 0 0-3.82 1.14c0 3.12 3.82 4.17 3.82 4.17s3.82-1.05 3.82-4.17a2.08 2.08 0 0 0-2.08-2.08Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 22.5H3.41v-21h17.18v21zM7.23 14.86h9.54M7.23 18.68h9.54"
  }));
};

const SvgHeartPen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.87 4.58A2.09 2.09 0 0 0 20 4a2.09 2.09 0 0 0-.59-1.86 2 2 0 0 0-2.89-.06c-2.13 2.13-.61 6-.61 6s3.88 1.52 6-.61a2 2 0 0 0-.04-2.89ZM15.82 8.18l-1.91 1.91M4.36 22.5H1.5v-2.86L12.48 8.66l2.86 2.86L4.36 22.5z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 9.14H6.27L3.41 12"
  }));
};

const SvgHeartPerfume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.49 10A4.18 4.18 0 0 0 12 11.87a4.16 4.16 0 0 0-7.63 2.3C4.39 20.42 12 22.5 12 22.5s7.64-2.08 7.64-8.33A4.17 4.17 0 0 0 15.49 10ZM9.16 22.5h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.16 10.05V1.5h5.73v8.55M5.34 5.32h3.82"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.43,
    cy: 5.32,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.98 5.32h3.82M21.57 2.45h1.91M20.61 7.23h1.91M17.75 4.36h1.91"
  }));
};

const SvgHeartPin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.62 9.12a7.62 7.62 0 0 0-15.24 0C4.38 14.83 12 21.5 12 21.5s7.62-6.67 7.62-12.38Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.73 6.26a2.1 2.1 0 0 0-1.73.9 2.1 2.1 0 0 0-1.73-.9 2 2 0 0 0-2.08 2c0 3 3.81 4.67 3.81 4.67s3.81-1.67 3.81-4.67a2 2 0 0 0-2.08-2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartPlant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.45A5.62 5.62 0 0 0 12 5.3a5.62 5.62 0 0 0-4.77-2.85C4.06 2.45 1.5 5.3 1.5 8.82 1.5 15.18 12 21.55 12 21.55s10.5-6.37 10.5-12.73c0-3.52-2.56-6.37-5.73-6.37Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 8.18h1.91A4.77 4.77 0 0 1 12 13h-1.91a4.77 4.77 0 0 1-4.77-4.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 9.14h1.91a4.77 4.77 0 0 1-4.77 4.77H12a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(-180 15.34 11.525)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 21.55v-8.6"
  }));
};

const SvgHeartRateClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Beat rate report"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M18.7 17.65v4.85H1.52v-20H6.3v1a1.91 1.91 0 0 0 1.9 1.82H12a1.92 1.92 0 0 0 1.91-1.91v-1h4.79v6.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.61 13.91H16.8l-1.91-2.87-2.87 4.78-2.86-5.73-1.91 3.82H1.52M21.57 13.91h1.91M13.93 1.5v1.91A1.92 1.92 0 0 1 12 5.32H8.2a1.91 1.91 0 0 1-1.9-1.91V1.5Z"
  })));
};

const SvgHeartRate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 13h-.95l-1-1.91-1.9 3.82-1.87-4.8L7.23 13H3.41l-.33-.33A5.4 5.4 0 1 1 10.72 5L12 6.3 13.28 5a5.4 5.4 0 1 1 7.64 7.63l-.33.33L12 21.57l-5.93-5.93M15.82 12.98h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartRoomService = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.87 15.6a1.06 1.06 0 0 0-.87.47 1.06 1.06 0 0 0-.87-.47 1 1 0 0 0-1 1c0 1.56 1.91 2.09 1.91 2.09s1.91-.53 1.91-2.09a1 1 0 0 0-1.08-1Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 6.27a4.77 4.77 0 0 1 9.54 0M16.77 6.27v14.32a1.9 1.9 0 0 1-1.91 1.91H9.14a1.9 1.9 0 0 1-1.91-1.91V13a1.9 1.9 0 0 1 1.91-1.9H12a4.78 4.78 0 0 0 4.77-4.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartShirt = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 9.83a2.08 2.08 0 0 0-1.74.93 2.08 2.08 0 0 0-3.82 1.15C8.18 15 12 16.08 12 16.08s3.82-1 3.82-4.17a2.08 2.08 0 0 0-2.08-2.08Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 1.5v7.64h-2.86V22.5H4.36V9.14H1.5V1.5h7a3.51 3.51 0 1 0 7 0h7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartSuitcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.17 9.38a2.78 2.78 0 0 0-2.17 1 2.78 2.78 0 0 0-2.17-1 2.4 2.4 0 0 0-2.6 2.14c0 3.22 4.77 5 4.77 5s4.77-1.79 4.77-5a2.4 2.4 0 0 0-2.6-2.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 5.32,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 22.02,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 22.02,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.32H7.23l1.38-2.76a1.9 1.9 0 0 1 1.71-1.06h3.36a1.9 1.9 0 0 1 1.71 1.06ZM5.32 15.82v4.77M18.68 15.82v4.77M5.32 5.32v2.86M18.68 5.32v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 10a2.82 2.82 0 0 0-.84 2 2.86 2.86 0 0 0 2.86 2.86v4.78h-21v-4.78a2.82 2.82 0 0 0 2-.84 2.85 2.85 0 0 0 0-4 2.82 2.82 0 0 0-2-.84V4.36h21v4.78a2.82 2.82 0 0 0-2.02.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 9.14a2.2 2.2 0 0 0-1.74.77 2.2 2.2 0 0 0-1.74-.77 1.92 1.92 0 0 0-2.08 1.71c0 2.58 3.82 4 3.82 4s3.82-1.43 3.82-4a1.92 1.92 0 0 0-2.08-1.71Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartUnreadEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 10.09a2.23 2.23 0 0 0-1.74.77 2.23 2.23 0 0 0-1.74-.77 1.93 1.93 0 0 0-2.08 1.72c0 2.58 3.82 4 3.82 4s3.82-1.43 3.82-4a1.93 1.93 0 0 0-2.08-1.72Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.37h21v15.27h-21zM22.5 4.37l-6.82 6.82M8.33 11.19 1.5 4.37M1.5 19.78l6.82-6.82M15.67 12.96l6.83 6.82"
  }));
};

const SvgHeartVideo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14 9.14a2.6 2.6 0 0 0-2 .86 2.6 2.6 0 0 0-2-.89 2.24 2.24 0 0 0-2.43 2c0 3 4.45 4.68 4.45 4.68s4.45-1.67 4.45-4.68A2.24 2.24 0 0 0 14 9.14ZM.55 1.5h22.9M1.5 5.32h1.91M5.32 5.32h1.91M9.14 5.32h1.91M12.95 5.32h1.91M16.77 5.32h1.91M20.59 5.32h1.91M23.45 22.5H.55M22.5 18.68h-1.91M18.68 18.68h-1.91M14.86 18.68h-1.91M11.05 18.68H9.14M7.23 18.68H5.32M3.41 18.68H1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartWater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.45A5.62 5.62 0 0 0 12 5.3a5.62 5.62 0 0 0-4.77-2.85C4.06 2.45 1.5 5.3 1.5 8.82 1.5 15.18 12 21.55 12 21.55s10.5-6.37 10.5-12.73c0-3.52-2.56-6.37-5.73-6.37Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.34 11.52a3.34 3.34 0 0 1-6.68 0c0-2.86 3.34-6.2 3.34-6.2s3.34 3.34 3.34 6.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 3.41A5.73 5.73 0 0 0 12 6 5.73 5.73 0 0 0 1.5 9.14C1.5 17.73 12 20.59 12 20.59s10.5-2.86 10.5-11.45a5.72 5.72 0 0 0-5.73-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 7.23a1.9 1.9 0 0 1 1.91 1.91 6.25 6.25 0 0 1-1.95 4.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeartrateMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 5.27,
    width: 13.36,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 7.18 3.82.96v7.63l-3.82.96V7.18zM5.32 16.73l-3.82-.96V8.14l3.82-.96v9.55zM7.23 11.96h1.91l.95-.96L12 13.86l1.91-3.82.95 1.92h1.91M10.09 3.36v1.91M13.91 3.36v1.91"
  }));
};

const SvgHearts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.3 10.53a7.51 7.51 0 0 0 .38-2.43 4.68 4.68 0 0 0-8.59-2.59A4.68 4.68 0 0 0 1.5 8.1c0 7 8.59 9.37 8.59 9.37s.4-.11 1-.35",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.12 10.44A3.37 3.37 0 0 0 16.3 12a3.39 3.39 0 0 0-6.21 1.87c0 5.08 6.21 6.77 6.21 6.77s6.2-1.69 6.2-6.77a3.38 3.38 0 0 0-3.38-3.43Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeatingFurnace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 2.43,
    y: 4.37,
    width: 4.78,
    height: 17.22,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.22,
    y: 4.37,
    width: 4.78,
    height: 17.22,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12,
    y: 4.37,
    width: 4.78,
    height: 17.22,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.78,
    y: 4.37,
    width: 4.78,
    height: 17.22,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 8.2h1.91M.52 17.76h1.91M21.57 8.2h1.91M21.57 17.76h1.91M4.35 21.59v1.91M19.65 21.59v1.91M18.7 1.5v2.87M16.78 1.5h3.83"
  }));
};

const SvgHeavyRain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 16.68a4.77 4.77 0 0 1 .95-9.45 5.73 5.73 0 0 1 11.46 0 6 6 0 0 1-.09.95h.56a4.29 4.29 0 0 1 .48 8.56M11.05 12.95h1.9M11.05 16.77h1.9M11.05 20.59h1.9M14.86 14.86h1.91M14.86 18.68h1.91M14.86 22.5h1.91M7.23 14.86h1.91M7.23 18.68h1.91M7.23 22.5h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHeavyWeights = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.29 1.46v7.67M8.17.5v9.58M5.29 1.46v7.67M8.17.5v9.58M18.71 9.13V1.46M15.83 10.08V.5M18.71 9.13V1.46M15.83 10.08V.5M2.42 5.29h2.87M8.17 5.29h7.66M18.71 5.29h2.87M3.38 12.96v9.58M6.25 12v11.5M3.38 12.96v9.58M6.25 12v11.5M20.63 22.54v-9.58M17.75 23.5V12M20.63 22.54v-9.58M17.75 23.5V12M.5 17.75h2.88M6.25 17.75h11.5M20.63 17.75h2.87"
  }));
};

const SvgHelicopterTravel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.54 14.58v.88a3.2 3.2 0 0 1-3.21 3.21h-5a3.2 3.2 0 0 1-3.21-3.21v-2.53L1.5 9.11v-1h14.62a6.43 6.43 0 0 1 6.42 6.47ZM13.93 18.67v3.83M18.72 18.67v3.83M22.54 20.59a1.91 1.91 0 0 1-1.91 1.91h-9.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.54 14.58v.27H16.8a1.92 1.92 0 0 1-1.91-1.92V8.15h1.23M1.5 5.28v3.83M4.37 2.41H23.5M13.93 5.28V.5M16.8 8.15h-5.74l.96-2.87h3.83l.95 2.87z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHelicopter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.98 4.35v3.82M6.28 4.35h13.39M1.5 5.3v1l1 1.91h14.3a5.74 5.74 0 0 1 5.74 5.74 1.91 1.91 0 0 1-1.91 1.92h-5.29a4.78 4.78 0 0 1-4.48-3.11L9.15 8.17M16.8 8.17v4.79M11.07 19.65H23.5M14.89 15.83v3.82M19.67 15.83v3.82"
  }));
};

const SvgHelmet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14 3.6a10.47 10.47 0 0 1 8.5 10.31v1.91h-21v-1.91A10.49 10.49 0 0 1 10 3.6M1.5 15.82h21a5.73 5.73 0 0 1-5.73 5.73H7.23a5.73 5.73 0 0 1-5.73-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 15.82.95-13.36h3.82l.95 13.36"
  }));
};

const SvgHerbMix = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 10.09v1a10.49 10.49 0 0 0 6.68 9.77v1.64h7.64v-1.68a10.49 10.49 0 0 0 6.68-9.77v-1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m10.09 10.09 7.8-7.8a2.7 2.7 0 0 1 3.82 3.82l-4 4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHerbalMixPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 4.2a2.73 2.73 0 0 1-.79 1.91l-3 3h-7.66l6.84-6.85A2.7 2.7 0 0 1 22.5 4.2ZM22.5 9.14v1.91a10.51 10.51 0 0 1-6.68 9.77v1.68H8.18v-1.68a10.51 10.51 0 0 1-6.68-9.77V9.14ZM9.14 14.86h5.72M12 12v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHierarchyCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M3.41 18.68v-5.72h17.18v5.72M12 18.68V7.23"
  }));
};

const SvgHierarchy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5h5.73v5.73H9.14zM10.09 18.68h3.82v3.82h-3.82zM1.5 18.68h3.82v3.82H1.5zM18.68 18.68h3.82v3.82h-3.82zM12 18.68V8.18"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M3.41 18.68v-5.72h17.18v5.72"
  }));
};

const SvgHighFive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 3.43A1.91 1.91 0 0 1 13 1.52a1.91 1.91 0 0 1 1.91 1.91M14.86 4.39a1.91 1.91 0 0 1 1.91-1.91 1.9 1.9 0 0 1 1.91 1.91M18.68 12V7.25a1.92 1.92 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91v7.64a9.87 9.87 0 0 1-.71 3.68l-.49 1.23a9.87 9.87 0 0 0-.71 3.68M8.18 23.48a4.57 4.57 0 0 0-1.35-3.26l-4.74-4.74a2 2 0 0 1-.59-1.43 2.07 2.07 0 0 1 .59-1.44 2 2 0 0 1 2.87 0l2.27 2.28V4.39a1.9 1.9 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91V12M11.05 12.02V3.43M14.86 12.02V3.43M18.68 12.02V4.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHighVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.93 10a2.85 2.85 0 0 1 0 4M18 8a5.72 5.72 0 0 1 0 8.1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20 5.93a8.57 8.57 0 0 1 0 12.14M1.5 8.18h4.77v7.64H1.5zM13.91 3.41v17.18h-1.67l-5.97-4.77V8.18l5.97-4.77h1.67z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHold = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.24 22.52-5.15-5.14a2 2 0 0 1 1.44-3.47 2 2 0 0 1 1.43.6l1.32 1.32V6.37A2 2 0 0 1 8 4.35a1.94 1.94 0 0 1 2.08 1.91V12l5.05.72a1.92 1.92 0 0 1 1.64 1.9A17.25 17.25 0 0 1 15 22.34l-.09.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.11 10.64a4.54 4.54 0 0 0 1.47-1 4.79 4.79 0 1 0-6.77 0 4.54 4.54 0 0 0 1.47 1M20 5.14l-.33.16-.32-.16a2.86 2.86 0 0 1-1.59-2.57V1.48h3.83v1.09A2.88 2.88 0 0 1 20 5.14ZM15.85 1.48h7.65M19.35 5.47l.32-.17.33.17A2.87 2.87 0 0 1 21.59 8v1.1h-3.83V8a2.85 2.85 0 0 1 1.59-2.53ZM23.5 9.13h-7.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHomeLayout = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 13.91h8.59V1.5h-21v12.41h7.64v1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 22.5H1.5v-21h12.41v4.77H12M13.91 10.09V22.5H9.14M18.68 7.23h3.82"
  }));
};

const SvgHomeMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.98V18.2h7.64L12 22.02l2.86-3.82h7.64V1.98h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 9.61h5.73v4.77H9.14zM12 5.79 8.18 9.61h7.64L12 5.79z"
  }));
};

const SvgHomePaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.23V22.5h18.14a2.87 2.87 0 0 0 0-5.73h-1.91V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 1.5v15.27h1.91a2.88 2.88 0 0 1 2 .84 2.85 2.85 0 0 1 .84 2V4.36a2.87 2.87 0 0 0-2.84-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-180 9.615 16.775)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 14.86H12v3.82H7.23z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.61 11.04 3.35 3.82H6.27l3.34-3.82z"
  }));
};

const SvgHomePin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20 9.5c0 6-8 13-8 13s-8-7-8-13a8 8 0 0 1 16 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14 8v4.5h-4V8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8 9.5 4-3 4 3"
  }));
};

const SvgHomeWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M2.45 1.5H12V12H2.45zM12 1.5h9.55V12H12zM2.45 12H12v10.5H2.45zM12 12h9.55v10.5H12z"
  }));
};

const SvgHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1 12 11-9.17L23 12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.33 9.25v11.92h-4.58v-7.34h-5.5v7.34H4.67V9.25"
  }));
};

const SvgHoneyJar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 5.32V3.41a1.91 1.91 0 0 0-1.91-1.91H8.18a1.91 1.91 0 0 0-1.91 1.91v1.91a6.52 6.52 0 0 0-1.91 4.61v10.66a1.91 1.91 0 0 0 1.91 1.91h11.46a1.91 1.91 0 0 0 1.91-1.91V9.93a6.52 6.52 0 0 0-1.91-4.61ZM6.27 5.32h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 16.72v-1.8l-1.91-1.38-1.91 1.38v1.8l1.91 1.38L12 16.72zM15.82 16.72v-1.8l-1.91-1.38L12 14.92v1.8l1.91 1.38 1.91-1.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 13.54v-1.8L12 10.37l-1.91 1.37v1.8L12 14.92l1.91-1.38z"
  }));
};

const SvgHorizontalCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.92 6.26h5.75v11.51h-5.75zM4.33 3.39h5.75v17.26H4.33zM16.8 6.26V.51M16.8 23.53v-5.76M7.21 3.39V.51M7.21 23.53v-2.88"
  })));
};

const SvgHorizontalSlidersDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 3.41h16.22M20.59 3.41h2.86M.55 12h2.86M7.23 12h16.22M.55 20.59h9.54M13.91 20.59h9.54"
  }));
};

const SvgHorizontalSlidersLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.21 3.38 16.29-.01M.5 3.38h3.83M19.67 12h3.83M.5 12h16.29M13.92 20.63l9.58-.01M.5 20.63h10.54M4.33.5v5.75M16.79 9.12v5.75M11.04 17.75v5.75"
  }));
};

const SvgHospitalBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "hospital building"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h19.1M9.14 6.27h5.72M12 3.41v5.73M9.14 11.05h1.91M12.95 11.05h1.91M9.14 14.86h1.91M12.95 14.86h1.91M5.32 11.05h1.91M5.32 14.86h1.91M5.32 18.68h1.91M16.77 11.05h1.91M16.77 14.86h1.91M16.77 18.68h1.91M13.91 22.5h8.59V10.09l-2.86-1.91V1.5H4.36v6.68L1.5 10.09V22.5h8.59v-3.82h3.82v3.82z"
  })));
};

const SvgHospitalSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "hospital sign"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 17.73V6.27M15.82 6.27v11.46M15.82 12H8.18"
  })));
};

const SvgHotAirBalloon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.21 14.79a14.68 14.68 0 0 0-1.35 3.71h-3.72a14.68 14.68 0 0 0-1.35-3.71ZM18.5 8.29c0 1.81-1.65 4.39-3.29 6.5H8.79C7.15 12.68 5.5 10.1 5.5 8.29a6.5 6.5 0 0 1 13 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.79 8.29a23.5 23.5 0 0 1-1.42 6.5h-2.74a23.5 23.5 0 0 1-1.42-6.5c0-3.6 1.25-6.5 2.79-6.5s2.79 2.9 2.79 6.5ZM9.21 18.5h5.57v3.71H9.21z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotCocoa = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.23h15.27v11.33a3.94 3.94 0 0 1-3.94 3.94H5.44a3.94 3.94 0 0 1-3.94-3.94V7.23ZM19.64 8.18A2.86 2.86 0 0 1 22.5 11v1.38a5.3 5.3 0 0 1-5.3 5.3h-.42V11a2.86 2.86 0 0 1 2.86-2.82ZM3.41 1.5c1.91 1.53-1 2.29 1 3.82M13 1.5c1.91 1.53-.95 2.29 1 3.82M8.18 1.5c1.91 1.53-.95 2.29 1 3.82M9.14 12v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 10.09 9.14 12l-1.91-1.91M7.23 19.64l1.91-1.91 1.9 1.91M12 14.86H6.27M13.91 16.77 12 14.86l1.91-1.9M4.36 12.96l1.91 1.9-1.91 1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotDrinkMug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 7.23h15.27v7.64a7.64 7.64 0 0 1-7.64 7.63 7.64 7.64 0 0 1-7.64-7.64V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.75,
    y: 8.18,
    width: 5.73,
    height: 9.55,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.39 1.5c1.91 1.53-1 2.29.95 3.82M12.93 1.5c1.91 1.53-.95 2.29 1 3.82M8.16 1.5c1.91 1.53-1 2.29.95 3.82M.52 22.5H17.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotDrink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 10.09h14.32v5.25a7.16 7.16 0 0 1-7.16 7.16 7.16 7.16 0 0 1-7.16-7.16v-5.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 12h1.43a3.35 3.35 0 0 1 3.34 3.34 3.34 3.34 0 0 1-3.34 3.34h-2.39M1.5 22.5h18.14M5.32 1.5l-.48 1a2.28 2.28 0 0 0 0 1.91 2.28 2.28 0 0 1 0 1.91l-.48 1M11.05 1.5l-.48 1a2.28 2.28 0 0 0 0 1.91 2.28 2.28 0 0 1 0 1.91l-.48 1M16.77 1.5l-.47 1a2.21 2.21 0 0 0 0 1.91 2.28 2.28 0 0 1 0 1.91l-.48 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotFlame = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5A10.5 10.5 0 0 1 22.5 12v10.5h-21V12A10.5 10.5 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 16.77a5.73 5.73 0 0 1-11.46 0C6.27 12 12 7.23 12 7.23s5.73 4.77 5.73 9.54Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.74 19.44a2.74 2.74 0 0 1-5.48 0c0-2.29 2.74-4.58 2.74-4.58s2.74 2.29 2.74 4.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotFood = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M12 13.91a7.64 7.64 0 0 1 7.64 7.64v1H4.36v-1A7.64 7.64 0 0 1 12 13.91ZM12 12v1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.05,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 3.41C7.67 5.7 3 6.84 6.27 9.13M11.05 1.5c3.3 2.29-1.4 3.44 1.9 5.73M17.73 3.41c3.3 2.29-1.4 3.44 1.91 5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotSeat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 12,
    width: 21,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 15.82h17.18v6.68H3.41zM.55 22.5h22.9M7.23 15.82v6.68M12 15.82v6.68M16.77 15.82v6.68M4.36 2.45C7.67 5.13 3 6.46 6.27 9.14M11.05 1.5c3.3 2.67-1.4 4 1.9 6.68M17.73 2.45c3.3 2.68-1.4 4 1.91 6.69"
  }));
};

const SvgHotStoneMassage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.41 12.13a3.32 3.32 0 0 0-.9-.13H4.67a3.17 3.17 0 0 0-3.17 3.17v.34a3.17 3.17 0 0 0 3.17 3.17h6.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 6.27,
    width: 13.36,
    height: 5.73,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 9.55,
    height: 4.77,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 16.77h1.91v1.91a3.82 3.82 0 0 1-3.82 3.82h-1.91v-1.91a3.82 3.82 0 0 1 3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19 17.13a3.81 3.81 0 0 0-.89-4l-1.35-1.35-.36.36-1 1a3.79 3.79 0 0 0-.89 4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 16.77h1.91v1.91A3.82 3.82 0 0 1 13 22.5h-2v-1.91a3.82 3.82 0 0 1 3.86-3.82Z",
    transform: "rotate(-90 13.91 19.64)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotTemperature = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.72,
    cy: 17.74,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.54 14.9V5.3a3.83 3.83 0 0 0-7.65 0v9.6a4.74 4.74 0 0 0-1 2.84 4.79 4.79 0 0 0 9.57 0 4.67 4.67 0 0 0-.92-2.84ZM17.72 5.3v11.48M11.98.52v1.91M11.98 21.57v1.91M2.41 12H.5M11.98.52v1.91M11.98 21.57v1.91M2.41 12H.5M5.21 18.76l-1.35 1.36M5.21 5.24 3.86 3.88M5.21 18.76l-1.35 1.36M5.21 5.24 3.86 3.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 18.61a5.92 5.92 0 0 1-1 .09 6.7 6.7 0 0 1 0-13.4 6.63 6.63 0 0 1 1.91.28",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotdog = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22 5.66a3.62 3.62 0 0 1-1.07 2.59L8.25 20.93a3.67 3.67 0 1 1-5.18-5.19l.39-.37L15.37 3.46l.37-.39A3.67 3.67 0 0 1 22 5.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.37 3.46 3.46 15.37l-.88-.89a3.65 3.65 0 0 1 0-5.18L9.3 2.58a3.65 3.65 0 0 1 5.18 0ZM21.43 14.7l-6.73 6.73a3.66 3.66 0 0 1-5.18 0l-.88-.88L20.55 8.64l.88.88a3.66 3.66 0 0 1 0 5.18ZM5.56 18c1.24-1.24 1.94-.53 3.18-1.77s.54-1.94 1.78-3.18 1.94-.54 3.18-1.78.54-1.98 1.78-3.27 1.94-.54 3.18-1.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotelConcierge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.44 23.5v-7.65h19.13v7.65M23.48 15.85H.52"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.7 12a2.87 2.87 0 0 1 2.87 2.87v1h-5.74v-1A2.87 2.87 0 0 1 18.7 12ZM18.7 10.11v1.91M7.22 10.11A4.78 4.78 0 0 1 12 14.89v1H2.43v-1a4.78 4.78 0 0 1 4.79-4.78Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.35 1.5h5.74v5.74a2.87 2.87 0 0 1-2.87 2.87 2.87 2.87 0 0 1-2.87-2.87V1.5ZM4.35 5.33H12M7.22 12.98v-2.87M13.91 17.76v5.74M10.09 23.5v-5.74M10.09 20.63h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotelLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 10.09C20.59 16.77 12 22.5 12 22.5s-8.59-5.73-8.59-12.41a8.59 8.59 0 0 1 17.18 0ZM9.14 6.27v7.64M14.86 6.27v7.64M9.14 10.09h5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHotelMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 18.68h1.9M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1ZM9.14 6.27v7.64M14.86 6.27v7.64M9.14 10.09h5.72"
  }));
};

const SvgHouseDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v21H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 6.75v4.29h-3.82V6.75"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 8.18 12 5.32l3.82 2.86M7.23 14.86h9.54M7.23 18.68h9.54"
  }));
};

const SvgHouseHand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 23.5v-2.87a6.7 6.7 0 0 1 6.69-6.7h5.74a1.92 1.92 0 0 1 1.92 1.92 1.92 1.92 0 0 1-1.92 1.91h1l4.19-4.19a2 2 0 0 1 1.39-.57 2 2 0 0 1 2 2 2 2 0 0 1-.59 1.43l-4 4a3.84 3.84 0 0 1-2.7 1.12H11a1.91 1.91 0 0 0-1.87 1.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.22 7.03h9.57v6.91H7.22zM12 1.5 6.26 7.03h11.48L12 1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 11.07h1.91v2.87h-1.91z"
  }));
};

const SvgHouseHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.63 11.04v11.5H3.38v-11.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 11.04 12 2.42 1.46 11.04V12h21.08v-.96zM13.92 16.79h1.92v5.75h-1.92zM8.17 16.79h1.92v1.92H8.17zM23.5 22.54H.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 9.47V1.46h3.83v4.88M9.13 1.46H1.46"
  }));
};

const SvgHouseKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.5,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9 7.5h3v8M9 10.5h3"
  }));
};

const SvgHouseLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M4 14.5h16"
  }));
};

const SvgHouseMedal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.58,
    r: 6.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.9 14.36v7.89L12 20.3l-3.9 1.95v-7.89M13.95 7.12v4.39h-3.9V7.12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.1 8.58 12 5.66l3.9 2.92"
  }));
};

const SvgHouseMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 8.66v2.86a6.68 6.68 0 0 0 6.68 6.68V22l6.68-3.82h1a6.68 6.68 0 0 0 6.68-6.68V8.66A6.68 6.68 0 0 0 15.82 2H8.18A6.68 6.68 0 0 0 1.5 8.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 9.61h5.73v4.77H9.14zM12 5.79 8.18 9.61h7.64L12 5.79z"
  }));
};

const SvgHouseMoney = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6 22.5H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M15 22.5h6M8 22.5h6M15 19.5h6M8 19.5h6M15 16.5h6M15 13.5h6"
  }));
};

const SvgHousePaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 3.41h21v17.18h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 8.66v4.3h-3.82v-4.3"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 10.09 12 7.23l3.82 2.86M5.32 16.77h13.36"
  }));
};

const SvgHousePinLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.18C18.68 13.19 12 19 12 19S5.32 13.19 5.32 8.18a6.68 6.68 0 0 1 13.36 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.52 13.91h3.12l2.86 8.59h-21l2.86-8.59h3.13M13.91 6.75v4.29h-3.82V6.75"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 8.18 12 5.32l3.82 2.86"
  }));
};

const SvgHousePin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.22 21.33S1.75 14.8 1.75 9.2a7.47 7.47 0 1 1 14.93 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.42 15.73v6.54h-9.34v-6.54M15.75 18.53v3.74"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.22,
    cy: 9.2,
    r: 2.8,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.75 18.07 7-7 7 7"
  }));
};

const SvgHouseRealEstate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }));
};

const SvgHouseShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.5a5.28 5.28 0 0 1-4-5.12V10.5l4-1 4 1v2.88a5.28 5.28 0 0 1-4 5.12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHouseThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 10.57 12 1.98 1.5 10.57"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 17V9.61a1.91 1.91 0 0 0-3.82 0V17a2.86 2.86 0 1 0 3.82 0ZM15.82 10.57h-1.91M15.82 14.39h-1.91M7.23 22.02H4.36V8.66M16.77 22.02h2.87V8.66",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 8.18V22.5H3.41V8.18M.55 22.5h22.9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 11.04 12 1.5l11.45 9.54M9.14 14.86h5.73v7.64H9.14z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 5.48V1.5h3.82v7.16"
  }));
};

const SvgHouses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 11.04v7.64H1.5v-7.64l5.73-5.72 5.73 5.72z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 11.04v7.64h-4.77v-7.64L9.61 7.71 12 5.32l5.73 5.72z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 11.04v7.64h-4.77v-7.64l-3.34-3.33 2.38-2.39 5.73 5.72zM5.32 13.91h3.82v4.77H5.32z"
  }));
};

const SvgHut = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.25 7.23H5.75M20.59 9.38V22.5H3.41V9.38"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86h5.73v7.64H9.14zM3.41 18.68h5.73M14.86 18.68h5.73M3.41 14.86h5.73M14.86 14.86h5.73M3.41 11.05h17.18M23.45 12 12 1.5.55 12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 5.87V1.5h3.82v7.88M.55 22.5h22.9"
  }));
};

const SvgIceCreamCone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m12.65 17.14-8.19 5.09a1.94 1.94 0 0 1-2.67-2.67l5.09-8.19a2 2 0 0 0 .52.9 2.09 2.09 0 0 0 1.06.57 2 2 0 0 0 2.72 2.72 2.09 2.09 0 0 0 .57 1.06 2 2 0 0 0 .9.52Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.14 15.81a2 2 0 0 1-2.49 1.33 2 2 0 0 1-.9-.52 2.09 2.09 0 0 1-.57-1.06 2 2 0 0 1-2.72-2.72 2.09 2.09 0 0 1-1.06-.57 2 2 0 0 1-.52-.9 2 2 0 0 1 .52-2 1.92 1.92 0 0 1 .77-.48 7.1 7.1 0 0 1 2.09-5.32 7.17 7.17 0 1 1 4.88 12.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }
  }));
};

const SvgIceCreamStickFood = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a5.73 5.73 0 0 1 5.73 5.73v6.68a1.91 1.91 0 0 1-1.91 1.91H8.18a1.91 1.91 0 0 1-1.91-1.91V7.23A5.73 5.73 0 0 1 12 1.5ZM10.09 6.27v6.68M13.91 6.27v6.68M10.09 15.82h3.82v4.77A1.91 1.91 0 0 1 12 22.5a1.91 1.91 0 0 1-1.91-1.91v-4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIceCreamStick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 7.23v7.63a1.92 1.92 0 0 1-1.91 1.91H8.18a1.92 1.92 0 0 1-1.91-1.91V7.23A5.74 5.74 0 0 1 12 1.5a5.65 5.65 0 0 1 2 .35 2.46 2.46 0 0 0-.07.6 2.86 2.86 0 0 0 2.86 2.87 2.46 2.46 0 0 0 .6-.07 5.61 5.61 0 0 1 .34 1.98ZM10.09 16.77h3.82v3.82A1.91 1.91 0 0 1 12 22.5a1.91 1.91 0 0 1-1.91-1.91v-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIceCream = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.56 5.32a1.91 1.91 0 0 0 .33 1.07 1.89 1.89 0 0 0-1.28 1.79 1.85 1.85 0 0 0 .66 1.43 1.89 1.89 0 0 0-.1 2.78l-3 2.95a6.07 6.07 0 0 1-8.54-8.59l3.47-3.47a6.07 6.07 0 0 1 8.59 0 4.29 4.29 0 0 1 .53.61 1.88 1.88 0 0 0-.66 1.43ZM1.47 22.5l7.16-7.16M11.97 7.23v6.68M15.79 4.36v6.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIceCreams = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.22 16.77h-6A1.79 1.79 0 0 1 2.45 15a2.11 2.11 0 0 1 0-.25L4.15 3a1.77 1.77 0 0 1 1.76-1.5h4.31A1.78 1.78 0 0 1 12 3.28V15a1.78 1.78 0 0 1-1.78 1.77ZM13.78 16.77h6A1.79 1.79 0 0 0 21.55 15a2.11 2.11 0 0 0 0-.25L19.85 3a1.77 1.77 0 0 0-1.76-1.5h-4.31A1.78 1.78 0 0 0 12 3.28V15a1.78 1.78 0 0 0 1.78 1.77ZM5.32 16.77h3.82v3.82a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-3.82ZM14.86 16.77h3.82v3.82a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIdCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21zM4.36 8.18H12M4.36 12H12M4.36 15.82h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 8.18h3.82V12h-3.82z"
  }));
};

const SvgIdentificationCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "id card"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 12h0A2.86 2.86 0 0 1 11 14.86v1h0-5.68 0v-1A2.86 2.86 0 0 1 8.18 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.09,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 8.18h0ZM19.64 12h0ZM19.64 15.82h0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgIgloo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.89 12a2.39 2.39 0 0 1 2.39 2.39v4.3H1.5v-4.3A2.39 2.39 0 0 1 3.89 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.89 12H7.7a2.39 2.39 0 0 1 2.39 2.39v4.3H3.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 12a8.59 8.59 0 0 1 17.18 0v6.69H5.32M7.23 7.18h14.32M11.05 11H22.5M10.09 14.82h10.5M15.82 18.64v-3.82M18.68 14.82V11M15.82 11V7.18M12.95 7.18V3.36M12.95 14.82V11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgImageChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 13.89h-7.37l.8-1.26 2.88-4.47 3.69 5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m11.16 12.63-.8 1.26H6.27l2.87-4.3 2.02 3.04z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 6.73,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgImageGallery = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 19.64 6.68-6.68 5.73 5.72 3.82-3.82 4.77 4.78"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 8.18,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgImageMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 13.89h-7.37l.8-1.26 2.88-4.47 3.69 5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m11.16 12.63-.8 1.26H6.27l2.87-4.3 2.02 3.04z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 6.73,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgImage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 9.13h13.43v13.43H1.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.85 22.55-4.79-7.67-2.98 4.78M9.1 22.55H2.39l.73-1.05 2.62-3.74 3.36 4.79z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.74,
    cy: 13.44,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.47 1.45h1.92M.47 5.29h1.92M4.3 1.45h1.92M8.14 1.45h1.92M11.98 1.45h1.91M15.81 1.45h1.92M19.65 1.45h1.92M21.57 3.37h1.91M21.57 7.21h1.91M21.57 11.05h1.91M21.57 14.88h1.91M21.57 18.72h1.91M21.57 22.55h1.91M17.73 22.55h1.92"
  })));
};

const SvgInboxMailbox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.16h13.36a7.64 7.64 0 0 1 7.64 7.64v3.82h-21V9.16ZM5.32 9.16v11.45M12 1.52v14.32M12 1.52h4.77v3.82H12z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 23.48v-2.87h3.82v2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.89,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIncognitoWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v5.73h-21zM1.5 7.23h21V22.5h-21zM4.36 4.36h1.91M8.18 4.36h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 14.86H8.18l.96-4.77h.95l1.91.95 1.91-.95h.95l.96 4.77zM5.32 14.86h13.36"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 18.68h3.82"
  }));
};

const SvgIncognito = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 11.04h23M19.67 11H4.33L5 4.68a2.54 2.54 0 0 1 2.57-2.26 2.47 2.47 0 0 1 1.13.27 7.43 7.43 0 0 0 6.6 0 2.47 2.47 0 0 1 1.13-.27A2.54 2.54 0 0 1 19 4.68Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.73,
    cy: 18.23,
    r: 3.35,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.27,
    cy: 18.23,
    r: 3.35,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.08 18.71a1.92 1.92 0 1 1 3.84 0M1.46 15.83h2.87M19.67 15.83h2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIncreaseVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.85 12h7.65M19.67 8.17v7.66M1.5 8.17h4.78v7.65H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.94 3.39v17.22h-1.68l-5.98-4.78V8.17l5.98-4.78h1.68z"
  }));
};

const SvgIndentLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.38h23M.5 9.13h14.38M.5 14.88h14.38M.5 20.63h23M18.71 9.13 21.58 12l-2.87 2.88"
  }));
};

const SvgIndentRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.4h23M.5 9.15h14.38M.5 15.85h14.38M.5 21.6h23M22.54 14.9l-2.87-2.88 2.87-2.87"
  }));
};

const SvgIndonesiaBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 19.64a1 1 0 0 1 1 1v1.86h-2v-1.91a1 1 0 0 1 1-1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 22.5H5.32v-1.91l.95-.89v-2.93h11.46v2.87l.95.95v1.91zM19.64 16.77H4.36M7.23 12.95h9.55v3.82H7.23zM18.68 12.95H5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 9.14h7.64v3.82H8.18zM17.73 9.14H6.27M9.14 5.32h5.73v3.82H9.14zM16.77 5.32H7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 1.5ZM.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgIndonesiaTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 18.69H4.33l.35-3.86A7.35 7.35 0 0 1 12 8.15a7.35 7.35 0 0 1 7.32 6.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.88 8.15H9.13l.95-3.84h3.84l.96 3.84zM12 .48v3.83M3.38 18.69h17.25l.95 3.83H2.42l.96-3.83zM.5 22.52h23M7.5 15.14l1.34 1.34M11.33 15.14l1.34 1.34M9.41 11.31l1.34 1.34M13.25 11.31l1.34 1.34M15.16 15.14l1.34 1.34"
  }));
};

const SvgInfoChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82ZM10.09 13.89h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 8.16H12v5.73M11.05 5.3h1.9"
  }));
};

const SvgInfoCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 16.77v-6.68h-1.91M10.09 16.77h3.82M11.05 7.23h1.9"
  }));
};

const SvgInfoMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 13.89h3.82M10.09 8.16H12v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3ZM11.05 5.3h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgInkBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M8.18 14.86h7.64v3.82H8.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32v4.77A9.22 9.22 0 0 0 1.5 19v1.64a1.9 1.9 0 0 0 1.91 1.86h17.18a1.9 1.9 0 0 0 1.91-1.91V19a9.22 9.22 0 0 0-6.68-8.86V5.32M6.27 1.5h11.45v3.82H6.27z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgInkPen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.38 2h15.24v1a2.86 2.86 0 0 1-2.86 2.86H7.24A2.86 2.86 0 0 1 4.38 3V2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 22-6.67-7.62 1.91-8.57h9.52l1.91 8.57L12 22z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.52,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22v-9.52"
  }));
};

const SvgInstagram = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 5.8,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgInterset = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 15.83H1.46V1.45h14.39v4.79M17.76 8.16h4.8v14.39H8.17v-4.8M7.21 12h1.92M7.21 8.16h1.92M11.05 8.16h1.92M11.05 15.83h1.92M14.89 15.83h1.91M14.89 12h1.91M14.89 8.16h1.91M7.21 15.83h1.92"
  })));
};

const SvgIntestine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32.55a1.9 1.9 0 0 0 1.91 1.9h8.59a3.82 3.82 0 0 1 3.82 3.82 3.82 3.82 0 0 1-3.82 3.82H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5.55a5.72 5.72 0 0 0 5.73 5.72 3.82 3.82 0 0 0-3.82 3.82 3.82 3.82 0 0 0 3.82 3.82H5.32a3.82 3.82 0 0 0-3.82 3.82 3.82 3.82 0 0 0 3.82 3.82h11.45a1.9 1.9 0 0 1 1.91 1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 10.09h12.41a3.82 3.82 0 0 1 3.82 3.82 3.82 3.82 0 0 1-3.82 3.82h-1.91a5.72 5.72 0 0 1 5.73 5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgItalic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.95 1.5h6.69M4.36 22.5h6.69M16.77 1.5l-9.54 21"
  }));
};

const SvgJamJar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 1.5,
    width: 11.45,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 9.61c1.11 0 1.11-.95 2.23-.95s1.11.95 2.23.95 1.11-.95 2.23-.95 1.11.95 2.22.95 1.12-.95 2.23-.95 1.11.95 2.22.95l1-.47-2.91-3.82H7.23L4.36 9.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 9.14v10.5a2.86 2.86 0 0 1-2.86 2.86H8.18a2.86 2.86 0 0 1-2.86-2.86V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 15.82c0 1.05-.86 2.86-1.91 2.86s-1.91-1.81-1.91-2.86a1.91 1.91 0 0 1 3.82 0ZM12 12v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJarHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.74 13a2.23 2.23 0 0 0-1.74.77 2.23 2.23 0 0 0-1.74-.77 1.93 1.93 0 0 0-2.08 1.72c0 2.58 3.82 4 3.82 4s3.82-1.43 3.82-4A1.93 1.93 0 0 0 13.74 13Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 8.18V5.32H8.18v2.86a6.42 6.42 0 0 0-2.86 5.35v7.06a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91v-7.06a6.42 6.42 0 0 0-2.86-5.35ZM9.14 1.5h5.73v3.82H9.14zM17.73 5.32H6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.5h9.55v3.82H7.23z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 9.61c1.11 0 1.11-.95 2.23-.95s1.11.95 2.23.95 1.11-.95 2.23-.95 1.11.95 2.22.95 1.12-.95 2.23-.95 1.11.95 2.22.95l1-.47-2.91-3.82H7.23L4.36 9.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 9.14v10.5a2.86 2.86 0 0 1-2.86 2.86H8.18a2.86 2.86 0 0 1-2.86-2.86V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 13.91,
    width: 5.73,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJeep = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.87 17.8H12M7.71 17.8H5.32v-5.73l.95-5.73h11.46l1.91 5.73h2.86v5.73h-1.96"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 18.27,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 18.27,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 12.07H8.18M12.95 8.25v3.82"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.2,
    width: 3.82,
    height: 6.68,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJersey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 11.05V22.5H3.41V11.05c3.82 0 2.86-5.33 2.86-9.55h11.46c0 4.22 0 9.55 2.86 9.55Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5c0 3.69-1.28 6.68-2.86 6.68s-2.86-3-2.86-6.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJesusBrazil = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 16.77V5.32h7.64v3.82a7.64 7.64 0 0 1-7.64 7.63ZM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5ZM15.82 5.32h4.77v2.86l-4.77 1.91V5.32zM8.18 5.32H3.41v2.86l4.77 1.91V5.32zM.55 5.32h2.86M23.45 5.32h-2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 12.77v9.73H9.14v-5.73M2.45 22.5h19.1"
  }));
};

const SvgJug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.88V5.32H9.14v3.56a4.31 4.31 0 0 1-1.73 3.46l-.36.27a4.33 4.33 0 0 0-1.73 3.46 4.23 4.23 0 0 0 .22 1.37l1.69 5.06h8.59l1.69-5.06a4.52 4.52 0 0 0 .22-1.37A4.33 4.33 0 0 0 16 12.61l-.36-.27a4.31 4.31 0 0 1-1.73-3.46ZM8.18 1.5h6.68v3.82H8.18z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.4 13a2.39 2.39 0 0 0-.1-4.77A2.41 2.41 0 0 0 14 9.85M9.14 14.86h4.77v3.82H9.14z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJumpRope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 14.86h3.82v5.73a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-5.73ZM.55 14.86h7.63M17.73 14.86h3.82v5.73a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-5.73ZM15.82 14.86h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 14.86V6.27A4.78 4.78 0 0 1 9.14 1.5h11a2.39 2.39 0 0 1 2.36 2.39 2.39 2.39 0 0 1-2.39 2.38h-10a1.92 1.92 0 0 0-1.93 1.91 1.91 1.91 0 0 0 1.91 1.91h6.68A2.87 2.87 0 0 1 19.64 13v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgJumper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.89 5.32H8.11A5.59 5.59 0 0 0 3.24 8a13 13 0 0 0-1.74 6.54v6.05h3.82a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91h3.82v-6.05A13 13 0 0 0 20.76 8a5.59 5.59 0 0 0-4.87-2.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 1.5h7.64v3.82H8.18zM5.32 10.09v10.5M18.68 10.09v10.5M5.32 11.04l2.22 1.92 2.23-1.92 2.22 1.92 2.23-1.92 2.23 1.92 2.23-1.92M5.32 15.82l2.22 1.91 2.23-1.91 2.22 1.91 2.23-1.91 2.23 1.91 2.23-1.91"
  }));
};

const SvgJustifyAll = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 8.17h23M.5 15.83h23M.5 22.54h23"
  }));
};

const SvgJustifyCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 1.5h22.9M.55 8.18h22.9M.55 15.82h22.9M5.32 22.5h13.36"
  }));
};

const SvgJustifyLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 8.17h23M.5 15.83h23M.5 22.54h12.46"
  }));
};

const SvgJustifyRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 1.46H.5M23.5 8.17H.5M23.5 15.83H.5M23.5 22.54H9.13"
  }));
};

const SvgJustify = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 2.42h23M.5 12h23M.5 21.58h23"
  }));
};

const SvgKabab = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.06 5.6a2.82 2.82 0 0 0-1.24-.28A2.86 2.86 0 0 0 13 8.18a2.89 2.89 0 0 0 2.87 2.87 2.86 2.86 0 0 0 2.86-2.87 2.82 2.82 0 0 0-.28-1.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.24 9.42A2.82 2.82 0 0 0 12 9.14 2.86 2.86 0 0 0 9.14 12 2.87 2.87 0 0 0 12 14.86 2.86 2.86 0 0 0 14.86 12a2.82 2.82 0 0 0-.28-1.24M1.5 22.5l8.59-8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgKeyMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 3.45h1.91a1.91 1.91 0 0 1 1.91 1.91v11.46a1.91 1.91 0 0 1-1.91 1.91H3.41a1.91 1.91 0 0 1-1.91-1.91V5.36a1.91 1.91 0 0 1 1.91-1.91h15.27ZM12 22.55v-3.82M16.77 22.55H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 7.27 13 9.18H6.27l-1.91 1.91L6.27 13H13l1 1.91h2.86a2.87 2.87 0 0 0 2.87-2.86v-1.91a2.87 2.87 0 0 0-2.87-2.87ZM9.14 11.09V13M16.77 10.14v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgKeyWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 15.83,
    cy: 13.96,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.11 16.84v-2.88M1.44 1.49h21.1v21.1H1.44z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 7.25H1.44V1.49h21.1v5.76zM4.32 4.37h1.91M8.15 4.37h1.92M11.99 4.37h1.92M6.24 16.84v-2.88h7.67"
  })));
};

const SvgKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 1.5h-3.82l-9.79 9.79a5.7 5.7 0 1 0 3.82 3.82l9.79-9.79Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 10.09 1.44 1.43M17.73 7.23l.95.95"
  }));
};

const SvgKeyboardPointerUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 6.29 12 2.48l3.82 3.81"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.16,
    width: 21,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 18.7h7.64M5.32 15.84h1.91M9.14 15.84h1.91M12.95 15.84h1.91M16.77 15.84h1.91M5.32 12.98h1.91M9.14 12.98h1.91M12.95 12.98h1.91M16.77 12.98h1.91"
  }));
};

const SvgKeyboardTyping = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 5.32,
    width: 21,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 14.86h7.64M5.32 12h1.91M9.14 12h1.91M12.95 12h1.91M16.77 12h1.91M5.32 9.14h1.91M9.14 9.14h1.91M12.95 9.14h1.91M16.77 9.14h1.91"
  }));
};

const SvgKeyboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.11,
    width: 21,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 18.66h7.64M5.32 15.8h1.91M9.14 15.8h1.91M12.95 15.8h1.91M16.77 15.8h1.91M5.32 12.93h1.91M9.14 12.93h1.91M12.95 12.93h1.91M16.77 12.93h1.91M8.18 9.11V3.39a1.91 1.91 0 0 1 1.91-1.91A1.9 1.9 0 0 1 12 3.39a1.91 1.91 0 0 0 1.91 1.91 1.92 1.92 0 0 0 1.91-1.91V.52"
  }));
};

const SvgKeycard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 4.36,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 8.18h21"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 16.77v-2.86h9.54M9.14 16.77v-2.86"
  }));
};

const SvgKeys = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 11.05H12l1-2.87h8.6l.95-1.91-.95-1.91H13L12 1.5H7.23a2.87 2.87 0 0 0-2.87 2.86v3.82a2.88 2.88 0 0 0 2.87 2.87ZM8.18 8.18V4.36M18.68 6.27V4.36M15.82 6.27V4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 8.18 15.79 11l-1.35 2.7 2 2 2 2 2 2-.66 2-2 .68-6.08-6.07L9 17.78 5.67 14.4a2.86 2.86 0 0 1-.13-3.91M10.38 11.05l-2.01 2M17.14 19.13l1.35-1.35M15.12 17.1l1.35-1.35",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.89 12.93a3.82 3.82 0 0 1-.53-7.49 3.82 3.82 0 0 1 3.82 1.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgKgWeight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m16.88 8.57 1.61-3.76a2.45 2.45 0 0 0 .19-.93 2.37 2.37 0 0 0-2.37-2.38H7.69a2.37 2.37 0 0 0-2.37 2.38 2.45 2.45 0 0 0 .19.93l1.61 3.76",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23a9.55 9.55 0 0 0-9.55 9.54v.65a8.64 8.64 0 0 0 .6 3.18 2.86 2.86 0 0 0 .79 1.12A3.37 3.37 0 0 0 6 22.5h12a3.33 3.33 0 0 0 2.15-.77 2.72 2.72 0 0 0 .77-1.09 8.59 8.59 0 0 0 .61-3.37v-.49A9.55 9.55 0 0 0 12 7.23ZM7.23 12v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 12v1a2.86 2.86 0 0 1-2.86 2.87 2.86 2.86 0 0 1 2.86 2.86v1M14.86 15.82h1.91v.95a1.9 1.9 0 0 1-1.91 1.91A1.91 1.91 0 0 1 13 16.77v-1.91A1.92 1.92 0 0 1 14.86 13h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgKidScooter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 1.5h-4.77l2.29 15.27.28 1.93"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 20.59h9.54l2.87-3.82h2.29"
  }));
};

const SvgKidneys = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5 14.89a3.53 3.53 0 0 1-3.5-3.53v-6a3.82 3.82 0 0 1 3.82-3.84 3.82 3.82 0 0 1 3.82 3.82v.74a3.11 3.11 0 0 1 0 .43l-.58 5.24A3.53 3.53 0 0 1 5 14.89ZM19 14.89a3.53 3.53 0 0 0 3.53-3.53v-6a3.82 3.82 0 0 0-3.82-3.82 3.82 3.82 0 0 0-3.82 3.82v.74a3.11 3.11 0 0 0 0 .43l.58 5.24A3.53 3.53 0 0 0 19 14.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 8.2A5.73 5.73 0 0 1 12 13.93v9.55M17.73 8.2A5.73 5.73 0 0 0 12 13.93v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLabAppliance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 3.43,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 3.43V18.7M17.73 14.89h1.91M17.73 11.07h1.91M6.27 8.2h3.82v8.67a1.83 1.83 0 0 1-1.83 1.83H8.1a1.83 1.83 0 0 1-1.83-1.83V8.2ZM12 8.2H4.36M6.27 12.02h3.82M4.36 21.57V18.7M19.64 21.57V18.7M17.73 7.25h1.91"
  }));
};

const SvgLabCoat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16 1.5H8a6.52 6.52 0 0 0-4.59 1.91A6.52 6.52 0 0 0 1.5 8v6.84h3.82v7.66h13.36v-7.64h3.82V8a6.52 6.52 0 0 0-1.91-4.61A6.52 6.52 0 0 0 16 1.5ZM5.32 7.23v7.63M18.68 7.23v7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 1.5 1.91 3.82-.95.95v1.91L12 11.04 8.18 8.18V6.27l-.95-.95L9.14 1.5M9.14 1.5 12 7.23M12 7.23l2.86-5.73M12 11.05V7.23M12 22.5V11.05M14.86 16.77h3.82M5.32 16.77h3.82"
  }));
};

const SvgLabTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.07 6.75-3.82-3.82-6.66 6.66a6.68 6.68 0 1 0 3.82 3.82ZM15.82 1.5l6.68 6.68M1.5 14.86h13.36M5.32 18.68h1.91M10.09 17.73H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLabToolCurve = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 14.86h4.78a6.68 6.68 0 0 0 6.68-6.68 6.68 6.68 0 0 0-6.68-6.68H6.27v3.82h4.78a2.86 2.86 0 0 1 2.86 2.86 2.87 2.87 0 0 1-2.86 2.87H6.27ZM6.27 14.86h3.82v5.73a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-5.73ZM6.27 7.23V5.32M6.27 11.05V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLaboratoryList = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 22.5H1.5v-21h17.18v6.68"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 15.39v-4.34h-3.82v4.34a3.82 3.82 0 1 0 3.82 0ZM22.5 11.05h-7.64M14.86 17.73h4.78M4.36 6.27h1.91M4.36 10.09h1.91M4.36 13.91h1.91M8.18 6.27h7.64M8.18 10.09h4.77M8.18 13.91h4.77M4.36 17.73h1.91M8.18 17.73h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLaboratoryTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.39 1.5h7.63M1.52 13.91h9.55M10.11 9.42V1.5H6.3v7.92a6.69 6.69 0 1 0 3.81 0ZM17.75 7.23h3.82v13.36a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V7.23ZM15.84 7.23h7.64M17.75 12h3.82"
  }));
};

const SvgLaboratoryTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.68 9.14v10.5a2.86 2.86 0 0 1-2.86 2.86H7.27a2.86 2.86 0 0 1-2.86-2.86V9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 12.045 10.09)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.14 1.5h3.82v17.18h-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.14 14.86h3.81M4.41 16.77h2.86M13.95 16.77h5.73M10.14 10.09h3.81"
  }));
};

const SvgLadderTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 .5-9.58 23M21.58.5 12 23.5M10.08 4.33h9.59M8.17 9.13h9.58M6.25 13.92h9.58M4.33 18.71h9.59"
  }));
};

const SvgLadderTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.24,
    cy: 16.78,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.72,
    cy: 16.78,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.15 16.78h5.74V12H1.46v4.78h2.87M19.63 16.78h2.87V12l-1.91-.96-1.92-5.74h-4.78v11.48h1.91M20.59 11.04h-3.83M10.07 8.17V12M6.24 8.17V12M2.41 8.17V12M13.89 8.17H.5"
  }));
};

const SvgLadder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.67H4.39M13.29 14.89H5.64M14.53 10.11H7.22M8.17 5.33h7.66M3.39 23.5l5.74-22h7.65l-5.74 22M20.61 23.5 15.83 5.16"
  }));
};

const SvgLadyLiberty = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m15.38 15.8.45 6.7H8.17l1-14.35H14a1 1 0 0 1 1 .9l.19 2.8a1.92 1.92 0 0 1-1.91 2H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.37a1.91 1.91 0 0 1 1.91 1.91v2.87h-3.82V5.28A1.91 1.91 0 0 1 12 3.37ZM5.3.5v5.74l3.83 1.91M5.3 6.24v2.87l3.48 4.34M15.83 18.67h-1.92a5.73 5.73 0 0 1-5.25-3.43M3.39 3.37h3.83M3.39 22.5h17.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 11.04H6.27L8.18 1.5h7.64l1.91 9.54zM6.27 22.5h11.46M12 11.05V22.5M15.82 11.05v3.81"
  }));
};

const SvgLandmarkChurch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.87 11.02.96 11.48H8.17l.96-11.48 1.91-4.78h1.92l1.91 4.78zM12 .5v5.74M10.09 2.41h3.82M14.87 11c1.91 4.78 4.78 6.7 7.65 7.65v3.85h-6.69L14.87 11"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 11c-1.91 4.78-4.78 6.7-7.65 7.65v3.85h6.69L9.13 11M12 18.67v3.83M12 12.93v1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLandscape = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.09 22h21.82M1.55 12.45l2.53-2.53a2.19 2.19 0 0 1 1.56-.65 2.16 2.16 0 0 1 1.55.65L19.27 22"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12 14.73 2.08-2.09a2.22 2.22 0 0 1 1.56-.64 2.2 2.2 0 0 1 1.55.64l5.72 5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.45,
    cy: 4.27,
    r: 2.27,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLanguageTranslation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 3.35H12M6.25.48v2.87M9.12 3.35c0 3.52-3.28 8.2-7.66 10.55"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.51 7.37A16.4 16.4 0 0 0 11 13.9M12.96 22.52l3.83-10.54h.96l3.83 10.54M20.43 18.69h-5.36M11.04 22.52h3.84M19.67 22.52h3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLanternFireLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 18.68h11.45v3.82H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.77V1.5H9.14v.75a17.21 17.21 0 0 1-2.2 8 5.73 5.73 0 1 0 10-.23 16.21 16.21 0 0 1-2.08-8.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 16.77a1.91 1.91 0 1 1-3.82 0C10.09 14.86 12 13 12 13s1.91 1.86 1.91 3.77ZM3.41 22.5h17.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLantern = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 18.68h11.45v3.82H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.9V5.32h-3.82V8.9a3.62 3.62 0 0 1-.71 2.15L7.94 13a3.62 3.62 0 0 0-.71 2.15 3.58 3.58 0 0 0 3.58 3.58h2.38a3.58 3.58 0 0 0 3.58-3.58 3.62 3.62 0 0 0-.71-2.15l-1.44-1.9a3.62 3.62 0 0 1-.71-2.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 16.77a1.91 1.91 0 1 1-3.82 0C10.09 14.86 12 13 12 13s1.91 1.86 1.91 3.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m17.73 18.68 2.86-2.86V9.14A7.64 7.64 0 0 0 13 1.5h-1.9a7.64 7.64 0 0 0-7.69 7.64v6.68l2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLaptopLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 3.41h13.36a1.91 1.91 0 0 1 1.91 1.91v11.45H3.41V5.32a1.91 1.91 0 0 1 1.91-1.91ZM1.5 16.77h21v1.91a1.91 1.91 0 0 1-1.91 1.91H3.41a1.91 1.91 0 0 1-1.91-1.91v-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 12 2.86-2.86 1.92 1.9 2.86-2.86"
  }));
};

const SvgLaptopLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.64a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86 1.9 1.9 0 0 1 1.91-1.91h5.73l.95.95h3.82l.95-.95h5.73a1.9 1.9 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.74 5.32h2.94a1.92 1.92 0 0 1 1.91 1.91v10.5h-5.73l-.95.95h-3.82l-.95-.95H3.41V7.23a1.92 1.92 0 0 1 1.91-1.91h2.94",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 5.08c0 2.39-3.82 6-3.82 6s-3.82-3.58-3.82-6A3.7 3.7 0 0 1 12 1.5a3.7 3.7 0 0 1 3.82 3.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgLaptopScreen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 3.41h13.36a1.91 1.91 0 0 1 1.91 1.91v11.45H3.41V5.32a1.91 1.91 0 0 1 1.91-1.91ZM1.5 16.77h21v1.91a1.91 1.91 0 0 1-1.91 1.91H3.41a1.91 1.91 0 0 1-1.91-1.91v-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 1.5h13.36a1.91 1.91 0 0 1 1.91 1.91v11.45H3.41V3.41A1.91 1.91 0 0 1 5.32 1.5ZM20.59 14.86H3.41l-1.83 5.48a1.82 1.82 0 0 0-.08.52 1.65 1.65 0 0 0 1.64 1.64h17.72a1.65 1.65 0 0 0 1.64-1.64 1.82 1.82 0 0 0-.08-.52ZM10.09 19.64h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLargeBus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 5.36h17.18a1.91 1.91 0 0 1 1.91 1.91v9.55h-21V7.27a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 18.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 18.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 18.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 18.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 11.09h21M6.27 5.36v5.73M12 5.36v5.73M17.73 5.36v5.73"
  }));
};

const SvgLaunchRocket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13.11 16.55-5.66-5.66 7.27-7.27a7.24 7.24 0 0 1 7.41-1.75 7.24 7.24 0 0 1-1.75 7.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 14.85,
    cy: 9.09,
    rx: 0.94,
    ry: 0.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.57 17.26-2.83-2.83 1.42-2.83 4.24 4.24-2.83 1.42z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.88 14.11a4 4 0 0 1 4 4v3a4 4 0 0 1-4-4v-3Z",
    transform: "rotate(45 14.875 17.611)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.39 5.62v3a4 4 0 0 1-4 4v-3a4 4 0 0 1 4-4Z",
    transform: "rotate(-135 6.393 9.126)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.73 16.27A3 3 0 0 1 8 16a3 3 0 0 1-.27 4.27C5.45 22.55 1.5 22.5 1.5 22.5s-.05-3.95 2.23-6.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLaundryService = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.86h2.08a1.74 1.74 0 0 0 1.74-1.73 1.76 1.76 0 0 0-1-1.6L12 7.23l-9.48 4.3a1.76 1.76 0 0 0-1 1.6 1.74 1.74 0 0 0 1.74 1.73h2.06M12 7.23V7a2.54 2.54 0 0 1 1.13-2 1.91 1.91 0 1 0-3-1.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 13h9.55a1.91 1.91 0 0 1 1.91 1.91v7.59H5.32v-7.64A1.91 1.91 0 0 1 7.23 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLayers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21.54 8.18-9.59 5.75-9.59-5.75 9.59-5.76 9.59 5.76zM18.35 13.93l3.19 1.92-9.59 5.75-9.59-5.75 3.19-1.92"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.55 10.09-3.19 1.92 3.19 1.92 6.4 3.84 6.4-3.84 3.19-1.92-3.19-1.92"
  })));
};

const SvgLayoutHalfVertical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 17.27 12.035)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 1.49h10.55v21.1H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 6.72 12.035)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 1.49H12v21.1H1.45z"
  })));
};

const SvgLayoutHalf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 1.49h8.63v21.1H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 16.32 6.76)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.08 1.49h12.47v10.55H10.08z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 16.32 17.31)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.08 12.04h12.47v10.55H10.08z"
  })));
};

const SvgLayoutThree = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 1.49h21.1V8.2H1.46zM1.46 8.2h6.71v14.39H1.46zM15.84 8.2h6.71v14.39h-6.71zM8.17 8.2h7.67v14.39H8.17z"
  })));
};

const SvgLayoutVertical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 15.825 12.035)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.11 1.49h13.43v21.1H9.11z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.44 1.49h7.67v21.1H1.44z"
  })));
};

const SvgLeafGlobe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.15 13.91a9.35 9.35 0 0 0 .44-2.86 9.55 9.55 0 1 0-9.54 9.54 9.35 9.35 0 0 0 2.86-.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.15 13.91a9.35 9.35 0 0 0 .44-2.86 9.55 9.55 0 1 0-9.54 9.54 9.35 9.35 0 0 0 2.86-.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.23 17.73a9.55 9.55 0 0 1 6.82-2.87 9.42 9.42 0 0 1 3.37.62 6.13 6.13 0 0 1 .79.35M4.23 4.36a9.35 9.35 0 0 0 3.44 2.25 9.44 9.44 0 0 0 3.38.62 9.42 9.42 0 0 0 3.37-.62 9.35 9.35 0 0 0 3.44-2.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 11.05,
    cy: 11.05,
    rx: 3.82,
    ry: 9.55,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 11.05,
    cy: 11.05,
    rx: 3.82,
    ry: 9.55,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.34 13.91h3.16v3.16a5.43 5.43 0 0 1-5.43 5.43h-3.16v-3.16a5.43 5.43 0 0 1 5.43-5.43Z",
    transform: "rotate(180 18.205 18.205)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.82 17.59-4.91 4.91M1.5 11.05h19.09"
  }));
};

const SvgLeafMagnifyingGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 10.09,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-5.73-5.73M6.27 6.27h2.46A4.23 4.23 0 0 1 13 10.5V13h-2.5a4.23 4.23 0 0 1-4.23-4.27V6.27ZM14.86 14.86 8.88 8.88"
  }));
};

const SvgLeafMaple = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 7.24v2.29a5.34 5.34 0 0 1-3 4.82 4.21 4.21 0 0 1 1.11 2.83v1.54H16.2a4.19 4.19 0 0 1-4.2-3.83 4.19 4.19 0 0 1-4.2 3.83H3.39v-1.54a4.21 4.21 0 0 1 1.11-2.83 5.34 5.34 0 0 1-3-4.82V7.24h5.13a4.94 4.94 0 0 1 1 .09A9.81 9.81 0 0 1 12 1.5a9.81 9.81 0 0 1 4.42 5.83 4.94 4.94 0 0 1 .95-.09ZM12 7.24V23.5M6.26 11.07 12 14.89M16.78 11.07 12 13.93",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLeafPeach = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.47 13.75a8.42 8.42 0 0 1 .07 1 7.35 7.35 0 1 1-7.35-7.35 7.61 7.61 0 0 1 2.1.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.9a13.52 13.52 0 0 1 1.83 12.86c-2.72 7.34-5.23 7.17-5.23 7.17M20.29 1.9s2.76 2.75.92 5.51-5.51 1.83-5.51 1.83-.92-2.75.92-4.59c1.45-1.45 2.76-.92 3.67-2.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLeafShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5c-5-1.11-8.59-6-8.59-11.64V5.32L12 1.5l8.59 3.82v5.54c0 5.66-3.59 10.53-8.59 11.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 7.79h2.46A4.23 4.23 0 0 1 15.34 12v2.46h-2.45a4.23 4.23 0 0 1-4.23-4.23V7.79Z",
    transform: "rotate(45 12.003 11.122)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 18.55v-8.46"
  }));
};

const SvgLeafTag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a2.67 2.67 0 0 0-1.69.61l-5 4.16V22.5h13.37V6.27l-5-4.16A2.67 2.67 0 0 0 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12H11a3.29 3.29 0 0 1 3.29 3.29v1.91h-1.87a3.29 3.29 0 0 1-3.29-3.29V12h.01ZM15.82 18.68l-1.91-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLeaf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.64 19.09a5.43 5.43 0 0 1-4.16 2.08h-1a7.41 7.41 0 0 1-5.07-2.08C1 12 12 2 12 2l5 7.45a8.29 8.29 0 0 1-.36 9.64ZM11.97 9.3V23M8.32 14.78l3.65 3.65M14.71 12.04l-2.74 2.74",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLeaningTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3.57 22.5 1.38-7.84 13.16 2.32-.97 5.52M11.03 18.64l-.68 3.86M14.79 19.3l-.56 3.2M7.27 17.98l-.8 4.52"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(10 12.096 12.532)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.38 9.19h11.45v6.68H6.38z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.07 12.39-.66 3.76M10.31 11.73l-.66 3.76"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(10 13.245 5.924)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.5 2.61h9.55v6.68H8.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.35 5.48-.66 3.76M5.17 7.91l15.04 2.66M7.27 1.5l13.16 2.32M.55 22.5h22.9"
  }));
};

const SvgLeftOrientation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.88 6.27h5.75v11.51h-5.75zM4.28 3.39h5.75v17.26H4.28zM13.88 23.53V.52M4.28 23.53V.52"
  })));
};

const SvgLeftRightMove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m19.64 7.23 2.86-2.87-2.86-2.86M4.36 7.23 1.5 4.36 4.36 1.5M15.56 4.36H22.5M12.29 4.36H1.5M12 13V6.27a1.87 1.87 0 0 0-.56-1.34 1.89 1.89 0 0 0-1.52-.56 2 2 0 0 0-1.74 2v9.44L6.86 14.5a2 2 0 0 0-1.43-.59 2 2 0 0 0-2 2A2 2 0 0 0 4 17.36l5.14 5.14"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13V5.42a2 2 0 0 1 1.44-1.95 1.92 1.92 0 0 1 2.38 1.85v7.22l3.13.27a1.8 1.8 0 0 1 1.64 1.8 17.25 17.25 0 0 1-1.82 7.72l-.09.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLeftRightVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.14 17.6a34.11 34.11 0 0 1 5.86-.48 34.11 34.11 0 0 1 5.86.48M22.75 20.05V4.42M1.25 20.05V4.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.25 20.05c0 1 2 1.94 4.89 2.46V6.88C3.2 6.35 1.25 5.45 1.25 4.42 1.25 2.8 6.06 1.49 12 1.49S22.75 2.8 22.75 4.42c0 1-1.95 1.93-4.89 2.46v15.63c2.94-.52 4.89-1.42 4.89-2.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.95 8.33 1.96 1.95-1.96 1.95M10.05 8.33l-1.96 1.95 1.96 1.95"
  }));
};

const SvgLevelTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 7.23V12H7.23V7.23H1.5v9.54h21V7.23h-5.73zM7.23 8.18h9.54M13.91 14.86v1.91M17.73 14.86v1.91M6.27 14.86v1.91M10.09 14.86v1.91"
  }));
};

const SvgLibrary = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 5.32h9.55v3.82H7.23zM20.59 22.5H5.32A1.91 1.91 0 0 1 4 19.24a1.89 1.89 0 0 1 1.35-.56h15.24M19.64 18.68v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 1.5v17.18H5.32a1.91 1.91 0 0 0-1.91 1.91V3.41A1.92 1.92 0 0 1 5.32 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLifePreserver = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 22.33V15.3M10.09 22.33V15.3M10.09 8.7V1.67M13.91 8.7V1.67M8.7 13.91H1.67M8.7 10.09H1.67M22.33 10.09H15.3M22.33 13.91H15.3"
  }));
};

const SvgLifeRing = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 12c0 9-12.2 11.94-16.26 3.86A8.59 8.59 0 1 1 20.59 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 12c0 9-12.2 11.94-16.26 3.86A8.59 8.59 0 1 1 20.59 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12a3.82 3.82 0 1 1-5.73-3.3 3.82 3.82 0 0 1 5.73 3.3ZM10.09 8.7V3.62M13.91 3.62V8.7M10.09 20.38V15.3M13.91 15.3v5.08M3.62 10.09H8.7M8.7 13.91H3.62M15.3 10.09h5.08M20.38 13.91H15.3M4 8.8C2.67 7.44 1.5 6.61 1.5 4.88A3.39 3.39 0 0 1 4.88 1.5C6.61 1.5 7.39 2.62 8.8 4M15.2 4c1.36-1.36 2.19-2.53 3.92-2.53a3.39 3.39 0 0 1 3.38 3.41c0 1.73-1.12 2.51-2.53 3.92M20 15.2c1.36 1.36 2.53 2.19 2.53 3.92a3.39 3.39 0 0 1-3.38 3.38c-1.73 0-2.51-1.12-3.92-2.53M8.8 20c-1.36 1.33-2.19 2.5-3.92 2.5a3.39 3.39 0 0 1-3.38-3.38c0-1.73 1.12-2.51 2.53-3.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLiftingBars = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5.55v22.9M12 .55v22.9M22.5 6.27v17.18M1.5 2.45H12M12 8.18h10.5"
  }));
};

const SvgLiftingWeight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.08 23.5v-5.75h3.84v5.75M5.29 22.54V10.08M18.71 10.08v12.46M5.29 8.17V.5M18.71.5v7.67M21.58 5.29v9.58M2.42 5.29v9.58M.5 10.08h23M8.17 17.75h7.66M2.42 22.54h5.75M15.83 22.54h5.75"
  }));
};

const SvgLightCandle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 15.28c3.4.63 5.73 1.92 5.73 3.4 0 2.11-4.7 3.82-10.5 3.82S1.5 20.79 1.5 18.68c0-1.48 2.33-2.77 5.73-3.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 16.77c0 1.05 2.14 1.91 4.77 1.91s4.77-.86 4.77-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 9.14,
    rx: 4.77,
    ry: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 16.77V9.14M16.77 16.77V9.14M14.29 4.94a2.29 2.29 0 1 1-4.58 0C9.71 3.67 12 1.5 12 1.5s2.29 2.17 2.29 3.44ZM12 9.14V7.23"
  }));
};

const SvgLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 18.68h3.82a3.82 3.82 0 0 1 3.82 3.82H6.27a3.82 3.82 0 0 1 3.82-3.82ZM7.23 5.32h9.55a2.86 2.86 0 0 1 2.86 2.86v1.91H4.36V8.18a2.86 2.86 0 0 1 2.87-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5h3.82a2.86 2.86 0 0 1 2.86 2.86v1H7.23v-1a2.86 2.86 0 0 1 2.86-2.86ZM12 18.68v-8.59M15.82 13.91v-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLighteningCloudRain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 14.85A4.7 4.7 0 0 1 1.5 12a4.78 4.78 0 0 1 4.77-4.77 5.73 5.73 0 0 1 11.46 0 6 6 0 0 1-.09.95h.56a4.29 4.29 0 0 1 4.3 4.3 4.35 4.35 0 0 1-.95 2.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.23 16.77-1.91 2.87v-1.91H3.41l1.91-2.87v1.91h1.91zM18.68 14.86v3.82M18.68 20.59v1.91M14.86 12.95v3.82M14.86 18.68v1.91M11.05 14.86v3.82M11.05 20.59v1.91"
  }));
};

const SvgLighteningCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 16.7h1.43a4.3 4.3 0 1 0 0-8.59h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.77 4.77 0 0 0 0 9.54h1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 16.7 12 19.57v-1.91h-1.91L12 14.79v1.91h1.91z"
  }));
};

const SvgLighteningDay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.89 20.54h.48a3.35 3.35 0 1 0 0-6.69h-.57a6 6 0 0 0 .09-1 4.78 4.78 0 0 0-9.56 0 3.83 3.83 0 1 0 0 7.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.51 14.06a4.79 4.79 0 1 0-7-5.91M13.93.46v1.91M23.5 10.02h-1.91M20.7 3.26l-1.35 1.35M8.52 4.61 7.17 3.26M12.02 17.67l-1.91 2.87v-1.91H8.2l1.91-2.87v1.91h1.91z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLighteningStormCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.35 18.67a3.36 3.36 0 1 0 0-6.71h-.57a5 5 0 0 0 .09-1 4.79 4.79 0 0 0-9.58 0 3.84 3.84 0 1 0 0 7.67",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.11 6.31a5.72 5.72 0 0 1 5.67-4.89 4.57 4.57 0 0 1 .75.05A4.1 4.1 0 0 0 22.45 8a5.7 5.7 0 0 1-4.84 4.8M12 17.71l-1.92 2.88v-1.92H8.16l1.92-2.88v1.92H12z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLighting = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.99,
    cy: 12.01,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.65a3.36 3.36 0 0 1 0 6.72ZM11.99.5v1.92M11.99 21.6v1.92M.48 12.01H2.4M21.58 12.01h1.92M20.13 3.87l-1.36 1.36M5.21 18.79l-1.36 1.36M3.85 3.87l1.36 1.36M18.77 18.79l1.36 1.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgLineBone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m10.79 9.83 3-3a3.34 3.34 0 0 1 5-4.37 3.27 3.27 0 0 1 .94 1.78M4.26 19.76a3.34 3.34 0 0 1-1.78-5.65 3.35 3.35 0 0 1 4.37-.31l2.52-2.53",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 5.19a3.33 3.33 0 0 1 4.72 4.71 3.34 3.34 0 0 1-4.36.32l-.77.75-2.21 2.23M12.74 14.64 11 16.4l-.77.77a3.34 3.34 0 1 1-5-.36M7.23 9.14l7.63 7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLineLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 1.5h13.36a1.91 1.91 0 0 1 1.91 1.91v11.45H3.41V3.41A1.91 1.91 0 0 1 5.32 1.5ZM20.59 14.86H3.41l-1.83 5.48a1.82 1.82 0 0 0-.08.52 1.65 1.65 0 0 0 1.64 1.64h17.72a1.65 1.65 0 0 0 1.64-1.64 1.82 1.82 0 0 0-.08-.52ZM10.09 19.64h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 10.09 2.86-2.86 1.92 1.91 2.86-2.87"
  }));
};

const SvgLineMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 1.5,
    width: 15.27,
    height: 21,
    rx: 2.04,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 13.91 2.86-2.87 1.92 1.92 2.86-2.87"
  }));
};

const SvgLineMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 16.23,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-4.77M16.77 22.5H7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 11.04 2.86-2.86 1.92 1.91 2.86-2.86"
  }));
};

const SvgLinePresentation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "presentation analysis"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.21 12.02 3.83-3.83 1.92 1.91 3.83-3.83M.5 1.48h23M.5 15.85h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 1.48h19.17v14.38H2.42zM12 16.81v6.71M8.17 23.52v-.96L12 19.69M15.83 23.52v-.96L12 19.69"
  })));
};

const SvgLineSegment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.54 1.45-21.1 21.1",
    "data-name": "roll brush"
  }));
};

const SvgLineWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.16 17.8 11 13.96l1.92 1.92 3.83-3.84"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.41 1.49h21.1v21.1H1.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 7.25H1.41V1.49h21.1v5.76zM4.28 4.37H6.2M8.12 4.37h1.92M11.96 4.37h1.92"
  })));
};

const SvgLinesChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.5h-22V.5M13.93 5.28H4.37M21.59 11.02H4.37M17.76 16.76H4.37"
  }));
};

const SvgLinesClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 10.09h9.54M7.23 13.91h9.54M7.23 17.73h9.54M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLinesFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 11.05h11.46M6.27 14.86h11.46M6.27 18.68h11.46M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgLinesFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 18.68h11.46M6.27 14.86h11.46M6.27 11.05h11.46M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgLinesGraphClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM12 9.14v7.63M15.82 11.05v5.72M8.18 12.95v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLinesGraphFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 18.68v-3.82M12 18.68V9.14M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM15.82 18.68V12"
  }));
};

const SvgLinesHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10 8.5c0 1.5-1 1.5-1 3s1 1.5 1 3-1 1.5-1 3M15 10.5c0 1.5-1 1.5-1 3s1 1.5 1 3-1 1.5-1 3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLinkChain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m10.57 5.8 2.71-2.72a5.4 5.4 0 0 1 7.64 7.64l-2.72 2.71M5.8 10.57l-2.72 2.71a5.4 5.4 0 0 0 7.64 7.64l2.71-2.72M16.77 7.23l-9.54 9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLinkSelect = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m10.56 5.77 2.72-2.72a5.43 5.43 0 0 1 3.84-1.59 5.43 5.43 0 0 1 5.42 5.42A5.43 5.43 0 0 1 21 10.72l-2.72 2.72M5.77 10.56l-2.72 2.72A5.42 5.42 0 1 0 10.72 21l2.72-2.72M16.79 7.21l-9.58 9.58M20.63 15.83h2.87M15.83 20.63v2.87M19.19 19.19l1.91 1.91M3.38 8.17H.5M8.17 3.38V.5M4.81 4.81 2.9 2.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.27h1.91a5.73 5.73 0 0 1 4.05 9.78 5.67 5.67 0 0 1-4.05 1.68h-1.91M9.14 17.73H7.23A5.73 5.73 0 0 1 3.18 8a5.67 5.67 0 0 1 4.05-1.73h1.91M6.27 12h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLinkedin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.48h22v21.04H.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.07 18.7v-6.22a3.34 3.34 0 0 1 3.34-3.35 3.35 3.35 0 0 1 3.35 3.35v6.22M6.24 8.17V18.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.24,
    cy: 6.26,
    r: 0.96,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.07 8.17v4.79"
  }));
};

const SvgLips = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.11 7.14a5.33 5.33 0 0 0-2.95-.89 5.26 5.26 0 0 0-2.37.56L12 7.2l-.79-.39a5.26 5.26 0 0 0-2.37-.56 5.33 5.33 0 0 0-2.95.89L1.5 10.07a9.21 9.21 0 0 0 8.86 6.68h3.28a9.22 9.22 0 0 0 8.86-6.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 10.07a30.8 30.8 0 0 0 21 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLiquidBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medical syrup"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32v1.91l-2.86 2.86v10.5a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91v-10.5l-2.86-2.86V5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.55 16.14a2.55 2.55 0 0 1-5.1 0C9.45 13.91 12 12 12 12s2.55 1.91 2.55 4.14ZM7.23 1.5h9.55v3.82H7.23z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgLiquidDrop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20 14.5a8 8 0 0 1-16 0 13.83 13.83 0 0 1 3.1-8c.28-.38.57-.74.86-1.08A27 27 0 0 1 12 1.5s8 6 8 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16 14.5c0 2.76-1.24 5-4 5M16 11.5v2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLiquidMedicineBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "blood bag"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M4.41 1.5h15.3v12.43A5.74 5.74 0 0 1 14 19.67h-3.85a5.74 5.74 0 0 1-5.74-5.74V1.5ZM12.07 23.5v-3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.62 13.3a2.56 2.56 0 0 1-5.11 0c0-2.23 2.56-4.15 2.56-4.15s2.55 1.92 2.55 4.15ZM19.72 5.33H7.28",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgLiquidTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 17.73h2.86V12L21 5.81a1.9 1.9 0 0 0-1.9-1.45h-3.28v13.37M8.18 17.73h7.64v-4.77H1.5v4.77h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 4.36,
    width: 14.32,
    height: 8.59,
    rx: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 10.09h1.91L19.64 12h2.86M6.27 7.23v5.72M11.05 7.23v5.72"
  }));
};

const SvgLiquidTransportation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.71 17.73h7.15v-4.77H1.5v4.77h2.39M16.77 17.73h-1.91V6.27h3.67a2.86 2.86 0 0 1 2.71 2L22.5 12v5.73h-1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 12h4.77"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 4.36,
    width: 13.36,
    height: 8.59,
    rx: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgListChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82ZM17.73 6.25h-7.64M17.73 10.07h-7.64M17.73 13.89h-7.64M6.27 6.25h1.91M6.27 10.07h1.91M6.27 13.89h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgListClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 10.09h-7.64M17.73 13.91h-7.64M17.73 17.73h-7.64M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM6.27 10.09h1.91M6.27 13.91h1.91M6.27 17.73h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgListFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 11.05h-7.64M17.73 14.86h-7.64M17.73 18.68h-7.64M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM6.27 11.05h1.91M6.27 14.86h1.91M6.27 18.68h1.91"
  }));
};

const SvgListFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 14.86h-7.64M17.73 18.68h-7.64M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M6.27 14.86h1.91M17.73 11.05h-7.64M6.27 11.05h1.91M6.27 18.68h1.91"
  }));
};

const SvgListMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 6.25h-7.64M17.73 10.07h-7.64M17.73 13.89h-7.64M6.27 6.25h1.91M6.27 10.07h1.91M6.27 13.89h1.91M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgListReceipt = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 9.16h4.77M8.18 12.98h4.77M8.18 16.8h4.77M19.64 22.52H4.36a2.86 2.86 0 0 1-2.86-2.86V2.48L4 4.39l2.59-1.91 2.54 1.91 2.55-1.91 2.54 1.91 2.55-1.91v17.18a2.87 2.87 0 0 0 2.87 2.86Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 9.16h1.91M4.36 12.98h1.91M4.36 16.8h1.91M18.68 10.11h3.82v9.55a2.87 2.87 0 0 1-5.73 0v-9.55h1.91Z"
  }));
};

const SvgListRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 3.38H23.5M7.21 9.13H23.5M10.08 14.88H23.5M12.96 20.63H23.5M.5 3.38h1.92M3.38 9.13h1.91M6.25 14.88h1.92M9.13 20.63h1.91"
  }));
};

const SvgList = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 3.38H23.5M4.33 9.13H23.5M4.33 14.88H23.5M4.33 20.63H23.5M.5 3.38h1.92M.5 9.13h1.92M.5 14.88h1.92M.5 20.63h1.92"
  }));
};

const SvgLitMatch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21 10.75a6 6 0 0 1-12 0c0-5 4-5 5-9 3 1 7 5 7 9Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 15,
    cy: 12,
    rx: 2.83,
    ry: 2.12,
    transform: "rotate(-45 15 11.997)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13 14-9 9"
  }));
};

const SvgLiver = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m20.17 16.28-7.91 4.88a8.82 8.82 0 0 1-4.63 1.32H6.4a4.9 4.9 0 0 1-4.9-4.9V15.8a8.6 8.6 0 0 1 8.59-8.6h7.51a4.9 4.9 0 0 1 4.9 4.91 4.9 4.9 0 0 1-2.33 4.17Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 22.48A4.78 4.78 0 0 0 12 17.7v-7.63M9.14 7.2a4.77 4.77 0 0 0 4.77-4.77V.52M13 7.2a4.77 4.77 0 0 0 4.78-4.77V.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLivingRoomChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 13.91h11.45v4.77H6.27zM19.64 10.09h1A1.91 1.91 0 0 1 22.5 12v10.5h-4.77V12a1.91 1.91 0 0 1 1.91-1.91Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 10.09h1A1.91 1.91 0 0 1 6.27 12v10.5H1.5V12a1.91 1.91 0 0 1 1.91-1.91ZM4.36 10.09V4.36A2.87 2.87 0 0 1 7.23 1.5h9.54a2.87 2.87 0 0 1 2.87 2.86v5.73M8.18 5.32h1.91M13.91 5.32h1.91M8.18 9.14h1.91M13.91 9.14h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 18.68h11.45v3.82H6.27z"
  }));
};

const SvgLivingRoomCouch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 13.91h13.36v4.77H5.32z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 13.91h13.36v4.77H5.32z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 11a1.91 1.91 0 0 1 1.91 2v5.73h-3.82V13a1.91 1.91 0 0 1 1.91-2ZM3.41 11a1.91 1.91 0 0 1 1.91 2v5.73H1.5V13a1.91 1.91 0 0 1 1.91-2ZM4.36 11.05V8.18a2.87 2.87 0 0 1 2.87-2.86h9.54a2.87 2.87 0 0 1 2.87 2.86v2.87M8.18 10.09h1.91M13.91 10.09h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLivingroomFireplace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 18.68h19.09v3.82H2.45zM.55 22.5h22.9M3.41 5.32h17.18v13.36H3.41zM2.45 1.5h19.09v3.82H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 14.86a3.82 3.82 0 0 1-7.64 0C8.18 11.68 12 8.5 12 8.5s3.82 3.18 3.82 6.36Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.83 16.85a1.83 1.83 0 1 1-3.66 0c0-1.52 1.83-3.05 1.83-3.05s1.83 1.53 1.83 3.05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLocationGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.91 11h4.88a2 2 0 0 1 2 2v7.81a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.06H3.21a2 2 0 0 1-2-2V13a2 2 0 0 1 2-2h4.88M4.18 14.93h1.96M4.18 18.84h1.96M15.91 5.16C15.91 8.09 12 11 12 11S8.09 8.09 8.09 5.16a3.91 3.91 0 0 1 7.82 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.16,
    r: 0.98,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.5 10.11c0 6.61-8.5 12.28-8.5 12.28s-8.5-5.67-8.5-12.28a8.5 8.5 0 0 1 17 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.33a3.78 3.78 0 1 1-3.78 3.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLockChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 9.11h7.64v5.73H8.18zM12 5.3a1.91 1.91 0 0 1 1.91 1.9v1.91h-3.82V7.2A1.91 1.91 0 0 1 12 5.3Z"
  }));
};

const SvgLockClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 12.95h7.64v5.73H8.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.14A1.91 1.91 0 0 1 13.91 11v2h-3.82v-2A1.91 1.91 0 0 1 12 9.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLockEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 5.32h5.73v4.77H9.14zM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.63 7.23h4.87V22.5h-21V7.23h4.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.63 7.23h4.87V22.5h-21V7.23h4.87"
  }));
};

const SvgLockFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 13.91h7.64v4.77H8.18zM12 10.09A1.91 1.91 0 0 1 13.91 12v1.91h-3.82V12A1.91 1.91 0 0 1 12 10.09Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgLockFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86h5.73v3.82H9.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 11a1.91 1.91 0 0 1 1.91 2v1.91h-3.82V13A1.91 1.91 0 0 1 12 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLockKeyhole = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 10.09h13.36V22.5H5.32zM12 1.5a4.77 4.77 0 0 1 4.77 4.77v3.82H7.23V6.27A4.77 4.77 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-3.82"
  }));
};

const SvgLockMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 9.11h7.64v5.73H8.18zM12 5.3a1.91 1.91 0 0 1 1.91 1.9v1.91h-3.82V7.2A1.91 1.91 0 0 1 12 5.3Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLockWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.12 14.92h5.75v3.84H9.12zM12 11.08A1.92 1.92 0 0 1 13.91 13v1.92h-3.83V13A1.92 1.92 0 0 1 12 11.08Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 1.49h21.1v21.1H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55 7.25H1.45V1.49h21.1v5.76zM4.32 4.37h1.92M8.16 4.37h1.92M12 4.37h1.91"
  })));
};

const SvgLockersStorage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.52H12v20.05H1.5zM12 1.52h10.5v20.05H12zM14.86 5.34h4.78M4.36 5.34h4.78M14.86 9.16h4.78M4.36 9.16h4.78M8.18 12.98h1.91M18.68 12.98h1.91M3.41 23.48v-1.91M10.09 23.48v-1.91M13.91 23.48v-1.91M20.59 23.48v-1.91"
  }));
};

const SvgLockers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 1.5H12v20.09H1.48zM12 1.5h10.52v20.09H12zM3.39 5.33h6.7M3.39 9.15h6.7M13.91 5.33h6.7M13.91 9.15h6.7M8.17 12.98h1.92M18.7 12.98h1.91M3.39 21.59v1.91M10.09 21.59v1.91M13.91 21.59v1.91M20.61 21.59v1.91"
  }));
};

const SvgLogoSocial = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 4.36,
    width: 5.73,
    height: 14.32,
    rx: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.91,
    y: 4.36,
    width: 5.73,
    height: 8.59,
    rx: 0.74,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLogo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.34,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 16.75,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 16.75,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6 19.09a8.59 8.59 0 0 0 12 0M14.82 4.82a8.57 8.57 0 0 1 5.77 8.11 6.71 6.71 0 0 1-.08 1.1M3.49 14a6.71 6.71 0 0 1-.08-1.1 8.57 8.57 0 0 1 5.77-8.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLollipop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.2,
    r: 6.7,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.89a3.35 3.35 0 1 1 0-6.69M12 1.5a3.35 3.35 0 1 1 0 6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.3 8.2a3.35 3.35 0 0 1 6.7 0M18.7 8.2a3.35 3.35 0 0 1-6.7 0M12 14.89v8.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLondonEye = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.21,
    cy: 5.8,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.79,
    cy: 12.48,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.79,
    cy: 5.8,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.21,
    cy: 12.48,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M14.24 15.43l2.53 7.07H7.23l2.53-7.07"
  }));
};

const SvgLorry = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.89 18.68H1.5v-4.77h11.46v4.77h-2.39M15.82 18.68H13V6.27h4a1.91 1.91 0 0 1 1.89 1.64l.72 5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.66,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 12.95h3.82M19.64 12.96l2.86.95v4.77h-2.86M10.09 3.41h2.87v4.77M12.96 13.91H9.14l.95-4.77h2.87v4.77z"
  }));
};

const SvgLotionPlusBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.21 18.68h-2.42A4.77 4.77 0 0 1 6 14.17L5.32 1.5h13.36L18 14.17a4.77 4.77 0 0 1-4.79 4.51ZM9.14 12h5.72M12 9.14v5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 18.68h5.73v3.82H9.14zM8.18 5.32h10.5"
  }));
};

const SvgLotion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 18.68h6.68v3.82H3.41zM10.09 18.68H3.41L1.5 1.5H12l-1.91 17.18zM10.51 14.86H2.99M11.36 7.23H2.14M15.82 9.14h4.77A1.91 1.91 0 0 1 22.5 11v11.5h-8.59V11a1.91 1.91 0 0 1 1.91-1.86ZM15.82 4.36h4.77v4.77h-4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 13.91h8.59v4.77h-8.59z"
  }));
};

const SvgLouvre = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 19.67 12 4.33l10.54 15.34M23.5 19.67H.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.4 7.82 12 11.3l-2.4 3.49-2.39 3.49-.96 1.39M16.79 11.3l-2.39 3.49-2.4 3.49-.96 1.39M19.19 14.79l-2.4 3.49-.96 1.39"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.6 7.82 12 11.3l2.4 3.49 2.39 3.49.96 1.39M7.21 11.3l2.39 3.49 2.4 3.49.96 1.39M4.81 14.79l2.4 3.49.96 1.39"
  }));
};

const SvgLoveEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.6 9.14a3.35 3.35 0 0 0-2.6 1.15 3.35 3.35 0 0 0-2.6-1.15 2.89 2.89 0 0 0-3.13 2.57c0 3.87 5.73 6 5.73 6s5.73-2.15 5.73-6a2.89 2.89 0 0 0-3.13-2.57Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 22.5h-21V10.09L12 1.5l10.5 8.59V22.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 10.09 12 18.68 1.5 10.09"
  }));
};

const SvgLoveMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.48C6.2 1.48 1.5 4.9 1.5 9.11 1.5 11.48 3 13.6 5.32 15v2.7l2.59-1.55a13.85 13.85 0 0 0 4.09.6c5.8 0 10.5-3.42 10.5-7.64S17.8 1.48 12 1.48Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.13 12.88a4 4 0 0 1 1.37 2.92 4.22 4.22 0 0 1-1.91 3.36v2.36l-2.18-1.3a9 9 0 0 1-2.48.35c-3.27 0-6-1.75-6.47-4M14 6.25a2.35 2.35 0 0 0-2 1.05 2.35 2.35 0 0 0-4.3 1.29c0 3.52 4.3 4.69 4.3 4.69s4.3-1.17 4.3-4.69A2.35 2.35 0 0 0 14 6.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLowThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.08,
    cy: 17.5,
    r: 0.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.75 14.78v-9.2a3.67 3.67 0 0 0-7.33 0v9.2a4.53 4.53 0 0 0-.92 2.72 4.59 4.59 0 0 0 9.17 0 4.53 4.53 0 0 0-.92-2.72ZM11.08 14.75v1.83M14.75 6.5h2.75M14.75 10.17h2.75M14.75 13.83h2.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLowVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.68 10a2.83 2.83 0 0 1 0 4M1.5 8.25h4.69v7.5H1.5z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.69 3.56v16.88h-1.64l-5.86-4.69v-7.5l5.86-4.69h1.64z"
  }));
};

const SvgLowerVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 12h5.73M1.5 8.18h4.77v7.64H1.5zM13.91 3.41v17.18h-1.67l-5.97-4.77V8.18l5.97-4.77h1.67z"
  }));
};

const SvgLuggageTrolley = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.2,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.61,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.34 18.68V1.5H.52M4.34 6.27h18.14v12.41H4.34z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.89 1.5a3.82 3.82 0 0 1 3.81 3.82v1h-7.63v-1a3.82 3.82 0 0 1 3.82-3.82ZM4.34 12.48c1.51 0 1.51.95 3 .95s1.51-.95 3-.95 1.51.95 3 .95 1.51-.95 3-.95 1.52.95 3 .95 1.51-.95 3-.95M10.07 9.14V12M16.75 9.14V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgLuggage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money bag"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 8.18v11.46a2 2 0 0 1-2.1 1.91H3.6a2 2 0 0 1-2.1-1.91V8.18a2 2 0 0 1 2.1-1.91h16.8a2 2 0 0 1 2.1 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81zM5.32 20.59a2.81 2.81 0 0 1-.17 1H3.41a1.92 1.92 0 0 1-1.91-1.95V17.9a2.54 2.54 0 0 1 1-.17 2.86 2.86 0 0 1 2.82 2.86ZM22.5 17.9v1.74a1.92 1.92 0 0 1-1.91 1.91h-1.74a2.81 2.81 0 0 1-.17-1 2.86 2.86 0 0 1 2.87-2.86 2.54 2.54 0 0 1 .95.21ZM5.32 7.23a2.86 2.86 0 0 1-2.87 2.86 2.75 2.75 0 0 1-1-.17V8.18a1.92 1.92 0 0 1 1.96-1.91h1.74a2.77 2.77 0 0 1 .17.96ZM22.5 8.18v1.74a2.75 2.75 0 0 1-.95.17 2.86 2.86 0 0 1-2.87-2.86 2.77 2.77 0 0 1 .17-1h1.74a1.92 1.92 0 0 1 1.91 1.95Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgLungs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.12 21.37 6 22.24a3 3 0 0 1-1.19.24h-.15a3.16 3.16 0 0 1-3.16-3.16v-.58a32 32 0 0 1 2-11.25A3.39 3.39 0 0 1 6.71 5.3a3.38 3.38 0 0 1 3.38 3.38v9.76a3.17 3.17 0 0 1-1.97 2.93ZM15.91 21.36l2.27.9a3.32 3.32 0 0 0 1.16.22 3.16 3.16 0 0 0 3.16-3.16v-.58a32 32 0 0 0-2-11.25 3.39 3.39 0 0 0-3.21-2.19 3.38 3.38 0 0 0-3.38 3.38v9.74a3.16 3.16 0 0 0 2 2.94Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 11A4.77 4.77 0 0 0 12 6.25V.52M16.77 11A4.77 4.77 0 0 1 12 6.25V.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMagicWandSparkles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 22.5 17.76 6.24M16.8.5v3.83M16.8 10.07v3.82M10.11 7.2h3.82M19.67 7.2h3.83M12.07 2.46l2.71 2.71M18.83 9.22l2.71 2.71M18.83 5.17l2.71-2.71"
  }));
};

const SvgMagicWand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(45 12.004 12.012)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.97-.2h4.07v24.41H9.97z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.76 4.55 2.71 2.71M12.97 1.46h1.92M21.6 12.01h1.92M7.21 5.3h1.92M16.8 14.89h1.92"
  })));
};

const SvgMagnetUsers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18A2.86 2.86 0 0 1 12 5.32a2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 8.18a2.86 2.86 0 0 1 2.87-2.86 2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 8.18a2.86 2.86 0 0 1 2.86-2.86 2.86 2.86 0 0 1 2.87 2.86M18.68 11.05v4.77A6.68 6.68 0 0 1 12 22.5a6.68 6.68 0 0 1-6.68-6.68v-4.77h3.82v4.77A2.86 2.86 0 0 0 12 18.68a2.86 2.86 0 0 0 2.86-2.86v-4.77ZM5.32 14.86h3.82M14.86 14.86h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMagnet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 1.5V12A10.5 10.5 0 0 1 12 22.5 10.5 10.5 0 0 1 1.5 12V1.5h5.73V12A4.76 4.76 0 0 0 12 16.77 4.76 4.76 0 0 0 16.77 12V1.5ZM1.5 6.27h5.73M16.77 6.27h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMagnifyingGlassBarChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 16.77h3.82v5.73H2.45zM17.73 9.14h3.82V22.5h-3.82zM10.09 12.95h3.82v9.55h-3.82zM.55 22.5h22.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4.36 12 3.82-3.82"
  }));
};

const SvgMagnifyingGlassBug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 8.11-8.11"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.95,
    y: 6.27,
    width: 3.82,
    height: 6.68,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 8.18h1.9M18.68 8.18h-1.91M11.05 12h1.9M18.68 12h-1.91M12.95 4.36l.96 1.91M16.77 4.36l-.95 1.91"
  }));
};

const SvgMagnifyingGlassHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.26 6.51a2.64 2.64 0 0 0-2.17 1.12 2.64 2.64 0 0 0-2.17-1.12A2.55 2.55 0 0 0 5.32 9c0 3.76 4.77 5.84 4.77 5.84s4.77-2.06 4.77-5.84a2.55 2.55 0 0 0-2.6-2.49Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 10.09,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-6.68-6.68"
  }));
};

const SvgMagnifyingGlassHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.5,
    cy: 13,
    r: 3.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17 19.5-3-4"
  }));
};

const SvgMagnifyingGlassMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-8.11-8.11M5.32 9.14h7.63"
  }));
};

const SvgMagnifyingGlassMoney = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 7.64-7.64M12 12h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-.95A1.44 1.44 0 0 1 13 7.7a1.44 1.44 0 0 1 1.44-1.43h3.34M14.86 4.36v1.91M14.86 12v1.91"
  }));
};

const SvgMagnifyingGlassPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-8.11-8.11M5.32 9.14h7.63M9.14 5.32v7.63"
  }));
};

const SvgMagnifyingGlassTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 8.18V1.5H8.18v8.59l-6.29 9a2.25 2.25 0 0 0-.39 1.25 2.17 2.17 0 0 0 2.18 2.16h14.73M6.27 1.5h9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 13.91,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.2 16.3 4.3 4.29"
  }));
};

const SvgMagnifyingGlassUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 7.64-7.64"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 8.18,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.58 15.14a4.76 4.76 0 0 0-9.43 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMagnifyingGlassWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.02,
    cy: 14.13,
    r: 2.88,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.81 18.92-2.76-2.76M1.43 1.5h21.1v21.1H1.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.53 7.25H1.43V1.5h21.1v5.75zM4.3 4.38h1.92M8.14 4.38h1.92M11.98 4.38h1.91"
  })));
};

const SvgMagnifyingGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 22.5-8.11-8.11"
  }));
};

const SvgMail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 4.36 12 9.14 5.32 4.36"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 6.27 12 13.91 1.5 6.27M18.68 4.36H5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 9.05v10.59H5.32V9.05"
  }));
};

const SvgMailbox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.38 10.28A3.82 3.82 0 0 1 22.5 13v7.63h-7.64V13a3.82 3.82 0 0 1 6.52-2.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 9.16A3.82 3.82 0 0 0 14.86 13v7.63H1.5V13a3.82 3.82 0 0 1 3.82-3.84ZM6.27 14.89h3.82M1.5 1.52V16.8M1.5 1.52h4.77v3.82H1.5z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 23.48v-2.87h3.82v2.87"
  }));
};

const SvgMaleFemaleRomance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 3.41v11.45M6.28 9.14V22.5M12.84 7.11l4.89-4.89 4.89 4.89M1.5 17.73h9.55M8.4 1.5a2.52 2.52 0 0 0-2.12 1.14 2.55 2.55 0 0 0-4.67 1.41c0 3.81 4.67 5.09 4.67 5.09s4.66-1.28 4.66-5.09A2.55 2.55 0 0 0 8.4 1.5ZM15.61 22.5a2.55 2.55 0 0 0 2.12-1.14A2.55 2.55 0 0 0 22.4 20c0-3.81-4.67-5.09-4.67-5.09s-4.67 1.23-4.67 5.09a2.55 2.55 0 0 0 2.55 2.5Z"
  }));
};

const SvgMaleFemale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.28,
    cy: 6.27,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 3.41v9.54M6.28 11.05V22.5M12.84 7.11l4.89-4.89 4.89 4.89M1.5 17.73h9.55"
  }));
};

const SvgMaleGender = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 15.82,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 1.5-9.59 9.59M12.96 1.5h9.54v8.59"
  }));
};

const SvgMaleRelationship = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 3.41v9.54M13.32 6.63l4.41-4.41 4.41 4.41"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 6.27,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 20.59v-9.54M10.68 17.37l-4.41 4.41-4.41-4.41"
  }));
};

const SvgMaleRomance = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.65 3.55v11.3M12.83 7.2l4.82-4.82 4.82 4.82M15.56 22.38a2.51 2.51 0 0 0 2.09-1.13 2.51 2.51 0 0 0 4.6-1.38c0-3.77-4.6-5-4.6-5s-4.6 1.25-4.6 5a2.51 2.51 0 0 0 2.51 2.51ZM6.35 21.21V9.91M11.17 17.56l-4.82 4.82-4.82-4.82M8.44 2.38A2.52 2.52 0 0 0 6.35 3.5a2.51 2.51 0 0 0-4.6 1.39c0 3.77 4.6 5 4.6 5s4.6-1.25 4.6-5a2.51 2.51 0 0 0-2.51-2.51Z"
  }));
};

const SvgMaleTorso = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 .55v3.81a3.82 3.82 0 0 1-3.82 3.82H6.27A4.78 4.78 0 0 1 1.5 3.41V.55M22.5.55v2.86a4.78 4.78 0 0 1-4.77 4.77h-1.91A3.82 3.82 0 0 1 12 4.36V.55M12 10.09v1A1.9 1.9 0 0 1 10.09 13H8.6a1.9 1.9 0 0 1-1.81-1.3l-.52-1.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.09v1A1.9 1.9 0 0 0 13.91 13h1.49a1.9 1.9 0 0 0 1.81-1.3l.52-1.56M12 14.86v1a1.91 1.91 0 0 1-1.91 1.91H8.6a1.91 1.91 0 0 1-1.81-1.31l-.52-1.56M12 14.86v1a1.91 1.91 0 0 0 1.91 1.91h1.49a1.91 1.91 0 0 0 1.81-1.31l.52-1.56M12 20.59v-4.77M12 21.55v1.9M1.5 4.36a18 18 0 0 1 1.91 8.09 24 24 0 0 0 1.91 8.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 12.45c0 3.78-1 8.14-1 11M22.5 4.36a18 18 0 0 0-1.91 8.09 24 24 0 0 1-1.91 8.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 12.45c0 3.78 1 8.14 1 11M7.23 5.32h1.91M14.86 5.32h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 14.86,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 14.86,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 1.5-8.11 8.11M12.96 1.5h9.54v9.54"
  }));
};

const SvgManWomanRestroom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 22.5h1.91v-7.64H1.5V9.14a1.9 1.9 0 0 1 1.91-1.91h3.82a1.91 1.91 0 0 1 1.91 1.91v5.72H7.23v7.64h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 22.5h1.91v-4.77h-1.91l1.57-8.62a2.29 2.29 0 0 1 2.25-1.88 2.28 2.28 0 0 1 2.25 1.88l1.57 8.62h-1.91v4.77h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgManualWrench = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.61 5.32H7.2V1.5h10.5l1.91 1.91ZM3.39 5.32H7.2M19.61 9.14H7.2V13h10.5l1.91-1.9ZM3.39 9.14H7.2M9.11 5.32h3.82v3.82H9.11z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.11 12.95h3.82v9.55H9.11z"
  }));
};

const SvgMapNavigation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.17 20.03 5.33 1.52V4.36l-6.68-1.9-7.64 1.9-6.68-1.9v17.18l6.68 1.91 6.25-1.57"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 15.58c0 2.39-3.82 6-3.82 6S12 18 12 15.58A3.7 3.7 0 0 1 15.82 12a3.7 3.7 0 0 1 3.82 3.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 4.36v17.19M15.82 2.45V12"
  }));
};

const SvgMap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 2.46 9.14 6.27H1.5v15.28h7.64l5.72-3.82h7.64V2.46h-7.64zM9.14 6.27v15.28M14.86 2.45v15.28"
  }));
};

const SvgMapleLeaf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.68H4.36l.96-2.86-2.86-2.86.95-1.92v-.95h.95l1.91-.95 1.91.95-.95-5.73h2.86L12 2.5l1.91 2.86h2.86l-.95 5.73 1.91-.95 1.91.95h.95v.95l.96 1.92-2.87 2.86.96 2.86H12M12 9.18V23.5M6.27 13.95 12 17.77M17.73 13 12 16.82"
  }));
};

const SvgMarriage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.66,
    cy: 15.34,
    r: 7.16,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 12.48,
    r: 6.2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 6.27h-.95l-2.86-2.86.95-1.91h4.77l.96 1.91-2.87 2.86z"
  }));
};

const SvgMartiniStrawLime = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.02 14.86 5.34 6.27H18.7l-6.68 8.59z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 6.27a3.3 3.3 0 0 0 .13-.95 3.82 3.82 0 1 0-3.79 3.82 3.75 3.75 0 0 0 2-.58M15.84 6.27l1.91-4.77h5.73M12.02 22.5v-7.64M16.8 22.5H7.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMartiniStraw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.02 15.82 4.39 8.18h15.27l-7.64 7.64zM12.02 22.5v-7.64M15.84 22.5H8.2M13.49 8.18l2.35-6.68h4.77"
  }));
};

const SvgMartini = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 13.91 2.46 1.5h19.09L12 13.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 5.32C12 3.41 12 7.23 18.68 5.32M12 22.5v-8.59M15.82 22.5H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMath = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 5.28h9.57M5.3.5v9.57M1.48 14.85l7.65 7.65M9.13 14.85 1.48 22.5M13.91 5.28h9.57M13.91 18.67h9.57M17.74 14.85h1.91M17.74 22.5h1.91"
  }));
};

const SvgMealPlan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 20.59H1.5V1.5h15.27v7.64M4.36 5.32h1.91M8.18 5.32h5.73M4.36 9.14h1.91M8.18 9.14h5.73M4.36 12.95h1.91M8.18 12.95h5.73"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 17.73,
    cy: 18.68,
    rx: 4.77,
    ry: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.11 11h1.43v1.43a2.39 2.39 0 0 1-2.39 2.39h-1.42v-1.39A2.39 2.39 0 0 1 20.11 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 11.05a2.86 2.86 0 0 1 2.87 2.86v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMealRestaurant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.08.5v6.26A3.81 3.81 0 0 1 8 10.18a3.81 3.81 0 0 1-3.42 0 3.81 3.81 0 0 1-2.16-3.42V.5M6.25.5v23M21.58 7.21a3.83 3.83 0 1 1-7.66 0c0-2.12 1.71-5.75 3.83-5.75s3.83 3.63 3.83 5.75ZM17.75 23.5V11.04",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMeasureElectricity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.8 18.68H1.52V1.5H16.8v17.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.16 5.32A3.82 3.82 0 0 1 13 9.14V11H5.34V9.14a3.82 3.82 0 0 1 3.82-3.82ZM9.16 8.18v2.87M5.34 14.86h1.91M11.07 14.86h1.91M9.16 18.68v1A2.86 2.86 0 0 0 12 22.5h6.7a2.86 2.86 0 0 0 2.87-2.86V2.45M19.66 10.09h3.82M19.66 12h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMeasureTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 6.27H4.36V2.46l3.82-.96h7.64l3.82.96v3.81z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5h5.73v21H9.14zM12 10.09h2.86M12.95 13.91h1.91M12 17.73h2.86"
  }));
};

const SvgMeasureTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5H7.23v19.09a1.9 1.9 0 0 0 1.91 1.91H13a1.9 1.9 0 0 0 1.91-1.91V5.32l1.91-2.87v-1ZM7.23 18.68h1.91M7.23 14.86h2.86M7.23 11.05h1.91M7.23 7.23h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMeasurementTape = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 4.39h8.59V13a4.77 4.77 0 0 1-4.77 4.77h-3.82A4.77 4.77 0 0 1 9.14 13V9.16a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(-180 15.82 11.07)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 11.07,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 9.16v4.77M1.5 20.61V16.8h7.64"
  }));
};

const SvgMeasuringCup = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.27 1.5H3.36v1l1.91 2.82v15.27a1.91 1.91 0 0 0 1.91 1.91h9.55a1.91 1.91 0 0 0 1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11 7.23h3.82V22.5H11M11.95 11.05h2.87M11 14.86h3.82M11.95 18.68h2.87"
  }));
};

const SvgMeasuringTape = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 3.43a7.64 7.64 0 0 1 7.64 7.64v7.63H3.41a1.91 1.91 0 0 1-1.91-1.9v-5.73a7.64 7.64 0 0 1 7.64-7.64ZM14.86 18.7h7.64v2.87M17.73 11.07v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 11.07,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMedVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.83 10a2.84 2.84 0 0 1 0 4M17.84 8a5.7 5.7 0 0 1 0 8M1.5 8.21h4.74v7.58H1.5zM13.82 3.47v17.06h-1.66l-5.92-4.74V8.21l5.92-4.74h1.66z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMedalAchievement = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.67 8.17a6.63 6.63 0 0 1-2.86 5.46 6.65 6.65 0 0 1-7.62 0 6.66 6.66 0 1 1 10.48-5.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 4.43 1.18 2.46 2.63.4L13.9 9.2l.45 2.7L12 10.63 9.65 11.9l.45-2.7-1.91-1.91 2.63-.4L12 4.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.81 13.63v7.87L12 18.64 8.19 21.5v-7.87a6.65 6.65 0 0 0 7.62 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgMedal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.64 15.84 22.5 5.32 19.64 1.5H4.36L1.5 5.32l4.86 10.52M17.84 5.32H6.16M9.2 11.78 4.36 1.5M19.64 1.5 14.8 11.78"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 15.82.44.77.87.18-.6.66.1.88-.81-.37-.81.37.1-.88-.6-.66.87-.18.44-.77z"
  }));
};

const SvgMedia = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 11.07-3.82.95-3.82-.95V7.25h7.64v3.82zM4.36 7.25h15.28"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.52h21v15.27h-21zM2.45 21.57h8.6M13.91 21.57h7.64M11.05 19.66v3.82"
  }));
};

const SvgMedicalCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medical center"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 7.23h5.72M12 4.36v5.73M9.14 14.86h1.91M12.95 14.86h1.91M5.32 14.86h1.91M5.32 18.68h1.91M16.77 14.86h1.91M16.77 18.68h1.91M13.91 22.5h8.59V13l-3.82-3.86v-1A6.68 6.68 0 0 0 12 1.5a6.68 6.68 0 0 0-6.68 6.68v1L1.5 13v9.5h8.59v-3.82h3.82Z"
  })));
};

const SvgMedicalDrip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medical drip"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 23.5v-22h16.26M13.93 23.5v-2.87M13.93 1.5v3.83M15.85 9.15h3.82M16.8 12.02h2.87M15.85 14.89h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 5.33v9.56a5.74 5.74 0 0 1-5.74 5.74 5.74 5.74 0 0 1-5.73-5.74V5.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgMedicationBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "bottle medicine"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32v1.91l-2.86 2.86v10.5a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91v-10.5l-2.86-2.86V5.32M7.23 1.5h9.55v3.82H7.23z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 11h7.64v7.64H11a1.91 1.91 0 0 1-1.91-1.91V13A1.91 1.91 0 0 1 11 11ZM17.73 14.86H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgMedicineBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.25 11.3a2.69 2.69 0 0 0 1.86.7c2.16 0 2.16-1.92 4.32-1.92 1.79 0 2.09 1.34 3.4 1.78M.5 2.42h16.29M2.42.5v23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 6.25A4.79 4.79 0 0 1 15.83 11v6.71H6.25V11A4.79 4.79 0 0 1 11 6.25Z",
    transform: "rotate(180 11.04 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 2.42v3.83M11 17.75a3.83 3.83 0 0 0 3.83 3.83 3.83 3.83 0 0 0 3.83-3.83v-1.92a1.91 1.91 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91v4.79M21.58 22.54h1.92"
  }));
};

const SvgMedicineBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 5.32,
    width: 19.09,
    height: 17.18,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 1.5h13.36v3.82H5.32zM12.32 10.09l-1.28 3.82h1.92l-1.28 3.82"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.26 10.09h5.29v7.64h-5.29M7.74 17.73H2.46v-7.64h5.28"
  }));
};

const SvgMediumThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.08,
    cy: 17.5,
    r: 0.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.75 14.78v-9.2a3.67 3.67 0 0 0-7.33 0v9.2a4.53 4.53 0 0 0-.92 2.72 4.59 4.59 0 0 0 9.17 0 4.53 4.53 0 0 0-.92-2.72ZM11.08 10.17v6.41M14.75 6.5h2.75M14.75 10.17h2.75M14.75 13.83h2.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMegaphoneMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 9.14H11V13H9.14a1.91 1.91 0 0 1-1.91-2 1.91 1.91 0 0 1 1.91-1.86ZM11.04 9.14l4.78-1.91v7.63l-4.78-1.9V9.14zM11.05 17.73l-1.91-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a10.49 10.49 0 0 0-7.42 17.92L2.45 22.5H12a10.5 10.5 0 0 0 0-21Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMegaphoneMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v16.23h-21zM12 22.5v-4.77M16.77 22.5H7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 7.23H11V11H9.14a1.91 1.91 0 0 1-1.91-1.86 1.91 1.91 0 0 1 1.91-1.91ZM11.04 7.23l4.78-1.91v7.64l-4.78-1.92V7.23zM11.05 14.86l-1.91-3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMegaphone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 8.18v7.64M22.5 2.45v19.1M22.5 4.36v15.28L12 16.3l-7.64-1.74-2.86-.65v-3.82l21-5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 16.3v1.43a1.92 1.92 0 0 1-1.91 1.91H6.27a1.92 1.92 0 0 1-1.91-1.91v-3.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMekka = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 21.58h23M2.42 2.42h19.17v19.17H2.42zM2.42 6.25h19.16"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 14.88H12v6.71H7.21zM6.25 10.08h1.92M15.83 10.08h1.92M10.08 10.08h3.84M2.42 10.08h2.87M18.71 10.08h2.87"
  }));
};

const SvgMemo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 3.43-20 7.62 16.19 9.52L22.5 3.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.21 17.34-4.04 3.23-.63-5.97L21.55 4.38"
  }));
};

const SvgMemoryCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 3.41V22.5H3.41v-4.77h1V13h-1V8.18l1.91-2.86V1.5h13.36ZM9.14 1.5v3.82M12.95 1.5v3.82M16.77 1.5v3.82M8.18 17.73h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMemoryComputer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 2.46h1.91v20.08M22.5 4.37v14.35h-6.7v-.96h-5.74l-.95.96h-6.7V4.37H22.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.41 8.2h4.78v6.7H2.41z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.33,
    cy: 11.54,
    r: 3.35,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMemoryRam = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 11.05a1 1 0 0 0 .95.95v6.68h-21V12a1 1 0 0 0 0-1.91V5.32h21v4.77a1 1 0 0 0-.95.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 9.14H12v3.82H6.27zM12 9.14h5.73v3.82H12zM4.36 15.82v2.86M8.18 15.82v2.86M12 15.82v2.86M15.82 15.82v2.86M19.64 15.82v2.86"
  }));
};

const SvgMemoryStick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 7.23h11.46v12.41a2.86 2.86 0 0 1-2.86 2.86H9.14a2.86 2.86 0 0 1-2.86-2.86V7.23h-.01ZM8.18 1.5h7.64v5.73H8.18z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 7.23h3.82v9.55a1.91 1.91 0 0 1-1.91 1.9 1.91 1.91 0 0 1-1.91-1.91V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMenuSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 1.5h3.82v3.82h-3.82zM1.5 1.5h3.82v3.82H1.5zM18.68 1.5h3.82v3.82h-3.82zM10.09 10.09h3.82v3.82h-3.82zM1.5 10.09h3.82v3.82H1.5zM18.68 10.09h3.82v3.82h-3.82zM10.09 18.68h3.82v3.82h-3.82zM1.5 18.68h3.82v3.82H1.5zM18.68 18.68h3.82v3.82h-3.82z"
  }));
};

const SvgMergeElements = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.8 8.17V1.46H1.41v14.38h6.72v6.71h14.38V8.17H15.8z",
    "data-name": "roll brush"
  }));
};

const SvgMesh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 2.42h19.17v19.17H2.42zM12 23.5v-4.79M12 5.29V.5M16.79 16.69v6.81M16.79 7.31V.5M7.21 16.69v6.81M7.21 7.31V.5M23.5 12h-4.79M5.29 12H.5M23.5 7.21h-6.81M7.31 7.21H.5M23.5 16.79h-6.81M7.31 16.79H.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.71 12a6.66 6.66 0 0 1-1.92 4.69l-.1.1a6.69 6.69 0 0 1-9.38 0l-.1-.1a6.69 6.69 0 0 1 0-9.38l.1-.1a6.69 6.69 0 0 1 9.38 0l.1.1A6.66 6.66 0 0 1 18.71 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessageGift = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 12h9.55v4.77H7.23zM12 8.18v8.59M9.14 5.32 12 8.18M14.86 5.32 12 8.18"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 8.18h11.45V12H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a10.49 10.49 0 0 0-7.42 17.92L2.45 22.5H12a10.5 10.5 0 0 0 0-21Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessageLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 6.25h9.54M7.23 13.89h9.54M7.23 10.07h9.54M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgMessageText = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 6.25h13.36M5.32 13.89h13.36M5.32 10.07h13.36M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessagesBlank = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 5.3H5.32A3.81 3.81 0 0 0 1.5 9.11v5.73a3.82 3.82 0 0 0 3.82 3.82h1.91l2.86 2.86L13 18.66h1.91a3.82 3.82 0 0 0 3.82-3.82V9.11a3.81 3.81 0 0 0-3.87-3.81Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84A3.82 3.82 0 0 0 22.5 11V5.3a3.82 3.82 0 0 0-3.82-3.82H9.14A3.82 3.82 0 0 0 5.32 5.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessagesDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.16v7.64a2.86 2.86 0 0 1-2.86 2.86h-1.91v2.86l-5.73-2.86H4.36A2.86 2.86 0 0 1 1.5 15.8V8.16A2.86 2.86 0 0 1 4.36 5.3h11.46a2.86 2.86 0 0 1 2.86 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84h1A2.86 2.86 0 0 0 22.5 12V4.34a2.86 2.86 0 0 0-2.86-2.86H8.18a2.86 2.86 0 0 0-2.86 2.86v1M5.32 11.98h1.91M9.14 11.98h1.91M12.95 11.98h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessagesText = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 10.05h7.63M11.05 13.86h7.63M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.16v7.64a2.86 2.86 0 0 1-2.86 2.86h-1.91v2.86l-5.73-2.86H4.36A2.86 2.86 0 0 1 1.5 15.8V8.16A2.86 2.86 0 0 1 4.36 5.3h11.46a2.86 2.86 0 0 1 2.86 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84h1A2.86 2.86 0 0 0 22.5 12V4.34a2.86 2.86 0 0 0-2.86-2.86H8.18a2.86 2.86 0 0 0-2.86 2.86v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessagingLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.16v7.64a2.86 2.86 0 0 1-2.86 2.86h-1.91v2.86l-5.73-2.86H4.36A2.86 2.86 0 0 1 1.5 15.8V8.16A2.86 2.86 0 0 1 4.36 5.3h11.46a2.86 2.86 0 0 1 2.86 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.84h1A2.86 2.86 0 0 0 22.5 12V4.34a2.86 2.86 0 0 0-2.86-2.86H8.18a2.86 2.86 0 0 0-2.86 2.86v1M5.32 10.07h9.54M5.32 13.89h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMessenger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 11c0 5.27-4.7 9.55-10.5 9.55a12 12 0 0 1-3-.4l-4.64 1.37.56-3.45A9.16 9.16 0 0 1 1.5 11c0-5.25 4.7-9.52 10.5-9.52S22.5 5.75 22.5 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.32 13.89 4.77-4.78 3.82 3.82 4.77-4.77"
  }));
};

const SvgMic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-3.82"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 1.5,
    width: 7.64,
    height: 13.36,
    rx: 3.7,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 11.05A7.64 7.64 0 0 1 12 18.68a7.64 7.64 0 0 1-7.64-7.63M9.14 22.5h5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMicroUsb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18h5.73A3.82 3.82 0 0 1 18.68 12v3.82H5.32V12a3.82 3.82 0 0 1 3.82-3.82ZM8.18 12h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMicrochip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 6.27h11.45v11.45H6.27zM8.18 4.36v1.91M8.18 19.64v-1.91M12 4.36v1.91M12 19.64v-1.91M15.82 4.36v1.91M15.82 19.64v-1.91M4.36 15.82h1.91M19.64 15.82h-1.91M4.36 12h1.91M19.64 12h-1.91M4.36 8.18h1.91M19.64 8.18h-1.91"
  }));
};

const SvgMicrophone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 7.22,
    y: 1.5,
    width: 9.57,
    height: 15.3,
    rx: 4.78,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.61 12A8.61 8.61 0 0 1 12 20.63 8.61 8.61 0 0 1 3.39 12M12 23.5v-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMicroscopeMedical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.75 22.5h12.41M6.92 17.73a6.2 6.2 0 1 0 8.75-7"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.16 6.24h1.58a1.91 1.91 0 0 1 1.91 1.91V13h-5.4V8.15a1.91 1.91 0 0 1 1.91-1.91Z",
    transform: "rotate(45 12.948 9.613)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(45 17.009 5.555)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.32 3.19h3.37v4.72h-3.37z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.3 1.5 4.77 4.77M2.93 17.73h8.59"
  }));
};

const SvgMicroscopeView = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.7,
    cy: 7.7,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.43,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.25,
    cy: 9.61,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMicroscope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17 8.08a6.92 6.92 0 0 1 1.58 4.42 7 7 0 0 1-13.32 3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-135 14.34 7.75)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.22 3.15h4.24v9.19h-4.24z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.59 1.5-3 3M11.05 15.82H3.41M5.32 22.5h13.36M12 19.64v2.86"
  }));
};

const SvgMicrowave = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.43h21V19.7h-21zM18.68 8.25h1.91M18.68 12.07h1.91M18.68 15.89h1.91M16.77 5.39V19.7M20.59 22.57V19.7M3.41 22.57V19.7"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 8.25h9.55v7.64H4.36z"
  }));
};

const SvgMiddleFingerGesture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m6.3 22.93-.52-.53a11.18 11.18 0 0 1-3.28-7.91 4.87 4.87 0 0 1 1.42-3.44 4.86 4.86 0 0 1 3.45-1.43h1.78a1.91 1.91 0 0 1 1.9 1.9 1.9 1.9 0 0 1-1.9 1.89H6.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m6.3 13.43.34.13a7 7 0 0 1 4.41 6.51M18.22 22.4a11.18 11.18 0 0 0 3.28-7.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.9,
    y: 9.62,
    width: 3.8,
    height: 6.65,
    rx: 1.9,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 17.7,
    y: 10.57,
    width: 3.8,
    height: 5.7,
    rx: 1.9,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.1 9.62V3A1.91 1.91 0 0 1 12 1.07 1.91 1.91 0 0 1 13.9 3v9.51",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMiddleFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.2 23.5v-1.91l-2.71-2.71a3.82 3.82 0 0 1-1.12-2.7v-3.54a2.52 2.52 0 0 1 1.31-2.27 2.38 2.38 0 0 1 2.52.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.07 10.11v-1A2.87 2.87 0 0 0 8.2 12v3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.72 23.5v-2.87l.08-.17a17.18 17.18 0 0 0 1.83-7.74A2.85 2.85 0 0 0 18 9.88l-3.11-.18V3.41a1.91 1.91 0 0 0-2.38-1.85 2 2 0 0 0-1.44 2v6.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMinusChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12ZM8.2 12h7.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMinusChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.95h5.73M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMinusCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 12h11.46"
  }));
};

const SvgMinusComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 10.07h9.54M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgMinusFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 14.86h9.54M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgMinusMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 10.07h7.64M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgMinusWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.16 14.93h7.67M1.45 1.5h21.1v21.1H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55 7.25H1.45V1.5h21.1v5.75zM4.32 4.38h1.92M8.16 4.38h1.92M12 4.38h1.91"
  })));
};

const SvgMirrorSink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 13.91h9.55A4.77 4.77 0 0 1 12 18.68a4.77 4.77 0 0 1-4.77-4.77ZM12 22.5v-3.82M10.09 13.91v-2.86A1.91 1.91 0 0 1 12 9.14a1.91 1.91 0 0 1 1.91 1.91M5.32 13.91h13.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 16.77h6.68V1.5h-21v15.27h6.68M6.27 4.36 4.36 6.27M10.09 5.32l-4.77 4.77M.55 22.5h22.9"
  }));
};

const SvgMirror = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 8.59,
    ry: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.95 7.23-5.72 5.72M13.91 12l-3.34 3.34"
  }));
};

const SvgMistyCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 16.52a4.29 4.29 0 0 0-1.44-8.34h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.78 4.78 0 0 0-1.91 9.15M5.31 18.68c1.67 0 1.67-.95 3.34-.95s1.67.95 3.34.95 1.67-.95 3.34-.95 1.68.95 3.35.95M5.31 22.5c1.67 0 1.67-.95 3.34-.95s1.67.95 3.34.95 1.67-.95 3.34-.95 1.68.95 3.35.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMixChemicals = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 15.8V11H5.32v4.8l-3.51 4.38a1.41 1.41 0 0 0-.31.88 1.42 1.42 0 0 0 1.41 1.42h8.63A1.42 1.42 0 0 0 13 21.06a1.35 1.35 0 0 0-.31-.88ZM3.41 11.02h7.64M11 2.43h9.55a1.91 1.91 0 0 1 1.95 1.91 1.91 1.91 0 0 1-1.91 1.91H11V2.43ZM11.05.52v7.64M5.32 7.2h1.91M7.23 3.39h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMixture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.27 1.5 4.78 17.18"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 6.27H3.41v13.37a2.86 2.86 0 0 0 2.86 2.86h8.59a2.86 2.86 0 0 0 2.87-2.86v-8.59l2.86-3.82v-1ZM4.36 18.68h1.91M4.36 14.86h1.91M4.36 11.05h1.91M11.05 11.05h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobileHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.28 10.09a1.51 1.51 0 0 0-1.28.69 1.51 1.51 0 0 0-1.28-.69 1.54 1.54 0 0 0-1.53 1.53c0 2.3 2.81 3.07 2.81 3.07s2.81-.77 2.81-3.07a1.54 1.54 0 0 0-1.53-1.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobileHorizontal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    transform: "rotate(90 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 13.91v-3.82a.94.94 0 0 1 .95-.95v5.72a.94.94 0 0 1-.95-.95ZM4.36 11.05v1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobileHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1ZM13.91 10.57v4.29h-3.82v-4.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 12 12 9.14 15.82 12"
  }));
};

const SvgMobileMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 15.82v4.77A1.92 1.92 0 0 1 13 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V3.41A1.92 1.92 0 0 1 3.41 1.5H13a1.92 1.92 0 0 1 1.91 1.91v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 2.45H6.27a1 1 0 0 1-.95-1h5.73a1 1 0 0 1-.96 1ZM7.23 19.64h1.91M9.14 11.05V13l-1.91 2.82h10.5a4.78 4.78 0 0 0 4.77-4.77 4.78 4.78 0 0 0-4.77-4.78h-3.82a4.77 4.77 0 0 0-4.77 4.78ZM12 11.05h1.91M14.86 11.05h1.91M17.73 11.05h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobileMoney = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 1.5,
    width: 15.27,
    height: 21,
    rx: 2.04,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1ZM9.14 14.86h3.34a1.43 1.43 0 0 0 1.43-1.43A1.43 1.43 0 0 0 12.48 12h-1a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43h3.34M12 7.23v1.91M12 14.86v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobilePen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 19.64h1.91M12 2.45H8.18a.94.94 0 0 1-.95-1H13a.94.94 0 0 1-1 1Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m20.11 22.5-.47-2.86a1 1 0 0 1 .79-1.12 1 1 0 0 1 1.12 1.12l-.48 2.86a.49.49 0 0 1-1 0Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 1.5v18.14"
  }));
};

const SvgMobilePortrait = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 2.45h-3.82a.94.94 0 0 1-.95-1h5.72a.94.94 0 0 1-.95 1ZM11.05 19.64h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMobile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 18.68h3.82"
  }));
};

const SvgMolecule = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.37 10.09H7.41l-2.48 4.3 2.48 4.29h4.96l2.48-4.29-2.48-4.3zM.52 13.91h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.82 6.27h-4.96l-2.48 4.3 2.48 4.29h4.96l2.48-4.29-2.48-4.3zM19.49 6.56l2.37-4.11M19.56 14.46l2.37 4.1M7.41 1.5 4.93 5.79l2.48 4.3M19.61 22.5H14.8l-2.22-3.82"
  }));
};

const SvgMoneyAccounts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43 1.44 1.44 0 0 1 1.43-1.44h3.34M12 .55v1.9M12 8.18v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 14.86,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 23.45v-.95a4.77 4.77 0 0 1 4.78-4.77 4.77 4.77 0 0 1 4.72 4.77v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 14.86,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.45v-.95a4.77 4.77 0 0 1 4.77-4.77 4.77 4.77 0 0 1 4.78 4.77v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyArrowDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15 6.5h-3.5A1.5 1.5 0 0 0 10 8a1.5 1.5 0 0 0 1.5 1.5h1A1.5 1.5 0 0 1 14 11a1.5 1.5 0 0 1-1.5 1.5H9M12 14.5v-2M12 6.5v-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3 13.5 9 9 9-9h-3v-12H6v12H3z"
  }));
};

const SvgMoneyArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9 17.5h3.5A1.5 1.5 0 0 0 14 16a1.5 1.5 0 0 0-1.5-1.5h-1A1.5 1.5 0 0 1 10 13a1.5 1.5 0 0 1 1.5-1.5H15M12 9.5v2M12 17.5v2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21 10.5-9-9-9 9h3v12h12v-12h3z"
  }));
};

const SvgMoneyBagDollar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money bag 3"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M17.67 22.5H6.33a4.83 4.83 0 0 1-4.83-4.83h0a4.83 4.83 0 0 1 1.24-3.23l7.35-8.17h3.82l7.35 8.17a4.83 4.83 0 0 1 1.24 3.23h0a4.83 4.83 0 0 1-4.83 4.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.82 1.5-.39 2A3.49 3.49 0 0 1 12 6.27h0a3.49 3.49 0 0 1-3.43-2.81l-.39-2ZM18.68 3.41l-3.82 1.91M19.64 6.27h-5.73M10.09 17.73h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.44h-1a1.43 1.43 0 0 1-1.43-1.43h0A1.43 1.43 0 0 1 11.52 12h2.39M12 11.05V12M12 17.73v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgMoneyBarChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 16.76h3.83v5.74H2.43zM17.74 9.11h3.83V22.5h-3.83zM10.09 12.93h3.83v9.57h-3.83zM.52 22.5h22.96M9.13 8.15h3.35a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.44h-1a1.43 1.43 0 0 1-1.43-1.43 1.44 1.44 0 0 1 1.43-1.44h3.35M12 .5v1.91M12 8.15v1.92"
  }));
};

const SvgMoneyBill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money 1"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21v13.36h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 3.82,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 9.14h1.91M17.73 14.86h1.91M4.36 9.14h1.91M17.73 14.86h1.91"
  })));
};

const SvgMoneyDecrease = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "recieve money"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.16,
    r: 2.86,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 18.66 12 21.52l-2.86-2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 20.57v-3.82a1.91 1.91 0 0 0-1.91-1.91H1.5V1.48h21v13.36h-6.68",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 8.16h-1.91M6.27 8.16H4.36"
  })));
};

const SvgMoneyDonation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 14.86H1.5V1.5h21v13.36h-2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 11.05h3.34a1.44 1.44 0 0 0 1.43-1.44 1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43h3.34M12 3.41v1.91M12 11.05v1.9M17.73 22.5a6.52 6.52 0 0 0 1.91-4.61v-4A1.91 1.91 0 0 0 17.73 12a1.9 1.9 0 0 0-1.91 1.91v2.86l-.2.1a3.1 3.1 0 0 0-1.71 2.77M8.18 14.86v3a6.52 6.52 0 0 0 1.91 4.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyHome = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8 17.5h5a2 2 0 0 0 2-2 2 2 0 0 0-2-2h-2a2 2 0 0 1-2-2 2 2 0 0 1 2-2h5M12 6.5v3M12 20.5v-3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyIncrease = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "send money"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.84,
    r: 2.86,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 5.34 12 2.48l2.86 2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.43v3.82a1.91 1.91 0 0 0 1.91 1.91h8.59v13.36h-21V9.16h6.68",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 15.84h1.91M17.73 15.84h1.91"
  })));
};

const SvgMoneyMobileShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V3.41A1.92 1.92 0 0 1 3.41 1.5H13a1.92 1.92 0 0 1 1.91 1.91v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 2.45H6.27a1 1 0 0 1-.95-1h5.73a1 1 0 0 1-.96 1ZM17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31ZM5.32 14.86h3.34a1.43 1.43 0 0 0 1.43-1.43A1.43 1.43 0 0 0 8.66 12h-1a1.43 1.43 0 0 1-1.43-1.43A1.43 1.43 0 0 1 7.7 9.14h3.35M8.18 6.27v2.87M8.18 13.91v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 9.14h5.73v9.54H5.32V9.14h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 18.68v3.82H1.5v-9.54h3.82"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 13.91h1.91M18.68 13.91h1.91M9.14 5.32h5.73v3.82H9.14zM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5Z"
  }));
};

const SvgMoneyPieChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12h10.5a10.45 10.45 0 0 1-3.07 7.42L12 12V1.48a10.5 10.5 0 1 0 7.43 17.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 8.16h3.34a1.43 1.43 0 0 0 1.43-1.43 1.43 1.43 0 0 0-1.43-1.43h-1a1.44 1.44 0 0 1-1.43-1.44 1.43 1.43 0 0 1 1.47-1.43h3.35M18.68.52v1.91M18.68 8.16v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyPinLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 8.18C18.68 13.19 12 19 12 19S5.32 13.19 5.32 8.18a6.68 6.68 0 0 1 13.36 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.27h-3.34a1.43 1.43 0 0 0-1.43 1.43 1.43 1.43 0 0 0 1.43 1.44h1a1.43 1.43 0 0 1 1.43 1.43A1.43 1.43 0 0 1 12.48 12H9.14M12 4.36v1.91M12 12v1.91M16.52 13.91h3.12l2.86 8.59h-21l2.86-8.59h3.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyStack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "money stack 2"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h8.59v13.36H1.5zM13.91 1.5h8.59v13.36h-8.59zM1.5 14.86h8.59v3.82H1.5zM13.91 14.86h8.59v3.82h-8.59zM1.5 18.68h8.59v3.82H1.5zM13.91 18.68h8.59v3.82h-8.59zM10.09 1.5h3.82v21h-3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 8.18h1.91M17.73 8.18h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 14.86h3.82"
  })));
};

const SvgMoneyTarget = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 9.58,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v4.79M12 18.71v4.79M23.5 12h-4.79M5.29 12H.5M9.12 14.87h3.36a1.44 1.44 0 0 0 1.44-1.43A1.44 1.44 0 0 0 12.48 12h-1a1.44 1.44 0 0 1-1.44-1.44 1.45 1.45 0 0 1 1.44-1.44h3.35M12 7.21v1.92M12 14.88v1.91"
  }));
};

const SvgMoneyUserArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.77,
    cy: 16.31,
    r: 2.4,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 23.5V23a4.31 4.31 0 0 1 4.31-4.31A4.31 4.31 0 0 1 10.09 23v.48M16.68 15.72l2.99-2.99 2.99 2.99",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 13v2.87a5.75 5.75 0 0 1-5.75 5.75M9.24 8.28l-2.99 2.99-2.99-2.99",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.25 11V8.17A5.75 5.75 0 0 1 12 2.42M16.79 8.17h3.36a1.45 1.45 0 0 0 1.44-1.44 1.45 1.45 0 0 0-1.44-1.44h-1a1.44 1.44 0 0 1-1.44-1.44 1.44 1.44 0 0 1 1.44-1.43h3.35M19.67.5v1.92M19.67 8.17v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoneyWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M9.11 17.8h3.35a1.44 1.44 0 0 0 1.44-1.44 1.43 1.43 0 0 0-1.44-1.44h-1a1.44 1.44 0 0 1-1.44-1.44A1.45 1.45 0 0 1 11.5 12h3.36M11.98 9.17v2.87M11.98 17.8v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 1.49h21.1v21.1H1.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.53 7.25H1.43V1.49h21.1v5.76zM4.31 4.37h1.92M8.15 4.37h1.91M11.98 4.37h1.92"
  })));
};

const SvgMonsterTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 16.77,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 16.77,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.77H9.14M1.5 16.77V9.14h21v7.63M18.68 9.14H12V3.41h4.77l1.91 5.73zM5.32 12.95h13.36"
  }));
};

const SvgMoon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.46 16.54A10.51 10.51 0 1 1 12 1.49a10.34 10.34 0 0 1 2.8.38 8.12 8.12 0 0 0 2.45 15.86 8 8 0 0 0 4.21-1.19Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMotorcycleVehicle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 4.33,
    cy: 16.77,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.67,
    cy: 16.77,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.67 16.77 17.75 3.35h-2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M23.5 11h-2.56a8.41 8.41 0 0 0-8 5.75H4.33M18.39 7.19h-4.88a2.11 2.11 0 0 0-2 1.44 2.1 2.1 0 0 1-2 1.44H.5M6.25 10.06l3.83 6.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m11.19 9.25 1.77 1.77h5.88"
  }));
};

const SvgMotorcycle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 16.75,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 16.75,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 7.2h-.84a4.89 4.89 0 0 0-3.46 1.44A4.9 4.9 0 0 1 10 10.07H1.5M22.5 11.98l-3.82-.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 16.75 16.77 3.39h-2.86M11.05 16.75H7.23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 10.07a5 5 0 0 1 4.29 2.48l2.4 4.2h2.86l.18-.92a6.19 6.19 0 0 1 4.33-4.73l.26-.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMountFuji = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 22.5c-4.09-1.14-7.11-5.5-7.5-10.68H9C8.61 17 5.59 21.36 1.5 22.5M8.18 15.82H12M13.91 15.82h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.6 14.54a7.64 7.64 0 1 1 10.8 0M.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMountainSide = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.61 22.5H1.48v-9.54l18.13 9.54z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.48 13 5.3-10.66a1.52 1.52 0 0 1 1.37-.84 1.5 1.5 0 0 1 1.37.87L15 13.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.29 5.32 1.92 2.86.95-.95 1.91.95 1.36-1.81M21.52 15.82h-7.63l3.81-9.55 3.82 9.55zM17.7 15.82v5.73"
  }));
};

const SvgMountainTop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 22.5h-21L9.37 3.27A2.85 2.85 0 0 1 12 1.5a2.85 2.85 0 0 1 2.63 1.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.17 8.63 2.92 1.46L12 7.23l1.91.95 2.18-1.36"
  }));
};

const SvgMountain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 22.52h23M3.38 22.52l.95-2.87 1.92-.96 1.92-1.92h7.66l.96 1.92 2.88.96 1.91 2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.19,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.44ZM12 12.94ZM6.25 7.19ZM17.75 7.19ZM16.07 3.12l-.68.68.68-.68.67-.68ZM7.93 11.25l-.67.68.67-.68.68-.67ZM7.93 3.12l.68.68-.68-.68-.67-.68ZM16.07 11.25l.67.68-.67-.68-.68-.67Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMouseAnimal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m14.34 6.68-2.52-1.94A6.43 6.43 0 0 0 5.3 4a6.63 6.63 0 0 0-3.8 6.11v4.79a5.72 5.72 0 0 0 5.73 5.73h.83a7.35 7.35 0 0 0 3.77-1 7.3 7.3 0 0 1 6.34-.63l4.33 1.62",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 10.09a4.77 4.77 0 0 0 4.77 4.77h15a1.28 1.28 0 0 0 1.28-1.28 1.26 1.26 0 0 0-.5-1l-3.16-2.42a2.86 2.86 0 0 0-4.18-3.96 2.37 2.37 0 0 0-.37.48 2.85 2.85 0 0 0 .41 3.53",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 9.14a2.86 2.86 0 1 1 0 5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMousePointerUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 8.18h3.82A3.82 3.82 0 0 1 17.73 12v4.77A5.73 5.73 0 0 1 12 22.5a5.73 5.73 0 0 1-5.73-5.73V12a3.82 3.82 0 0 1 3.82-3.82ZM12 11.05v2.86M9.14 4.36 12 1.5l2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 8.18h3.82A3.82 3.82 0 0 1 17.73 12v4.77A5.73 5.73 0 0 1 12 22.5a5.73 5.73 0 0 1-5.73-5.73V12a3.82 3.82 0 0 1 3.82-3.82ZM12 11.05v2.86M12 8.18V3.89a1.44 1.44 0 0 1 1.43-1.44 1.44 1.44 0 0 1 1.43 1.44 1.43 1.43 0 0 0 1.44 1.43 1.43 1.43 0 0 0 1.43-1.43V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.95 5.28 12 2.23l3.05 3.05M15.05 18.72 12 21.77l-3.05-3.05M5.28 15.05 2.23 12l3.05-3.05M18.72 8.95 21.77 12l-3.05 3.05M12 21.77v-7.82M12 10.05V2.23M21.77 12h-7.82M10.05 12H2.23"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.48-5.18-5.14a2 2 0 0 1 2.86-2.86L12 15.8V6.36a2 2 0 0 1 1.74-2 1.92 1.92 0 0 1 2.08 1.9V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M7.23 7.21l-2.87 2.86L1.5 7.21M4.36.52v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveLeftRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m11.05 22.5-5.14-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.32 1.32V6.38a2 2 0 0 1 1.74-2 1.89 1.89 0 0 1 1.52.56 1.87 1.87 0 0 1 .56 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M19.64 7.23l2.86-2.87-2.86-2.86M15.82 4.36h6.68M4.36 7.23 1.5 4.36 4.36 1.5M8.18 4.36H1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M4.36 7.23 1.5 4.36 4.36 1.5M9.14 4.36H1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m8 23-5.38-5.38a2.12 2.12 0 0 1 3-3L7 16V6.11A2.08 2.08 0 0 1 8.82 4 2 2 0 0 1 11 6v6l5.28.75a2 2 0 0 1 1.72 2 18 18 0 0 1-1.91 8.09L16 23M19 7l3-3-3-3M14 4h8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveUpDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M7.23 11.04l-2.87 2.87-2.86-2.87M4.36 6.27v7.64M5.32 4.36 8.18 1.5l2.86 2.86M8.18 9.14V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMoveUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.52-5.18-5.13A2 2 0 0 1 7.23 16a2.07 2.07 0 0 1 .59-1.44 2 2 0 0 1 1.43-.59 2 2 0 0 1 1.43.59L12 15.84V6.4a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.6 1.84 1.84 0 0 1 .57 1.35V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.25 17.25 0 0 1-1.82 7.72l-.09.17M1.5 5.34l2.86-2.86 2.87 2.86M4.36 12.02V2.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.12 22.75-5.26-5.26A2.08 2.08 0 0 1 1.25 16a2.08 2.08 0 0 1 2.07-2 2.08 2.08 0 0 1 1.47.61l1.35 1.35V6.24a2 2 0 0 1 1.78-2.06 2 2 0 0 1 2.13 2V12l5.17.74a2 2 0 0 1 1.67 1.94A17.61 17.61 0 0 1 15 22.57l-.09.18M13.96 6.13h7.82M17.87 2.22v7.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m15.67 2.95 2.2-2.2 2.2 2.2h-4.4zM21.05 3.93l2.2 2.2-2.2 2.2v-4.4zM20.07 9.31l-2.2 2.2-2.2-2.2h4.4zM14.69 8.33l-2.2-2.2 2.2-2.2v4.4z"
  }));
};

const SvgMovieCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h15.27v12.41H1.5zM16.77 17.73l4.78 3.82h.95V9.14h-.95l-4.78 3.82v4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 5.8,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.43,
    cy: 5.8,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 12.95h1.91"
  }));
};

const SvgMovieFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 12,
    r: 10.52,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 6.26,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 17.74,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 17.74,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.28,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.76,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.76,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.52H12.02M11.07 12h1.91"
  }));
};

const SvgMovieTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 10a2.82 2.82 0 0 0-.84 2 2.86 2.86 0 0 0 2.86 2.86v4.78h-21v-4.78a2.82 2.82 0 0 0 2-.84 2.85 2.85 0 0 0 0-4 2.82 2.82 0 0 0-2-.84V4.36h21v4.78a2.82 2.82 0 0 0-2.02.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.91,
    y: 8.18,
    width: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.91,
    y: 12,
    width: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.91,
    y: 15.82,
    width: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMovieTrophy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 6.27H13a1.91 1.91 0 0 1 1.91 1.91v1.91L13 22.5h-1.9L9.14 10.15v-2a1.91 1.91 0 0 1 1.91-1.88ZM15.82 22.5H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMovie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.45h21v19.09h-21zM1.5 7.23h21M2.45 2.45l4.78 4.78M7.23 2.45 12 7.23M12 2.45l4.77 4.78M16.77 2.45l4.78 4.78M5.32 12h13.36M5.32 16.77h7.63"
  }));
};

const SvgMp3Player = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.77,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 4.36h7.64v6.68H8.18z"
  }));
};

const SvgMri = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 16.8a6.66 6.66 0 0 0 6-3.82 6.57 6.57 0 0 0 .65-2.87 6.68 6.68 0 0 0-13.36 0A6.57 6.57 0 0 0 9.79 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 16.8a6.66 6.66 0 0 0 6-3.82 6.57 6.57 0 0 0 .65-2.87 6.68 6.68 0 0 0-13.36 0A6.57 6.57 0 0 0 9.79 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.6 13a6.57 6.57 0 0 1-.6-2.89 6.68 6.68 0 0 1 4.78-6.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.6 13a6.57 6.57 0 0 1-.6-2.89 6.68 6.68 0 0 1 4.78-6.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.85 13H3.41a1.9 1.9 0 0 0-1.91 1.89v1.91h14.32M3.41 21.57V16.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 16.8v3.81H22.5v-10.5"
  }));
};

const SvgMultipleTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 1.5h7.64M6.27 14.86h11.46M8.18 18.68h1.91M13.91 17.73h1.91M21 10.49l-2.7-2.7-3.78 3.77a6.19 6.19 0 0 0-.6-.23V1.5h-3.83v9.83a6.19 6.19 0 0 0-.6.23L5.71 7.79 3 10.49 6.5 14a6.63 6.63 0 0 0 .83 8.53h9.34A6.63 6.63 0 0 0 17.5 14ZM1.5 12l5.73-5.73M16.77 6.27 22.5 12"
  }));
};

const SvgMuscleGain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 16.77S8 13.17 10.09 11A14.12 14.12 0 0 1 13 9.13a4.78 4.78 0 1 1 5.61 4.7c-1.83 2.77-5.83 7.71-11.33 7.71C4.36 21.54 1.5 13 1.5 9.13V4.48a2.26 2.26 0 0 1 2.14-2.25c1.73-.09 4 0 4.54 1.17.82 1.71-.95 4.78-2.86 4.78 0 1.5 1.83 4.76 3.49 6.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMushroomCircles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5A10.5 10.5 0 0 1 22.5 12a1.91 1.91 0 0 1-1.91 1.91H3.41A1.91 1.91 0 0 1 1.5 12 10.5 10.5 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 9.14,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 9.14,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a3.83 3.83 0 0 0 3.74-4.66l-.88-3.93H9.14l-.88 3.93A3.83 3.83 0 0 0 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMushroom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 10.09a3.76 3.76 0 0 0-1.45 5.46l.83 1.25a3.71 3.71 0 0 1 .62 2 3.66 3.66 0 0 1-3.67 3.66h-.3a3.66 3.66 0 0 1-3.67-3.66 3.71 3.71 0 0 1 .62-2l.83-1.25a3.76 3.76 0 0 0-1.45-5.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.78 13h4a2.87 2.87 0 0 0 2.86-2.86A8.58 8.58 0 0 0 5.93 4a8.53 8.53 0 0 0-2.52 6.07A2.85 2.85 0 0 0 6.27 13h4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicAlbum = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h15.27v15.27H1.5zM22.5 12a6.67 6.67 0 0 1-5.73 6.61V5.39A6.67 6.67 0 0 1 22.5 12Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 13.91V8.18l-5.73.96v5.72"
  }));
};

const SvgMusicArchive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h21V22.5h-21zM22.5 3.41H12L10.09 1.5H1.5v5.73h21V3.41z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.77v-5.73L9.14 12v5.73"
  }));
};

const SvgMusicChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 12.93a1 1 0 1 1 1 1 1 1 0 0 1-1-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 11.98,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.98V6.25l-5.73.96v5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 16.77a1 1 0 0 1 1.91 0 1 1 0 1 1-1.91 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 15.82v-5.73l-5.72.95v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 17.73a1 1 0 1 1 1 .95 1 1 0 0 1-1-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 16.77v-5.73l-5.73.96v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgMusicFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 5.29h1.92M4.33 5.29h1.92M8.17 5.29h1.91M12 5.29h1.92M15.83 5.29h1.92M19.67 5.29h1.91M.5 19.67h13.42M.5 15.83h1.92M4.33 15.83h1.92M8.17 15.83h1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.71,
    cy: 20.63,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 13.92h-2.87v6.71M12 15.83h1.92M15.83 15.83h1.92"
  }));
};

const SvgMusicFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 17.73a1 1 0 1 1 1 .95 1 1 0 0 1-1-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 16.77v-5.73l-5.73.96v5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 12.93a1 1 0 1 1 1 1 1 1 0 0 1-1-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 11.98,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.98V6.25l-5.73.96v5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicNoteCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 8.18h-2.86v5.73"
  }));
};

const SvgMusicNoteFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 22.5H3.41v-21h12.41l4.77 4.77V22.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5h.96l4.77 4.77v.96z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 11.04h-2.86v5.73"
  }));
};

const SvgMusicNote = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.4 21c-1.68 1.7-4.08 2.06-5.32.8s-.9-3.63.8-5.32 4.07-2 5.32-.8.9 3.63-.8 5.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.67 11v-1C18.67 5.31 13 6.26 13 .54V18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgMusicNotes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 13.91V8.18l-5.72.96v5.72"
  }));
};

const SvgMusicPlayer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.77,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 4.36h11.45v6.68H6.27z"
  }));
};

const SvgMuteVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 9.14-5.73 5.72M16.77 9.14l5.73 5.72M1.5 8.18h4.77v7.64H1.5zM13.91 3.41v17.18h-1.67l-5.97-4.77V8.18l5.97-4.77h1.67z"
  }));
};

const SvgMute = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-3.82"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 1.5,
    width: 7.64,
    height: 13.36,
    rx: 3.7,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 11.05A7.64 7.64 0 0 1 12 18.68a7.64 7.64 0 0 1-7.64-7.63M9.14 22.5h5.72M22.5 1.5l-21 21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNailTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.75 9.69-7.44-7.44-.93.93a3.3 3.3 0 0 1 0 4.65L1.75 19.46v2.79h2.79l11.63-11.63a3.3 3.3 0 0 1 4.65 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a5.71 5.71 0 0 1 5.71 5.71H6.29A5.71 5.71 0 0 1 12 1.5ZM12 1.5v2.86M13.9 18.64 12 21.5l-1.9-2.86V7.21h3.8v11.43zM8.19 11.02l7.62.96M8.19 14.83l7.62.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNativeAmericanWoman = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.43 8.18h17.18V12H3.43zM4.62 8.18a7.87 7.87 0 0 1 2-3.49 7.63 7.63 0 0 1 9.92-.76 8 8 0 0 1 .89.76 7.76 7.76 0 0 1 2 3.49"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.54 3.93a8.53 8.53 0 0 1 6-2.43v1a8.54 8.54 0 0 1-2.18 5.73M5.68 19.12a9.43 9.43 0 0 0 .94 1.15 7.64 7.64 0 0 0 11.74-1.15M3.43 12h3.82v.4a3.42 3.42 0 0 1-3.42 3.42h-.4V12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 12h.4a3.42 3.42 0 0 1 3.42 3.42v.4H16.8V12Z",
    transform: "rotate(-180 18.705 13.91)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.39,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.66,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.64 19.16a1.88 1.88 0 0 1 .66 1.43 1.91 1.91 0 1 1-3.82 0 1.88 1.88 0 0 1 .66-1.43M20.91 19.16a1.88 1.88 0 0 1 .66 1.43 1.91 1.91 0 0 1-3.82 0 1.88 1.88 0 0 1 .66-1.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNetworkSignal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.46 19.86a9.5 9.5 0 1 1 7.1 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.77 15.33a5.7 5.7 0 1 0-7.54 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.1,
    r: 1.9,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.9 15.8c0 1.05 0 6.65-1.9 6.65s-1.9-5.6-1.9-6.65a1.9 1.9 0 0 1 3.8 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNetworkSocial = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.5 1.69h-4.69l-2.06 3.75H4.5v4.69h5.67L4.5 20.44v1.87h4.69l2.06-3.75h8.25v-4.68h-5.67L19.5 3.56V1.69z"
  }));
};

const SvgNetwork = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 16.77A2.86 2.86 0 0 1 12 13.91a2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.11,
    cy: 20.11,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.89,
    cy: 3.89,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.95 16.05-3.2 3.2M19.25 4.75l-3.2 3.2M17.73 12a5.74 5.74 0 1 1-1.68-4 5.69 5.69 0 0 1 1.68 4ZM18.42 18.42l-2.37-2.37M7.95 7.95 5.58 5.58"
  }));
};

const SvgNewHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.06H.5M22.54 10.56 12 1.94 1.46 10.56M13.92 19.19h-3.84v-5.75h3.84M12.96 16.31h-2.88M2.42 20.15v-6.71h.96l1.91 5.75h.96v-6.71M22.54 12.48l-.96 6.71h-.95l-.96-2.88-.96 2.88h-.96l-.96-6.71"
  }));
};

const SvgNewspaperArticle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 9.15v11.51a1.92 1.92 0 0 1-1.92 1.92 1.95 1.95 0 0 1-1.92-1.92V9.15Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.6 22.58H3.34a1.92 1.92 0 0 1-1.92-1.92V1.48h17.26v19.18a1.95 1.95 0 0 0 1.92 1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.26 11.07h9.59v3.84H5.26zM4.3 18.74h11.51M1.42 7.23h17.26M4.3 4.36h1.92M8.13 4.36h1.92"
  })));
};

const SvgNewspaperNewsletter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.91v6.68a1.92 1.92 0 0 1-1.91 1.91 1.93 1.93 0 0 1-1.91-1.91v-6.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V1.5h17.18v19.09a1.93 1.93 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 5.32h9.55v4.77H5.32zM4.36 13.91h3.82M4.36 17.73h3.82M11.05 13.91h3.82v3.82h-3.82z"
  }));
};

const SvgNewspaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 8.18v12.41a1.92 1.92 0 0 1-1.91 1.91 1.93 1.93 0 0 1-1.91-1.91V8.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 22.5H3.41a1.9 1.9 0 0 1-1.91-1.91V1.5h17.18v19.09a1.93 1.93 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 5.32h9.55v5.73H5.32zM4.36 14.86h11.46M4.36 18.68h11.46"
  }));
};

const SvgNext = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 12-6.68 3.82V8.18L14.86 12zM15.82 7.23v9.54"
  }));
};

const SvgNightCloudy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.67 15.83a3.31 3.31 0 0 0-2.18-2.66 3 3 0 0 0-1.14-.17h-.57a5 5 0 0 0 .1-1 4.79 4.79 0 0 0-4.8-4.79 3.69 3.69 0 0 0-.58 0A4.79 4.79 0 0 0 5.29 12a3.83 3.83 0 0 0-3.83 3.83M.5 17.75h4.79M7.21 17.75h9.58M2.42 21.58h7.66M12 21.58h9.58M18.71 17.75h4.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.11 7.31a5.72 5.72 0 0 1 5.67-4.89 6 6 0 0 1 .75.05A4.11 4.11 0 0 0 22.46 9a5.72 5.72 0 0 1-4.85 4.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNoSmoking = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h18.14v4.77H1.5zM7.23 9.14v4.77M22.5 8.18v6.68M7.23 1.5l9.54 21"
  }));
};

const SvgNoodles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.52 12a9.55 9.55 0 0 0 5.4 8.59l.33 1.91h7.64l.33-1.91a9.73 9.73 0 0 0 2.6-1.84A9.56 9.56 0 0 0 20.61 12ZM4.39 1.5h19.09M4.39 5.32h19.09M6.3 3.41V12M9.16 3.41V12M12.02 3.41V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNose = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23.52v6.21a4.25 4.25 0 0 1-.86 2.57l-4 5.35a4.28 4.28 0 0 0-.86 2.58 4.29 4.29 0 0 0 4.3 4.29h3.33",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 17.7h.43a3 3 0 0 1 2.91 2.39 3 3 0 0 0 2.91 2.39H12M16.77.52v6.21a4.25 4.25 0 0 0 .86 2.57l4 5.35a4.28 4.28 0 0 1 .86 2.58 4.29 4.29 0 0 1-4.3 4.29h-3.33",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 17.7h-.43a3 3 0 0 0-2.91 2.39 3 3 0 0 1-2.91 2.39H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgNotebook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 2.41h17.22V22.5H3.39zM7.22.5v3.83M12 .5v3.83M16.78.5v3.83M6.26 11.02h11.48M6.26 7.2h11.48M6.26 14.85h11.48M6.26 18.67H12"
  }));
};

const SvgNotreDame = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 2.41v6.7H8.17v-6.7H3.39V22.5H20.61V2.41h-4.78zM1.48 15.8h21.04"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.93,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.22 12.93v2.87M16.78 12.93v2.87M12 18.67v3.83M15.83 18.67v3.83M8.17 18.67v3.83M1.48 9.11h6.69M15.83 9.11h6.69M1.48 5.28h1.91M20.61 5.28h1.91M5.3.5v1.91M18.7.5v1.91M8.17 5.28h7.66M.52 22.5h22.96"
  }));
};

const SvgNurse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 15.82h15.27v3.82H4.36zM19.64 15.82H4.36L1.5 10.09Q6.75 4.36 12 4.36t10.5 5.73ZM9.14 10.09h5.72M12 7.23v5.72"
  }));
};

const SvgOculus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.75 6.15a4.47 4.47 0 0 1-1.32 3.18l-11 11A4.5 4.5 0 1 1 3.07 14l11-11a4.5 4.5 0 0 1 7.68 3.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.75 6.15a4.47 4.47 0 0 1-1.32 3.18l-6 6A4.5 4.5 0 1 1 8.07 9l6-6a4.5 4.5 0 0 1 7.68 3.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.2,
    cy: 6.19,
    r: 0.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.66 9.83h1.82M12.66 12.56h1.82M9.93 9.83h1.82M9.93 12.56h1.82"
  }));
};

const SvgOfficeBriefcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "briefcase office"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 6.27h17.18a1.91 1.91 0 0 1 1.91 1.91v1A3.82 3.82 0 0 1 18.68 13H5.32A3.82 3.82 0 0 1 1.5 9.14v-1a1.91 1.91 0 0 1 1.91-1.87ZM7.23 12.95v1.91M16.77 12.95v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81z"
  })));
};

const SvgOfficeChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "office chair"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5h3.82a3.82 3.82 0 0 1 3.82 3.82V13h0H6.27h0V5.32a3.82 3.82 0 0 1 3.82-3.82ZM6.75 13h10.5a2.39 2.39 0 0 1 2.39 2.39v0a1.43 1.43 0 0 1-1.43 1.43H5.8a1.43 1.43 0 0 1-1.43-1.43v0A2.39 2.39 0 0 1 6.75 13ZM12 16.77v3.82",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 21.55,
    r: 0.95,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 21.55,
    r: 0.95,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 20.59h7.64"
  })));
};

const SvgOfficePhone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 4.39h11.45A1.91 1.91 0 0 1 22.5 6.3v11.45a1.91 1.91 0 0 1-1.91 1.91H9.14V4.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 2.48,
    width: 7.64,
    height: 20.05,
    rx: 1.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12.02h1.91M14.86 12.02h1.91M17.73 12.02h1.91M12 15.84h1.91M14.86 15.84h1.91M17.73 15.84h1.91M12 8.2h7.64"
  }));
};

const SvgOfficeSuitcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "briefcase alternatif"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.86a3.44 3.44 0 0 1-1.77-.49L1.5 9.14v-1a1.91 1.91 0 0 1 1.91-1.87h17.18a1.91 1.91 0 0 1 1.91 1.91v1l-8.73 5.23a3.44 3.44 0 0 1-1.77.45Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 13.91v1.91M15.82 6.27H8.18l.96-3.81h5.72l.96 3.81z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgOneFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.23 14.83V3.74a1.94 1.94 0 0 1 1.7-2 1.8 1.8 0 0 1 1.49.54A1.83 1.83 0 0 1 13 3.63v6.54l4.92.7a1.87 1.87 0 0 1 1.61 1.84 16.94 16.94 0 0 1-1.78 7.56l-.09.16v2.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.23 23.23v-2.8l-2.64-2.64a3.73 3.73 0 0 1-1.09-2.64v-4.38a2.46 2.46 0 0 1 1.28-2.22 2.32 2.32 0 0 1 2.45.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgOpenBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 3.41v13.36h7.64A2.86 2.86 0 0 1 12 19.64V6.27a2.86 2.86 0 0 0-2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 3.41v13.36h-7.64A2.86 2.86 0 0 0 12 19.64V6.27a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 16.77v3.82h-21v-3.82"
  }));
};

const SvgOpenCarTrunk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.89 7.28H8.15a1.92 1.92 0 0 0-1.53.77l-2.29 3.06-2.87 1v5.69h2.87a1.91 1.91 0 1 1 3.82 0h6.7a1.91 1.91 0 0 1 3.82 0h3.83V13l-4.78-1.91-2.3-3.06a1.92 1.92 0 0 0-1.53-.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.76,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.24,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.1 12.07H7.2M20.59 14.93h1.91M11.98 12.07V9.2M.5 7.28h1.91l1.92 3.83"
  }));
};

const SvgOpenEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10 15.3-7 7M20.6 22.3l-7-7M21 9.5v13H3v-13l9-8 9 8z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21 9.5-9 8.6-9-8.6"
  }));
};

const SvgOpenRoofCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 14.93h1.91M12 12.07V9.2M17.73 11.11a3.27 3.27 0 0 1-2.31 1H9.14a1.91 1.91 0 0 1-1.91-1.91h-1l-1.91.95-2.86 1v5.65h2.9a1.91 1.91 0 0 1 3.82 0h6.68a1.91 1.91 0 0 1 3.82 0h3.82v-3.48a1.92 1.92 0 0 0-1.2-1.78l-3.57-1.43-1.91-3.81"
  }));
};

const SvgOperaHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.58 7.22-1.27 8.62h-1.76l-.49-3.93A8.83 8.83 0 0 0 17 9l.17-.15a6.74 6.74 0 0 1 4.41-1.63Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.55 15.84h-4.63L12 13.93h-1.27L10 9.63l-.87-5.29A9.07 9.07 0 0 1 15 6.49a9.21 9.21 0 0 1 3.08 5.42Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.73 13.93H7.21l-.76-2.62-1.64-4.09A6.72 6.72 0 0 1 9.2 8.83a8.75 8.75 0 0 1 .81.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.21 13.93H3.06l-.64-3.84a7.55 7.55 0 0 1 3.88 1.08 1 1 0 0 1 .15.14ZM1.46 20.17v-6.24H12l1.92 1.91h8.62v4.34M23.5 19.68H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgOrganismMagnifyingGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 20.48a2 2 0 0 1-2 2 2 2 0 0 1-1.5-.57l-4.15-4.16 2.86-2.86 4.2 4.11a2 2 0 0 1 .59 1.48ZM13.91 13.91l2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 9.61,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 12.95,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgOrientationCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.22 4.35h11.51v5.75H6.22zM3.34 13.94H20.6v5.75H3.34zM11.98 10.11v3.83M11.98.52v3.83M11.98 19.7v3.83"
  })));
};

const SvgOrientationDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.48 22.57H23.5"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 7.195 12.505)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.96 9.63h12.47v5.75H.96z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 16.785 10.105)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.15 7.23h17.26v5.75H8.15z"
  })));
};

const SvgOrientationLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46.52v23.01M5.3 4.35h12.47v5.75H5.3zM5.3 13.94h17.26v5.75H5.3z"
  })));
};

const SvgOrientationMiddle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.9 6.27h5.75v11.51H13.9zM4.31 3.39h5.75v17.26H4.31zM13.9 12.02h-3.84M23.49 12.02h-3.83M4.31 12.02H.47"
  })));
};

const SvgOrientationRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55.52v23.01"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 12.48 7.23)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 4.35h12.47v5.75H6.25z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 10.085 16.82)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 13.94h17.26v5.75H1.45z"
  })));
};

const SvgOrientationUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 1.47H.49"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(90 16.795 11.545)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.56 8.67h12.47v5.75H10.56z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(90 7.2 13.94)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M-1.43 11.06h17.26v5.75H-1.43z"
  })));
};

const SvgOrnamentLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.85,
    r: 7.65,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M4.79 12.3l2.1 1.59 2.56-1.91 2.54 1.91 2.55-1.91 2.56 1.91 2.11-1.59M4.65 16.99l2.24 1.68 2.56-1.91 2.54 1.91 2.55-1.91 2.56 1.91 2.25-1.68"
  }));
};

const SvgOrnamentStar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.85,
    r: 7.65,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M12 10.07v9.56M16.78 14.85H7.22M8.17 11.98h1.92M13.91 11.98h1.92M8.17 17.72h1.92M13.91 17.72h1.92"
  }));
};

const SvgOrnament = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.85,
    r: 7.65,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M5.28 18.48c1-.49 1.34-1.72 2.88-1.72 1.92 0 1.92 1.91 3.83 1.91s1.91-1.91 3.83-1.91c1.54 0 1.84 1.24 2.9 1.73M4.41 13.89C6.25 13.84 6.28 12 8.16 12s1.92 1.91 3.83 1.91S13.9 12 15.82 12s1.91 1.87 3.77 1.91"
  }));
};

const SvgOven = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 9.14h13.36v9.55H5.32zM4.36 5.32h5.73M17.73 5.32h1.91M13.91 5.32h1.91M10.09 12l-1.91 3.82M14.86 12l-1.91 3.82"
  }));
};

const SvgOverheadCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.45 7.33H17a5.83 5.83 0 0 0 0-.84 5 5 0 0 0-10 0 4.2 4.2 0 0 0 0 8.39h10.45a3.78 3.78 0 0 0 0-7.55ZM21.58 18.71H8.17M6.25 18.71H.5M23.5 22.54h-6.71M14.88 22.54H3.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgOverlapShapes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.13 8.17h7.67v7.67H8.13zM.46 4.33h1.92M.46 8.17h1.92M.46 12h1.92M3.34 1.45h1.92M.46 15.84h1.92M21.56 8.17h1.92M17.72 8.17h1.92M21.56 12h1.92M21.56 15.84h1.92M21.56 19.68h1.92M21.56 22.55h1.92M4.3 15.84h1.92M.46 1.45h1.92M7.17 1.45h1.92M11.01 1.45h1.92M14.85 1.45h1.92M7.17 22.55h1.92M7.17 18.72h1.92M11.01 22.55h1.92M14.85 22.55h1.92M18.68 22.55h1.92M14.85 5.29h1.92"
  })));
};

const SvgOwl = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 7.24v3.83A11.48 11.48 0 0 1 6.26 22.54V7.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.24,
    r: 5.74,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.39 1.5a3.83 3.83 0 0 0 3.83 3.83h1A3.82 3.82 0 0 1 12 9.15",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.61 1.5a3.83 3.83 0 0 1-3.83 3.83h-1A3.82 3.82 0 0 0 12 9.15M16.78 23.5v-7.83M12.96 20.63v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgOxygen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 5.3a3.82 3.82 0 0 1 3.82 3.81v13.37H1.5V9.11A3.82 3.82 0 0 1 5.32 5.3ZM5.32.52V5.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 11v4.3a3.35 3.35 0 0 1-3.34 3.34 3.35 3.35 0 0 1-3.3-3.32V7.2a4.77 4.77 0 0 0-4.82-4.77H2.45M9.14 18.66H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 8.64c0 1.84-1.28 2.38-2.86 2.38s-2.87-.54-2.87-2.38 1.28-4.3 2.87-4.3 2.86 2.45 2.86 4.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgP = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 10.57a4.29 4.29 0 0 1-4.29 4.29H12v2.87H7.23V6.27h5.25a4.3 4.3 0 0 1 4.29 4.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPackageArrowsUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.78,
    cy: 16.33,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 23.5V23a4.29 4.29 0 0 1 4.3-4.3 4.29 4.29 0 0 1 4.3 4.3v.48M15.71 16.69l2.98-2.99 2.99 2.99",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.69 13.93v2.87A5.74 5.74 0 0 1 13 22.54M7.33 8.31 4.34 11.3 1.36 8.31",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.35 11.07V8.2a5.73 5.73 0 0 1 5.73-5.74M12.95 1.5h9.57v8.61h-9.57zM17.74 4.37V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPackage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 22.22 9.77-4.88V6.59L12 1.78 2.23 6.59v10.75L12 22.22z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.23 6.59 9.77 4.8v10.83M12 22.22V11.39l9.77-4.8"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.77 6.59 12 11.39l-9.77-4.8"
  }));
};

const SvgPadlockDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 11.05h19.09V22.5H2.45zM12 1.5a6.68 6.68 0 0 1 6.68 6.68V11H5.32V8.18A6.68 6.68 0 0 1 12 1.5ZM9.14 16.77h1.91M5.32 16.77h1.91M12.95 16.77h1.91M16.77 16.77h1.91"
  }));
};

const SvgPadlockHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M8 12.5h8v6H8z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.5a2 2 0 0 1 2 2v2h-4v-2a2 2 0 0 1 2-2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPadlockLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.64a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86 1.9 1.9 0 0 1 1.91-1.91h5.73l.95.95h3.82l.95-.95h5.73a1.9 1.9 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.32h1.91a1.92 1.92 0 0 1 1.91 1.91v10.5M3.41 17.73V7.23a1.92 1.92 0 0 1 1.91-1.91h1.91M9.14 5.32h5.73v3.82H9.14zM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPadlockMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5h1.91a1.9 1.9 0 0 1 1.91 1.91v13.36a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V3.41A1.9 1.9 0 0 1 3.41 1.5h15.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 8.18h5.73V12H9.14zM12 4.36a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V6.27A1.91 1.91 0 0 1 12 4.36ZM12 22.5v-3.82M16.77 22.5H7.23M1.5 14.86h21"
  }));
};

const SvgPadlockUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 7.23h5.73V22.5h-21V7.23h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 19.64a2.86 2.86 0 0 1 2.86-2.87 2.87 2.87 0 0 1 2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 14.86h5.73M13.91 18.68h5.73M9.14 5.32h5.73v3.82H9.14zM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5Z"
  }));
};

const SvgPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 11.05h19.09V22.5H2.45zM12 1.5a6.68 6.68 0 0 1 6.68 6.68V11H5.32V8.18A6.68 6.68 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-2.87"
  }));
};

const SvgPages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 13.91h7.64M6.27 10.09h7.64M6.27 17.73h7.64M16.77 8.18V22.5H3.41V5.32h13.36v2.86z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 18.68h3.82V1.5H7.23v3.82"
  }));
};

const SvgPaintBrushTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 1.5h13.36v8.59H5.32zM5.32 10.09V12a2.86 2.86 0 0 0 2.86 2.86h1.91v5.73a1.91 1.91 0 1 0 3.82 0v-5.73h1.91A2.86 2.86 0 0 0 18.68 12v-1.91ZM9.14 7.23V1.5"
  }));
};

const SvgPaintBucketTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M21.57 14.89a2.32 2.32 0 0 1-.68 1.64l-5.36 5.36a2.32 2.32 0 0 1-1.64.68 2.32 2.32 0 0 1-1.63-.68L2.87 12.5l8.63-8.63 9.39 9.39a2.32 2.32 0 0 1 .68 1.63ZM11.02 9.14l7.67-7.67M12.94 2.43 1.43 13.94",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPaintBucket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.18h13.36V22.5H5.32zM20.59 8.18H3.41M12 1.5a6.68 6.68 0 0 1 6.68 6.68H5.32A6.68 6.68 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 8.18h-3.81V12a1.91 1.91 0 1 0 3.81 0v2.86a1.91 1.91 0 0 0 3.82 0V8.18ZM14.86 11.05v1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPaintbrushPaintTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(45 14.44 9.561)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.54 5.07h13.81v8.98H7.54z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m16.15 17.62-1.55 1.55a2 2 0 0 1-2.76 0l-2-2L5 21.89a2.08 2.08 0 0 1-1.47.61 2.07 2.07 0 0 1-2.03-2.07A2.08 2.08 0 0 1 2.11 19l4.76-4.8-2-2a2 2 0 0 1 0-2.76l1.51-1.59ZM15.66 4.43l-4.39 4.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPaintbrush = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M5.43 13.57c-1.49 1.5-.16 3.67-3 6.55a8.86 8.86 0 0 0 4.14.49A7.57 7.57 0 0 0 10.86 19a3.84 3.84 0 0 0 1-3.7 3.7 3.7 0 0 0-1-1.73 3.79 3.79 0 0 0-1.73-1 3.84 3.84 0 0 0-3.7 1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.41 12.68 19.66 2.44l2.39 2.4-10.27 10.27"
  })));
};

const SvgPancake = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.42 22.5H4.58l-2.12-3.82h19.09l-2.13 3.82zM.55 18.68h22.9"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 14.86,
    width: 19.09,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.17 11.05h-4.08M17.41 11.05h2.23A1.91 1.91 0 0 1 21.55 13a1.84 1.84 0 0 1-.55 1.3 1.87 1.87 0 0 1-1.34.56H4.36A1.92 1.92 0 0 1 2.45 13 1.83 1.83 0 0 1 3 11.61a1.87 1.87 0 0 1 1.34-.56h1.93"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 7.23H4.36A1.87 1.87 0 0 0 3 7.79a1.84 1.84 0 0 0-.57 1.35 1.92 1.92 0 0 0 1.91 1.91h1.93M17.73 7.23h1.91a1.92 1.92 0 0 1 1.91 1.91 1.95 1.95 0 0 1-1.91 1.91h-2.23M14.17 11.05h-4.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 7.23V10a2.1 2.1 0 0 1-1.43 1.93 1.91 1.91 0 0 1-2.39-1.82 2 2 0 0 0-1.6-1.91 1.91 1.91 0 0 0-2.22 1.88v2.75a2 2 0 0 1-1.58 2A1.92 1.92 0 0 1 6.27 13V7.23a1.91 1.91 0 0 1 1.91-1.91h7.64a1.91 1.91 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPaperAirplane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15 21-4.36-7.64L3 9l18-6-6 18zM11 13l5-5"
  }));
};

const SvgPaperclipAttachment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m14.2 21.23 6.51-8.45a6.54 6.54 0 0 0-1.19-9.17 6.3 6.3 0 0 0-9.17 1.19L3 14.29c-1.89 2.26-.4 5 1.28 6.32a4.4 4.4 0 0 0 6.16-.61l7.31-9.49a2.8 2.8 0 0 0-.51-3.93 2.81 2.81 0 0 0-3.93.51l-6.17 8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPaperclip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.72 6.22 7 14.08A2.7 2.7 0 0 0 6.25 16 2.7 2.7 0 0 0 9 18.68a2.69 2.69 0 0 0 1.91-.79l8.32-8.32a4.73 4.73 0 0 0 1.39-3.35 4.73 4.73 0 0 0-4.78-4.72 4.76 4.76 0 0 0-3.34 1.38L4.41 11a6.72 6.72 0 0 0-2 4.77 6.75 6.75 0 0 0 6.77 6.73 6.72 6.72 0 0 0 4.77-2l6.62-6.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPapersLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 1.5h15.27v17.18H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 18.68v3.82H2.46V5.32h3.81M9.14 6.27h9.54M9.14 10.09h9.54M9.14 13.91h5.72"
  }));
};

const SvgPapers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 8.18V22.5H3.41V5.32h13.36v2.86zM6.27 13.91h7.64M6.27 10.09h7.64M6.27 17.73H12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 19.64V1.5H6.27"
  }));
};

const SvgPapertrayLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.24 11.03h13.42M7.16 6.24h9.59M22.5 14.87v7.67H1.4v-7.67L5.24 1.44h13.42l3.84 13.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.36 14.87h5.75a3.84 3.84 0 0 0 7.68 0h5.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.87h-6.71a3.84 3.84 0 0 1-7.68 0H1.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPapertray = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.53 14.87v7.67H1.43v-7.67L5.27 1.44H18.7l3.83 13.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.39 14.87h5.76A3.82 3.82 0 0 0 12 18.7a3.82 3.82 0 0 0 3.84-3.83h5.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.53 14.87h-6.71a3.84 3.84 0 0 1-7.67 0H1.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgParamedicSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.16 9.6-3-5.2L15 6.8V2H9v4.8L4.84 4.4l-3 5.2L6 12l-4.16 2.4 3 5.2L9 17.2V22h6v-4.8l4.16 2.4 3-5.2L18 12l4.16-2.4z",
    "data-name": "paramedic sign"
  }));
};

const SvgPark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 9.15v2.87M10.09 5.33H12a1.91 1.91 0 0 1 1.91 1.91A1.91 1.91 0 0 1 12 9.15h-1.91V5.33Z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 5.3,
    y: 1.5,
    width: 13.39,
    height: 13.39,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 14.89v8.61"
  }));
};

const SvgPartlyCloudyRain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 20.59h3.35a3.35 3.35 0 1 0 0-6.7h-.55a5.9 5.9 0 0 0 .09-1 4.78 4.78 0 0 0-9.56 0 3.83 3.83 0 0 0 0 7.66H8.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.51 14.1a4.79 4.79 0 1 0-7-5.91M13.93.5v1.91M23.5 10.07h-1.91M20.7 3.3l-1.35 1.35M8.52 4.65 7.17 3.3M12 20.59a1.91 1.91 0 1 1-3.82 0c0-1.92 1.91-3.83 1.91-3.83S12 18.67 12 20.59Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPartlyCloudy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.37 14.85h-.58a4.34 4.34 0 0 0 .1-1 4.78 4.78 0 0 0-9.56 0 3.83 3.83 0 1 0 0 7.65h10a3.35 3.35 0 1 0 0-6.69Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.51 15.06a4.79 4.79 0 1 0-7-5.91M13.93 1.46v1.91M23.5 11.02h-1.91M20.7 4.26l-1.35 1.35M8.52 5.61 7.17 4.26",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPasscode = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 13.91h21v8.59h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.39,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 5.32h5.73v4.77H9.14zM12 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41A1.91 1.91 0 0 1 12 1.5Z"
  }));
};

const SvgPassport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v21H3.41z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 10.09,
    rx: 1.91,
    ry: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 10.09h9.54M7.23 18.68h9.54"
  }));
};

const SvgPath = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.25 22.47S13 8.19 11.05 7.24s-3.8 8.57 2.86 8.57c3.8 0 5.71-4.76 5.71-7.62 0-1.9-.95-6.66-6.66-6.66C5.34 1.53 2.49 9.15 6.3 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPatternSecurity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.65 10.65 4.76 4.76M12 18.68v-4.77M18.68 3.41h-4.77M10.09 3.41H5.32"
  }));
};

const SvgPauseCall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5.52v8.59M16.77.52v8.59M18.75 21.36c-2.43 2.42-8 .78-12.46-3.67S.2 7.65 2.62 5.23l2.66-2.66 5.13 5.12-1.92 1.94a2.08 2.08 0 0 0 0 2.93l2.93 2.92a2.07 2.07 0 0 0 2.92 0l1.94-1.92 5.13 5.12Z"
  }));
};

const SvgPauseCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 7.23v9.54M14.86 7.23v9.54"
  }));
};

const SvgPause = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 7.23v9.54M9.14 16.77V7.23"
  }));
};

const SvgPaypal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.6 7.25A5.7 5.7 0 0 1 13.9 13H8.39l-1.14 7.6H2.5l2.85-19h8.55a5.7 5.7 0 0 1 5.7 5.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.57 7.73A5.65 5.65 0 0 1 21.5 12a5.71 5.71 0 0 1-5.7 5.7h-3.61l-.71 4.75H6.73l.27-1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPc = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 1.5,
    width: 15.27,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 5.32h7.64v3.82H8.18z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 12.95h7.64"
  }));
};

const SvgPeace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.28 22.84-.52-.52a11.13 11.13 0 0 1-3.26-7.87A4.84 4.84 0 0 1 4.92 11a4.79 4.79 0 0 1 3.42-1.38h1.77A1.89 1.89 0 0 1 12 11.5a1.89 1.89 0 0 1-1.89 1.89H7.28",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.28 13.39.34.14A7 7 0 0 1 12 20M17.24 22.32a11.13 11.13 0 0 0 3.26-7.87M6 9.62 4.84 3.38a1.9 1.9 0 0 1 1.53-2.19 1.84 1.84 0 0 1 .33 0 1.89 1.89 0 0 1 1.86 1.54l1.23 7M10.37 10.05l1.29-7.32a1.89 1.89 0 0 1 1.86-1.57 1.84 1.84 0 0 1 .33 0 1.9 1.9 0 0 1 1.53 2.19l-1.12 6.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12.94,
    y: 9.62,
    width: 3.78,
    height: 6.61,
    rx: 1.89,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.72,
    y: 10.56,
    width: 3.78,
    height: 5.67,
    rx: 1.89,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPearOrganic = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.4 9.36v-.45a5.48 5.48 0 0 0-4.79-5.52 5.32 5.32 0 0 0-5.83 5.29 5.71 5.71 0 0 1-1.57 3.94 5.81 5.81 0 0 0-1.58 4.74 6 6 0 0 0 6 5.14h4.28c3.58 0 6.26-2.16 6.61-5.14a5.81 5.81 0 0 0-1.74-4.9 4.32 4.32 0 0 1-1.38-3.1ZM10.09.5v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 3.37H13a9.56 9.56 0 0 1 9.56 9.56h-2.91a9.19 9.19 0 0 1-2.79-.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPear = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.83 7.2A3.83 3.83 0 0 0 12 3.37 3.83 3.83 0 0 0 8.17 7.2a8 8 0 0 1-1.58 4.67 6.7 6.7 0 1 0 10.73-.13 7.47 7.47 0 0 1-1.49-4.54Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.8,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v2.87"
  }));
};

const SvgPearlTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 5.76,
    rx: 2.87,
    ry: 2.51,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v2.87M9.13 22.5c1.63-3.25 2.56-8.59 2.8-14.23M12.07 8.27c.24 5.64 1.17 11 2.8 14.23M4.35 22.5h15.3"
  }));
};

const SvgPenFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 5.29h1.92M4.33 5.29h1.92M8.17 5.29h1.91M12 5.29h1.92M15.83 5.29h1.92M19.67 5.29h1.91M.5 19.67H12M.5 15.83h1.92M4.33 15.83h1.92M8.17 15.83h1.91M22.54 20.51a2 2 0 0 1-2 2 2 2 0 0 1-1.47-.51L12 14.88 11 11l3.84 1L22 19.07a2 2 0 0 1 .54 1.44Z"
  }));
};

const SvgPen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.87 5-2.35 2.32-2.84-2.84L19 2.13a2 2 0 0 1 1.42-.59 2 2 0 0 1 2 2A2 2 0 0 1 21.87 5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.47 8.27 8.23 20.51l-5.77 1.04 1.03-5.78L15.73 3.53l4.74 4.74zM6.33 8.18l3.8-3.79h4.74"
  }));
};

const SvgPencilBox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 12v10.5H1.5V3.41h11.46"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12 15.82-4.77.95.95-4.77 9.71-9.71a2.69 2.69 0 0 1 1.91-.79 2.7 2.7 0 0 1 2.7 2.7 2.69 2.69 0 0 1-.79 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPencilCase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 11h13.36v8.59a2.86 2.86 0 0 1-2.86 2.86H8.18a2.86 2.86 0 0 1-2.86-2.86V11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.5h3.82v9.55H7.23zM13.91 3.41v7.64M16.77 1.5v9.55M11.05 14.86h7.64v3.82h-7.64z"
  }));
};

const SvgPencilChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12a6.93 6.93 0 0 1 2-4.89l4.66-4.66a2 2 0 0 1 2.87 0 2 2 0 0 1 0 2.87L16.89 10A6.92 6.92 0 0 1 12 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V9.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPencilEdit = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m7.23 20.59-4.78 1 1-4.78L17.89 2.29a2.69 2.69 0 0 1 1.91-.79 2.7 2.7 0 0 1 2.7 2.7 2.69 2.69 0 0 1-.79 1.91ZM.55 22.5h22.9M19.64 8.18l-3.82-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPencilEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 10.09A6.35 6.35 0 0 1 11 5.39l3.3-3.3a2 2 0 0 1 1.4-.59 2 2 0 0 1 2 2 2 2 0 0 1-.57 1.5l-3.3 3.3a6.35 6.35 0 0 1-4.69 1.79Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h5.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h5.82"
  }));
};

const SvgPencilMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 12a6.93 6.93 0 0 1 2-4.89l4.66-4.66a2 2 0 0 1 2.87 0 2 2 0 0 1 0 2.87L16.89 10A6.92 6.92 0 0 1 12 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V9.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPencilPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m12 14.86-1.91 1.91-1.91-1.91V3.41a1.91 1.91 0 0 1 3.82 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.23h6.68v9.54h1a2.87 2.87 0 0 1 0 5.73H1.5V7.23h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 4.36v15.28a2.86 2.86 0 0 0-2.86-2.87h-1V1.5h1a2.86 2.86 0 0 1 2.86 2.86ZM8.18 5.32H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPencilRuler = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.75 5.16a2.35 2.35 0 0 1-.69 1.67l-4.68 4.68L7.86 21l-5.62.74.76-5.6 9.51-9.52 4.68-4.68a2.37 2.37 0 0 1 3.34 0l1.55 1.55a2.34 2.34 0 0 1 .67 1.67ZM14.94 4.18l4.88 4.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.87 21-5.62.74.75-5.6A6.76 6.76 0 0 1 7.87 21ZM17.38 6.62 6.1 17.9M14.77 9.23l-1.38 1.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 7.125 7.109)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.98 3.66h8.29v6.91H2.98z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-45 16.893 16.883)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.75 13.42h8.29v6.91h-8.29z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4.19 10.04 1.96-1.95M13.96 19.81l1.95-1.96"
  }));
};

const SvgPencil = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.51 7.25 8 20.78l-5.5.72.72-5.5L16.75 2.49a3.34 3.34 0 0 1 2.38-1 3.37 3.37 0 0 1 3.37 3.38 3.34 3.34 0 0 1-.99 2.38ZM14.88 4.36l4.76 4.76",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m8 20.77-5.5.73.72-5.5a6.59 6.59 0 0 1 3 1.74A6.59 6.59 0 0 1 8 20.77ZM17.26 6.74l-11 11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPenguinAnimal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.74 6.79a4.43 4.43 0 0 0-.07-1.49 4.77 4.77 0 0 0-9.44 1 4.89 4.89 0 0 0 0 .54 9.16 9.16 0 0 1-1 5.66 6.66 6.66 0 0 0-.9 3.07 6.78 6.78 0 0 0 6.57 7 6.68 6.68 0 0 0 6.79-6.68 6.55 6.55 0 0 0-1-3.46 8.84 8.84 0 0 1-.95-5.64ZM7.23 10.09l-4.78 7.64M16.77 10.09l4.78 7.64M5.32 22.5h13.36M12 7.23v2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPenguin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.61 6.89a3.31 3.31 0 0 1 0 .55 2.41 2.41 0 0 1-.08.44c0 .15-.08.3-.13.44a2.18 2.18 0 0 1-.09.23c-.07.15-.13.3-.22.46a12.18 12.18 0 0 1-12 0h-.06a4.09 4.09 0 0 1-.23-.47 2.09 2.09 0 0 1-.08-.23 3.22 3.22 0 0 1-.14-.44c0-.15-.06-.3-.08-.44a3.31 3.31 0 0 1 0-.55c0-2.95 3-5.34 6.63-5.34s6.48 2.4 6.48 5.35ZM18.61 15.8a6.63 6.63 0 1 1-12.33-3.38 19 19 0 0 0 2.42.73 15.07 15.07 0 0 0 2.58.34 15.78 15.78 0 0 0 6.4-1.08 6.6 6.6 0 0 1 .93 3.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.61 6.89a3.31 3.31 0 0 1 0 .55 2.41 2.41 0 0 1-.08.44c0 .15-.08.3-.13.44a2.18 2.18 0 0 1-.09.23c-.07.15-.13.3-.22.46a12.18 12.18 0 0 1-12 0h-.06a4.09 4.09 0 0 1-.23-.47 2.09 2.09 0 0 1-.08-.23 3.22 3.22 0 0 1-.14-.44c0-.15-.06-.3-.08-.44a3.31 3.31 0 0 1 0-.55c0-2.95 3-5.34 6.63-5.34s6.48 2.4 6.48 5.35Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.19 10.35a1.49 1.49 0 0 1-.85 1.34c-.55.27-1.11.51-1.66.72a15.78 15.78 0 0 1-6.4 1.08 15.07 15.07 0 0 1-2.58-.34 19 19 0 0 1-2.42-.73c-.55-.22-1.09-.46-1.64-.73a1.51 1.51 0 0 1-.43-.32 1.45 1.45 0 0 1-.3-1.53 1.43 1.43 0 0 1 1.36-.94 1.51 1.51 0 0 1 .65.15h.06a12.18 12.18 0 0 0 12 0 1.48 1.48 0 0 1 2 .79 1.37 1.37 0 0 1 .21.51Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.7 13.15a10.34 10.34 0 0 1-1.45 3.6c-1 .95 2.85.95 2.85.95a20.56 20.56 0 0 0 1.18-4.21M4.4 11.05s-3 4.75-1.48 7.6M19.6 11.05s3 4.75 1.48 7.6M6.56 19.61c-1.21.07-2.16.67-2.16 1.41s1.06 1.43 2.38 1.43a2.8 2.8 0 0 0 2.1-.77M17.41 19.61c1.22.05 2.19.66 2.19 1.41s-1.06 1.43-2.38 1.43a2.77 2.77 0 0 1-2.11-.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPercentArrowDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3 13.5 9 9 9-9h-3v-12H6v12H3z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10,
    cy: 6.5,
    r: 1,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14,
    cy: 10.5,
    r: 1,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14 5.5-4 6"
  }));
};

const SvgPercentArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21 10.5-9-9-9 9h3v12h12v-12h3z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10,
    cy: 13.5,
    r: 1,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14,
    cy: 17.5,
    r: 1,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14 12.5-4 6"
  }));
};

const SvgPercentHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.5,
    cy: 11,
    r: 0.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.5,
    cy: 18,
    r: 0.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15 10.5-6 8"
  }));
};

const SvgPercentShoppingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 7.23h17.18v11.45a3.82 3.82 0 0 1-3.82 3.82H7.23a3.82 3.82 0 0 1-3.82-3.82V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 10.09V6.27A4.77 4.77 0 0 1 12 1.5a4.77 4.77 0 0 1 4.77 4.77v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.66,
    cy: 13.43,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.34,
    cy: 18.2,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 12-5.72 7.64"
  }));
};

const SvgPersonRotation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.16,
    r: 3.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.34 12.52c3.24.66 5.41 1.93 5.41 3.39 0 1.91-3.79 3.51-8.8 3.84M6.66 12.52c-3.24.66-5.41 1.93-5.41 3.39 0 2 4.28 3.71 9.75 3.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.09 16.89 2.93 2.93-2.93 2.93M17.86 15.91v-1A5.86 5.86 0 0 0 12 9.07a5.86 5.86 0 0 0-5.86 5.86v1"
  }));
};

const SvgPersonSkeleton = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 13.91V3.41"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 7.23h5.72M9.14 14.86l-1.91 5.73M14.86 14.86l1.91 5.73M7.23 7.23 3.41 9.14M16.77 7.23l3.82 1.91M10.09 13.91h3.82"
  }));
};

const SvgPersonVirtualReality = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.65 18.92V4.38M1.65 18.92V4.38M1.65 18.92c0 1 1.81 1.8 4.54 2.29V6.67c-2.73-.49-4.54-1.33-4.54-2.29 0-1.51 4.47-2.73 10-2.73s10 1.22 10 2.73c0 1-1.81 1.8-4.55 2.29v14.54c2.74-.49 4.55-1.32 4.55-2.29"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.65,
    cy: 8.92,
    r: 1.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.83 12.56h3.64v1.95l-.91 7.14h-1.82l-.91-7.27v-1.82z"
  }));
};

const SvgPersonVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.84 5.15A5.46 5.46 0 0 1 12 1.5a5.39 5.39 0 0 1 3.87 1.61 5.26 5.26 0 0 1 1.29 2M17.48 5.15v4.57h-4.57a1 1 0 0 0-1.82 0H6.52V5.15ZM17.4 9.72a5.48 5.48 0 0 1-10.8 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2 22.5c0-4.5 4.45-8.22 10-8.22S22 18 22 22.5M4.7 6.98h1.82M17.48 6.98h1.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPetronasTowers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 22.5H4.35V5.28l5.74-1.91V22.5zM10.09.5v2.87M13.91 22.5h5.74V8.15l-5.74-1.91V22.5zM13.91 3.37v2.87M.52 22.5h22.96M7.22 9.11h2.87M7.22 12.93h2.87M7.22 16.76h2.87M16.78 11.98h2.87M16.78 15.8h2.87M16.78 19.63h2.87"
  }));
};

const SvgPets = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 11a3.82 3.82 0 0 1 3.82 3.82 1.91 1.91 0 0 1-1.91 1.91h-3.82a1.91 1.91 0 0 1-1.91-1.91A3.82 3.82 0 0 1 12 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 10.09,
    cy: 7.7,
    rx: 0.95,
    ry: 1.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 13.91,
    cy: 7.7,
    rx: 0.95,
    ry: 1.43,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.25,
    cy: 10.57,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.75,
    cy: 10.57,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPhoneArrowRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.48 5.32h9.54M18.2 1.5l3.82 3.82-3.82 3.82M19.23 21.38c-2.43 2.42-8 .79-12.46-3.67S.67 7.68 3.1 5.25l2.66-2.66 5.13 5.13L9 9.66a2.06 2.06 0 0 0 0 2.92l2.92 2.93a2.08 2.08 0 0 0 2.93 0l1.94-1.92 5.13 5.13Z"
  }));
};

const SvgPhoneMissed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.44c0-3.16-4.69-5.73-10.5-5.73S1.5 16.28 1.5 19.44v3.06h6.68v-2.86a1.91 1.91 0 0 1 1.91-1.91h3.82a1.91 1.91 0 0 1 1.91 1.91v2.86h6.68ZM21.55 1.5l-7.92 7.92a2.31 2.31 0 0 1-1.63.67 2.31 2.31 0 0 1-1.63-.67l-7-7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.46 7.23V1.5h5.72"
  }));
};

const SvgPhoneSocket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 22.5H6.27l.96-3.82h9.54l.96 3.82zM10.09 18.68v3.82M13.91 18.68v3.82M7.23 6.27h9.55v7.64H7.23zM8.18 4.36v1.91M8.18 13.91v1.91M12 4.36v1.91M12 13.91v1.91M15.82 4.36v1.91M15.82 13.91v1.91"
  }));
};

const SvgPhone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5h5.73v1a1 1 0 0 1-1 1h-3.78a1 1 0 0 1-1-1v-1h.05Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 19.64h1.9"
  }));
};

const SvgPhonebookContacts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 1.5h19.09v21H3.39z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.89,
    cy: 8.18,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m9.11 15.82.21-1a4.65 4.65 0 0 1 4.57-3.74 4.64 4.64 0 0 1 4.56 3.74l.21 1M.52 5.32h5.73M.52 10.09h5.73M.52 14.86h5.73M.52 19.64h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPhonebook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.37 1.48H22.5v21.04H3.37zM.5 6.26h5.74M.5 12h5.74M.5 17.74h5.74"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.89,
    cy: 9.13,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.89 12a3.83 3.83 0 0 1 3.83 3.83v1.91h-7.65v-1.91A3.83 3.83 0 0 1 13.89 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPhotoCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21v16.23h-21zM22.5 16.77h-4.77M10.09 16.77H1.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 9.14h2.87M18.68 5.32H9.14l1.9-2.86h5.73l1.91 2.86zM3.41 3.41v1.91"
  }));
};

const SvgPhotographer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m.78 15.06 4.46-4.46a1.74 1.74 0 0 1 1.24-.51 1.79 1.79 0 0 1 1.24.51 1.81 1.81 0 0 1 .51 1.24 1.76 1.76 0 0 1-.51 1.25l-1.14 1.77h7.57a1.43 1.43 0 0 1 1.43 1.44 1.43 1.43 0 0 1-1.43 1.43H9.89L9.26 21a1.65 1.65 0 0 1-1.64 1.42A15 15 0 0 1 .94 20.8l-.16-.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.89 17.73 9.26 21a1.67 1.67 0 0 1-1.64 1.5 14.54 14.54 0 0 1-6.68-1.62l-.16-.08M23.22 8.94l-4.46 4.46a1.74 1.74 0 0 1-1.24.51 1.79 1.79 0 0 1-1.24-.51 1.81 1.81 0 0 1-.51-1.24 1.76 1.76 0 0 1 .51-1.25l1.14-1.77H9.85A1.43 1.43 0 0 1 8.42 7.7a1.43 1.43 0 0 1 1.43-1.43h4.26l.63-3.22a1.65 1.65 0 0 1 1.64-1.42 15 15 0 0 1 6.68 1.57l.16.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.11 6.27 14.74 3a1.67 1.67 0 0 1 1.64-1.5 14.54 14.54 0 0 1 6.68 1.62l.16.08",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPhotography = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 5.32-1.91-2.86h-5.73l-1.9 2.86H1.5v16.23h21V5.32h-3.82z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 12.95,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 9.14h2.87"
  }));
};

const SvgPickUpTruc = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.34 16.77H7.7M3.89 16.77H1.5v-5.72h9.55V5.32h4.34a1.9 1.9 0 0 1 1.81 1.3l1.48 4.43 2.37.59a1.9 1.9 0 0 1 1.45 1.85v3.28h-3.34"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.25,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 16.77,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 11.05h4.77"
  }));
};

const SvgPicnicBasket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 7.23H1.5v3.81h21V7.23h-8.59"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5h3.82v7.64A1.91 1.91 0 0 1 12 11a1.91 1.91 0 0 1-1.91-1.91V1.5ZM18 22.5H6a1.9 1.9 0 0 1-1.9-1.6l-1.65-9.85h19.1L19.9 20.9a1.9 1.9 0 0 1-1.9 1.6ZM3.41 14.86h17.18M3.41 18.68h17.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPieChartCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13.05A4.87 4.87 0 1 1 11 8.18a4.86 4.86 0 0 1 4.82 4.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 3.41A9.54 9.54 0 1 0 20.59 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.81 13h6.69A11.45 11.45 0 0 0 11.05 1.5v6.69M17.79 19.7l-3.3-3.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPieChartClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13.91A4.77 4.77 0 1 1 12 9.14a4.79 4.79 0 0 1 4.77 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM12 9.14v4.77l2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPieChartFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 14.86A4.77 4.77 0 1 1 12 10.09a4.79 4.79 0 0 1 4.77 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM12 10.09v4.77l3.38 3.38M12 14.86v-3.81"
  }));
};

const SvgPieChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.43 19.43A10.5 10.5 0 1 1 12 1.5V12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12a10.47 10.47 0 0 1-3.07 7.43L12 12M12 12V1.5A10.5 10.5 0 0 1 22.5 12M12.95 12h9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPieGraph = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 3.41A9.54 9.54 0 1 0 20.59 13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.79 19.7 11.05 13V1.5A11.45 11.45 0 0 1 22.5 13H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPieSlice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 9.9v8.4l-21 4.2v-8.4L13.05 1.5h1a8.37 8.37 0 0 1 8.4 8.4Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 17.25c1.33-.08 1.77 1.76 3.2 1.48s1.09-2.36 2.59-2.66 1.91 1.76 3.41 1.46 1.09-2.36 2.58-2.65 1.91 1.75 3.41 1.46 1.1-2.37 2.6-2.67 1.88 1.56 3.21 1.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 13.91 21-4.77"
  }));
};

const SvgPie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 16.58c0 1.85-4.71 2.09-10.52 2.09s-10.52-.24-10.52-2.09S6.19 11 12 11s10.52 3.74 10.52 5.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m21.55 17.77-1.9 4.73H4.35l-1.9-4.73M6.26 15.8h1.91M11.04 14.85h1.92M15.83 15.8h1.91M7.22.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24M13 1.46c0 1.11-1 1.11-1 2.23s1 1.11 1 2.23S12 7 12 8.15M18.7.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24"
  }));
};

const SvgPilgrimsHat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 17.73H5.32L7.9 3.08A1.92 1.92 0 0 1 9.78 1.5h4.44a1.92 1.92 0 0 1 1.88 1.58ZM5.32 17.73h13.36l2.87 4.77H2.46l2.86-4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09h3.82v3.82h-3.82zM10.09 12H6.33M13.91 12h3.82"
  }));
};

const SvgPillBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.48 6.27H12v14.28a1.95 1.95 0 0 1-1.95 1.95H4.43a1.95 1.95 0 0 1-1.95-1.95V6.27ZM1.52 1.5h11.45v4.77H1.52z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.25 11.05h4.77v6.68H7.25z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.7,
    cy: 11.05,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.48 22.5h-9.55M23.48 18.68h-9.55M15.84 8.18l5.73 5.73"
  }));
};

const SvgPillar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 1.52H4.36a2.87 2.87 0 1 0 2.69 3.82H17a2.86 2.86 0 1 0 2.69-3.82ZM16.94 5.34H7.06M17.73 23.48V6.51M6.27 23.48V6.51M10.09 9.16v14.32M13.91 9.16v14.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPinCodeSecurity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.48h21v8.59h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 5.77,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 5.77,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.39,
    cy: 5.77,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 5.77,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 13.89h3.82M15.82 13.89h3.82M4.36 13.89h3.82M10.09 17.7h3.82M15.82 17.7h3.82M4.36 17.7h3.82M10.09 21.52h3.82M15.82 21.52h3.82M4.36 21.52h3.82"
  }));
};

const SvgPinDestination = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 9.14C19.64 15.82 12 22.5 12 22.5S4.36 15.82 4.36 9.14a7.64 7.64 0 0 1 15.28 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m2.77 20.53 6.01-6.72 1.41 1.41-6.72 6.01-.7-.7z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.73 18.76-8.49-8.49a5.94 5.94 0 0 1 4.24-1.75 5.42 5.42 0 0 1 1.52.21l3.5-3.47a1.49 1.49 0 0 1 2-2 1.32 1.32 0 0 1 .42.29l3.53 3.53a1.32 1.32 0 0 1 .29.42 1.49 1.49 0 0 1-2 2L15.27 13a5.42 5.42 0 0 1 .21 1.55 5.94 5.94 0 0 1-1.75 4.21Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPineTree = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 17.73H5.32L10.73 2.4A1.35 1.35 0 0 1 12 1.5a1.35 1.35 0 0 1 1.27.9Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.39 9.01 1.7 2.03L12 9.14l.96.95 2.09-2.62M12 17.73v4.77M23.45 22.5H.55M.55 1.5h1.9M4.36 5.32h1.91M1.5 10.09h1.91M21.55 11.05h1.9M17.73 6.27h1.91M19.64 1.5h1.91"
  }));
};

const SvgPipe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 15.82a1.92 1.92 0 0 1-1.91-1.91V9.14a6.69 6.69 0 0 0-6.68-6.69H1.5v5.73h5.73a1.92 1.92 0 0 1 1.91 1.91v4.77a6.69 6.69 0 0 0 6.68 6.69h6.68v-5.73ZM7.23 12h9.54M1.5.55v9.54M22.5 13.91v9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPipesIntersect = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 2.43v5.73h6.68a1 1 0 0 1 1 .95v13.37h5.72V9.11a1 1 0 0 1 1-.95h6.6V2.43ZM1.5.52v9.55M22.5.52v9.55M7.23 22.48h9.54M7.23 12.93h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPipes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 6.25h9.54a2.86 2.86 0 0 1 2.87 2.86A2.81 2.81 0 0 1 18.9 11h-8.81M10.09 12h9.55a2.87 2.87 0 0 1 0 5.73h-9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 14.89,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 14.89,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 9.11,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPirateShip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 18.66h1.91M11.05 18.66h1.9M14.86 18.66h1.91M17.73 13.89l-1 .95H8.18l-.95-.95H1.5v4.77a3.82 3.82 0 0 1 3.82 3.82h8.59a8.6 8.6 0 0 0 8.59-8.59h-4.77ZM12 .52v14.32M12 1.48a7.64 7.64 0 0 1 7.64 7.63v1L12 12ZM12 5.29H7.23l.95-1.9-.95-1.91H12v3.81z"
  }));
};

const SvgPizzaSlice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.5 3.7 22.38a1.58 1.58 0 0 1-.61.12 1.59 1.59 0 0 1-1.59-1.59 1.58 1.58 0 0 1 .12-.61L9.5 1.5a13 13 0 0 1 13 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.31 4.63a13 13 0 0 1 11.06 11.06",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.5,
    cy: 9.55,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.53 21.17a2 2 0 1 1 3-1.72 1.77 1.77 0 0 1-.1.61",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.5,
    cy: 15.45,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPizza = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 1.5-.01.04M22.5 14.86l-.04.01M18.09 15.82v.66L3.7 22.38a1.58 1.58 0 0 1-.61.12 1.59 1.59 0 0 1-1.59-1.59 1.58 1.58 0 0 1 .12-.61l5.9-14.37h.66a9.9 9.9 0 0 1 9.91 9.89Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.93 17.73a1.86 1.86 0 0 1-1.84-1.9 9.9 9.9 0 0 0-9.91-9.92 1.86 1.86 0 0 1-1.9-1.84 2.54 2.54 0 0 1 2.54-2.54h.31a14.29 14.29 0 0 1 13.33 13.34 2.46 2.46 0 0 1 0 .31 2.54 2.54 0 0 1-2.53 2.55Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 14.86 2.86-1.91M5.32 18.68v2.87M7.23 13.91h2.86"
  }));
};

const SvgPlaneTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 5.32v13.36H11.05a1.91 1.91 0 0 0-3.82 0H1.5V5.32h5.73a1.91 1.91 0 0 0 3.82 0ZM15.82 7.23v7.63M13.91 15.82l1.91-.96M17.73 15.82l-1.91-.96M15.82 10.09 12 12M15.82 10.09 19.64 12M8.18 10.09h1.91M8.18 13.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlane = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.85v1.29a36 36 0 0 1-.47 5.77l-.8 4.77L13 22.5h-1.9l-.64-3.82-.8-4.77a36 36 0 0 1-.47-5.77V6.85a8.23 8.23 0 0 1 1.38-4.56A1.78 1.78 0 0 1 12 1.5a1.78 1.78 0 0 1 1.48.79 8.23 8.23 0 0 1 1.38 4.56ZM10.41 18.68l.63 3.82H6.27v-2.86l4.14-.96z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 19.64v2.86h-4.77l.63-3.82 4.14.96zM9.61 13.91 1.5 15.82V12l7.64-3.82M14.86 8.18 22.5 12v3.82l-8.11-1.91M3.41 8.18v2.87M20.59 8.18v2.87"
  }));
};

const SvgPlantCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 15.82-.72.95H12v-.95zM12 17.73l.72-.96H12v.96zM5.32 1.5h1.91A4.77 4.77 0 0 1 12 6.27h-1.91A4.77 4.77 0 0 1 5.32 1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 2.45h1.91a4.77 4.77 0 0 1-4.77 4.77H12a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(-180 15.34 4.84)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05V6.27"
  }));
};

const SvgPlantCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 14.86h-2.24a5.72 5.72 0 0 0-10.35-.95H5.8a4.3 4.3 0 1 0 0 8.59h12.88a3.82 3.82 0 0 0 0-7.64ZM9.14 1.5H11a4.77 4.77 0 0 1 4.77 4.77h-1.86A4.77 4.77 0 0 1 9.14 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 1.5h1.91a4.77 4.77 0 0 1-4.77 4.77h-1.91a4.77 4.77 0 0 1 4.77-4.77Z",
    transform: "rotate(-180 19.16 3.885)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 13.91V6.27"
  }));
};

const SvgPlantHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.9 8.44a4.68 4.68 0 0 0-3.9 2.1 4.68 4.68 0 0 0-8.59 2.59c0 7 8.59 9.37 8.59 9.37s8.59-2.34 8.59-9.37a4.69 4.69 0 0 0-4.69-4.69ZM6.27 1.5h2.87A2.86 2.86 0 0 1 12 4.36v1H9.14a2.86 2.86 0 0 1-2.87-2.91v-1 .05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h2.86v1a2.86 2.86 0 0 1-2.86 2.86H12v-1a2.86 2.86 0 0 1 2.86-2.86Z",
    transform: "rotate(-180 14.865 3.41)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.09V5.32"
  }));
};

const SvgPlantHouseLeaves = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M8 11.5h1a3 3 0 0 1 3 3v1h-1a3 3 0 0 1-3-3v-1ZM15 13.5h1v1a3 3 0 0 1-3 3h-1v-1a3 3 0 0 1 3-3ZM12 22.5v-7"
  }));
};

const SvgPlantHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1 10.5 11-9 11 9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 7.5v15H4v-15M22 22.5H2"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7 10.5h.77A4.23 4.23 0 0 1 12 14.73v.77h-.77A4.23 4.23 0 0 1 7 11.27v-.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.23 11.5H17v.77a4.23 4.23 0 0 1-4.23 4.23H12v-.77a4.23 4.23 0 0 1 4.23-4.23Z",
    transform: "rotate(180 14.5 14)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 21.5v-7"
  }));
};

const SvgPlantTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 15.82v-4.77h-3.82v4.77L6.58 20.2a1.44 1.44 0 0 0-.31.89 1.42 1.42 0 0 0 1.42 1.41h8.62a1.42 1.42 0 0 0 1.42-1.41 1.44 1.44 0 0 0-.31-.89ZM8.18 11.05h7.64M15.82 1.5h1.91v1a3.82 3.82 0 0 1-3.82 3.82H12v-1a3.82 3.82 0 0 1 3.82-3.82ZM6.27 2.45h1.91A3.82 3.82 0 0 1 12 6.27v1h-1.91a3.82 3.82 0 0 1-3.82-3.86v-1 .04ZM12 11.05V6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlatform360 = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 1.25h2.93a2 2 0 0 1 2 2 2 2 0 0 1-1.95 2h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.23 9.07h2.93a2 2 0 0 0 2-2 2 2 0 0 0-2-1.91H3.21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.11,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.05 7.11V5.16A3.91 3.91 0 0 1 14 1.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.89,
    y: 1.25,
    width: 3.91,
    height: 7.82,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.07 14H5.16l-3.91 4.84a3.91 3.91 0 0 0 3.91 3.91h13.68a3.91 3.91 0 0 0 3.91-3.91L18.84 14h-3.91M1.25 18.84h21.5M12 15.91v-4.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlayAd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.72,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 23.5A2.88 2.88 0 0 1 12 20.63a2.88 2.88 0 0 1 2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.65,
    cy: 18.72,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 23.5a2.88 2.88 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.35,
    cy: 18.72,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 23.5a2.87 2.87 0 0 1 2.87-2.87 2.88 2.88 0 0 1 2.87 2.87M3.39 1.5h17.22v12.43H3.39z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m13.91 7.72-2.87 1.43V6.28l2.87 1.44zM.52 1.5h22.96"
  }));
};

const SvgPlayArea = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.72,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.05 6.63h3.9v11.72h-3.9V6.63zM18.84 22.26H5.16l1.96-3.91h9.77l1.95 3.91zM22.75 11.51v11.73M1.25 11.51v11.73M1.25 14.44l8.8-2.93M22.75 14.44l-8.8-2.93M4.18 6.63h15.64M10.05 11.51h3.9"
  }));
};

const SvgPlayCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.11h21v13.36h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 3.39h21v5.73h-21zM6.27.52v5.73M17.73.52v5.73M12 .52v5.73M10.09 17.7v-3.81l3.82 1.9-3.82 1.91z"
  }));
};

const SvgPlayChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 10.07-7.64 3.58V6.49l7.64 3.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlayCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 15.82V8.18L15.82 12l-6.68 3.82z"
  }));
};

const SvgPlayClip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21zM4.36 17.73h8.59M12.95 15.82v3.82M15.82 17.73h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 12V6.27l5.72 2.87L9.14 12z"
  }));
};

const SvgPlayClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 13.91-7.64 3.58v-7.16l7.64 3.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlayFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 13.91-6.68 3.58v-7.16l6.68 3.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgPlayFilm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5.55v22.9M18.68 1.5v1.91M18.68 5.32v1.91M18.68 9.14v1.91M18.68 12.95v1.91M18.68 16.77v1.91M18.68 20.59v1.91M1.5 23.45V.55M5.32 22.5v-1.91M5.32 18.68v-1.91M5.32 14.86v-1.91M5.32 11.05V9.14M5.32 7.23V5.32M5.32 3.41V1.5M9.14 14.86V9.14L14.86 12l-5.72 2.86z"
  }));
};

const SvgPlayFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 14.86-7.64 3.58v-7.16l7.64 3.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlayMedia = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.73 16.43c0 1.84 3.74 3.74 8.46 3.68M13.87 20.1c4.66.07 8.4-1.84 8.4-3.67",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.8 17.72 2.39 2.39L7.8 22.5M1.73 16.43V1.5h20.54v14.93"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.93 11.77-1.86.93v-1.87l1.86.94zM5.47 5.23h1.86M1.73 5.23H3.6M9.2 5.23h1.87M12.93 5.23h1.87M16.67 5.23h1.86M20.4 5.23h1.87"
  }));
};

const SvgPlayMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 10.07-7.64 3.82V6.25l7.64 3.82z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlayMovie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h21V22.5h-21zM1.5 1.5h21v5.73h-21zM1.98 1.5 7.7 7.23M6.75 1.5l5.73 5.73M11.52 1.5l5.73 5.73M16.3 1.5l5.72 5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 17.73V12l5.72 2.86-5.72 2.87z"
  }));
};

const SvgPlayProjector = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h15.27v12.41H1.5zM16.77 17.73l4.78 3.82h.95V9.14h-.95l-4.78 3.82v4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 5.8,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.43,
    cy: 5.8,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 16.77v-2.86l2.86 1.43-2.86 1.43z"
  }));
};

const SvgPlayTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h4.78v21h-4.78a2.86 2.86 0 0 0-5.72 0H4.36v-21h10.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 13.91V8.18l5.72 2.86-5.72 2.87z"
  }));
};

const SvgPlayVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 6.63h3.9a2 2 0 0 1 2 2v7.77a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.07H3.21a2 2 0 0 1-2-2V8.58a2 2 0 0 1 2-1.95h4.88M4.18 10.53h1.96M4.18 14.44h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.98 6.63-1.96.97V5.65l1.96.98z"
  }));
};

const SvgPlayVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.14 17.59a34.11 34.11 0 0 1 5.86-.48 34.11 34.11 0 0 1 5.86.48M22.73 20.04V4.43M1.27 20.04V4.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.27 20c0 1 1.94 1.93 4.87 2.46V6.89c-2.93-.53-4.87-1.43-4.87-2.46C1.27 2.81 6.07 1.5 12 1.5s10.73 1.31 10.73 2.93c0 1-1.94 1.93-4.87 2.46V22.5c2.93-.53 4.87-1.42 4.87-2.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.98 10.28-1.96.98V9.31l1.96.97z"
  }));
};

const SvgPlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 12-8.59 4.77V7.23L17.73 12z"
  }));
};

const SvgPliers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m16.77 7.23-2.86 1.91a1.91 1.91 0 0 0-3.82 0L7.23 7.23 9.14 1.5h5.72ZM12 7.23V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 9.14a1.66 1.66 0 0 1 0 .32 2 2 0 0 1-1 1.36 2 2 0 0 1-1.84 0 2 2 0 0 1-1-1.36 1.66 1.66 0 0 1 0-.32 1.91 1.91 0 0 1 3.82 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.12 9.46a5.73 5.73 0 0 0-3.85 5.4v5.73a1.93 1.93 0 0 0 1.91 1.91 1.91 1.91 0 0 0 1.91-1.91v-5.14a11.26 11.26 0 0 1 1-4.63M13.88 9.46a5.73 5.73 0 0 1 3.85 5.4v5.73a1.93 1.93 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-5.14a11.26 11.26 0 0 0-1-4.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlugin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 11.05h-1V5.32H13v-1a2.86 2.86 0 1 0-5.72 0v1H1.5v5.73h1a2.86 2.86 0 1 1 0 5.72h-1v5.73h5.73v-.95a2.86 2.86 0 1 1 5.72 0v.95h5.73v-5.73h1a2.86 2.86 0 0 0 0-5.72Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusAccountMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 16.23,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 22.5H8.18l.96-4.77h5.72l.96 4.77zM18.68 22.5H5.32"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 9.14h0A2.86 2.86 0 0 1 11 12v1h0-5.68 0v-1a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 7.23,
    r: 1.91,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 13h0Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 7.23h5.73M16.77 4.36v5.73"
  }));
};

const SvgPlusBed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 6.27v17.18M1.5 13.91H12v3.82H1.5zM22.5 23.45v-9.54M12 13.91h10.5v5.73H12zM22.5 11.05v2.86M12.95.55v5.72M10.09 3.41h5.73M3.41 8.18l5.73 5.73"
  }));
};

const SvgPlusBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 5.32v1.91l-2.86 2.86v10.5a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91v-10.5l-2.86-2.86V5.32M7.23 1.5h9.55v3.82H7.23zM8.18 14.86h7.64M12 11.05v7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusCallCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "call canter"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "m21.5 18.69-3.81 3.81A16.19 16.19 0 0 1 1.5 6.31L5.31 2.5l4.76 4.76-3.33 3.34a6.66 6.66 0 0 0 6.66 6.66l3.34-3.33ZM15.79 18.69l2.85 2.86M4.36 7.26l2.85 2.86M13.88 6.31h7.62M17.69 2.5v7.62",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPlusCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 12h11.46M12 6.27v11.46"
  }));
};

const SvgPlusClipboardAdd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 2.45V22.5H3.41v-20h4.77v1a1.92 1.92 0 0 0 1.91 1.91h3.82a1.92 1.92 0 0 0 1.91-1.91v-1ZM9.14 10.09h5.72M12 7.23v5.72M6.27 18.68h11.46M6.27 14.86h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13ZM12 16.77ZM15.82 2.46h4.77V22.5H3.41V2.46h4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 8.18V22.5H3.41v-21h12.41l4.77 4.77v1.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5M6.27 7.23H12M9.14 4.36v5.73M9.14 13.91h8.59M6.27 17.73h11.46M6.27 13.91h1.91"
  }));
};

const SvgPlusDrip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medicine drip"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 23.5v-22h16.26M13.93 23.5v-2.87M13.93 1.5v3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.67 5.33v9.56a5.74 5.74 0 0 1-5.74 5.74 5.74 5.74 0 0 1-5.73-5.74V5.33ZM11.07 12.98h5.73M13.93 10.11v5.74",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPlusEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 4.34h7.64M12 .52v7.64M16.68 7.21h5.82v15.27h-21V7.21h5.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.21 12 17.7 22.5 7.21M9.14 14.84 1.5 22.48M22.5 22.48l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.68 7.21h5.82v15.27h-21V7.21h5.82"
  }));
};

const SvgPlusFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13.91ZM12 17.73ZM20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgPlusFolderPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 11.05v9.54a1.92 1.92 0 0 1-1.91 1.91H3.41a1.92 1.92 0 0 1-1.91-1.91V9.14h6.68l1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 9.14V1.5h12.41l4.77 4.77v4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 7.23h-5.73V1.5h.96l4.77 4.77v.96zM9.14 16.77h5.72M12 13.91v5.73"
  }));
};

const SvgPlusHangingSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.33 5.33h17.22v15.3H5.33z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 1.5h-22v22M9.15 1.5v6.7M18.72 1.5v6.7M10.11 12.98h7.65M13.93 9.15v7.65"
  }));
};

const SvgPlusHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "heart healt"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "m3.41 13-.33-.33A5.4 5.4 0 1 1 10.72 5L12 6.3 13.28 5a5.4 5.4 0 1 1 7.64 7.63l-.33.33L12 21.57l-5.93-5.93ZM9.14 12.02h5.72M12 9.16v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPlusIdCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "ID card"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 12h0A2.86 2.86 0 0 1 11 14.86v1h0-5.68 0v-1A2.86 2.86 0 0 1 8.18 12Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.09,
    r: 1.91,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 15.82h0Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 10.09h5.73M16.77 7.23v5.72"
  })));
};

const SvgPlusLiquidDrop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medical fluid"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M20 14.5a8 8 0 0 1-16 0 13.83 13.83 0 0 1 3.1-8c.28-.38.57-.74.86-1.08A27 27 0 0 1 12 1.5s8 6 8 13ZM8 14.5h8M12 10.5v8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPlusPin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4 9.5a8 8 0 0 1 16 0 13.83 13.83 0 0 1-3.1 8c-.28.38-.57.74-.86 1.08a27 27 0 0 1-4 3.93S4 16.5 4 9.5ZM8 9.5h8M12 5.5v8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a12.56 12.56 0 0 1-8.59-11.92V5.32L12 1.5l8.59 3.82v5.26A12.56 12.56 0 0 1 12 22.5ZM8.18 12h7.64M12 8.18v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 15.84V13a2.86 2.86 0 0 1-2-4.89 2.82 2.82 0 0 1 2-.84V2.48h-21v4.77a2.86 2.86 0 0 1 2 4.89 2.87 2.87 0 0 1-2 .84v4.77H13M14.86 18.7h7.64M18.68 14.89v7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusVrView = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.14 17.6a34.11 34.11 0 0 1 5.86-.48 34.11 34.11 0 0 1 5.86.48M22.75 20.05V4.42M1.25 20.05V4.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.25 20.05c0 1 2 1.94 4.89 2.46V6.88C3.2 6.35 1.25 5.45 1.25 4.42 1.25 2.8 6.06 1.49 12 1.49S22.75 2.8 22.75 4.42c0 1-1.95 1.93-4.89 2.46v15.63c2.94-.52 4.89-1.42 4.89-2.46M9.07 10.28h5.86M12 7.35v5.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPlusWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 14.93h7.67M12 11.09v7.67M1.45 1.5h21.1v21.1H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55 7.25H1.45V1.5h21.1v5.75zM4.33 4.38h1.92M8.17 4.38h1.91M12 4.38h1.92"
  })));
};

const SvgPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "medical sign"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5h-.96v6.68H1.5v7.64h6.68v6.68h7.64v-6.68h6.68V8.18h-6.68V1.5H9.14zM19.64 12H4.36M12 4.36v15.28"
  })));
};

const SvgPointLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M23.5 17.74h-2.87l-.18.09a17.26 17.26 0 0 1-7.73 1.82A1.91 1.91 0 0 1 10.83 18l-.72-5h-6.7a1.92 1.92 0 0 1-1.9-2.09 2 2 0 0 1 2-1.74h10.42l-1.32-1.36a2 2 0 0 1 0-2.87 2.07 2.07 0 0 1 1.44-.59 2 2 0 0 1 1.43.59l5.15 5.15h2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPointRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 17.74h2.87l.18.09a17.26 17.26 0 0 0 7.73 1.82A1.91 1.91 0 0 0 13.17 18l.72-5h6.7a1.92 1.92 0 0 0 1.9-2.09 2 2 0 0 0-2-1.74H10.07l1.32-1.32a2 2 0 0 0 0-2.87A2.07 2.07 0 0 0 10 4.35a2 2 0 0 0-1.43.59l-5.2 5.15H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPointUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.62 23.28v-2.81l.09-.17a16.93 16.93 0 0 0 1.79-7.58 1.89 1.89 0 0 0-1.61-1.86l-5-.7V3.59a1.84 1.84 0 0 0-.56-1.32 1.83 1.83 0 0 0-1.48-.54 1.94 1.94 0 0 0-1.71 2v10.18l-1.3-1.3A2 2 0 0 0 6.49 12a2 2 0 0 0-1.41.58 2 2 0 0 0 0 2.81l5 5v2.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPointerDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.38.72v2.81l-.09.17a16.93 16.93 0 0 0-1.79 7.58 1.89 1.89 0 0 0 1.61 1.86l5 .7v6.57a1.89 1.89 0 0 0 2 1.86 1.94 1.94 0 0 0 1.71-2V10.09l1.3 1.3a2 2 0 0 0 1.4.58 2 2 0 0 0 1.41-.58 2 2 0 0 0 0-2.81l-5-5.05V.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPoison = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 13.91A2.86 2.86 0 1 0 10.09 16v1.7h3.82V16a2.85 2.85 0 0 0 .95-2.09ZM16.77 19.64l-2.86-2.87M9.56 12.42l-2.33-2.33M16.77 10.09l-2.33 2.33M10.09 16.77l-2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 6.27V1.5H9.14v4.77L5.37 7.53a2.86 2.86 0 0 0-2 2.72v9.39a2.86 2.86 0 0 0 2.9 2.86h11.46a2.86 2.86 0 0 0 2.86-2.86v-9.39a2.86 2.86 0 0 0-2-2.72ZM7.23 1.5h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPoliceCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 10.09H8.18a1.93 1.93 0 0 0-1.53.76l-2.29 3.06-2.86.95v5.73h2.86a1.91 1.91 0 0 1 3.82 0h6.68a1.91 1.91 0 0 1 3.82 0h3.82v-4.77l-4.77-1.91-2.29-3.06a1.91 1.91 0 0 0-1.53-.76Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.1 14.86H7.23M20.59 17.73h1.91M12 14.86V12M11 6.27a1.91 1.91 0 0 1 2 1.91v1.91H9.14V8.18A1.91 1.91 0 0 1 11 6.27ZM5.32 7.23h1.91M14.86 7.23h1.91M7 3.18l1.35 1.35M13.75 4.53l1.35-1.35M11.05 3.41V1.5"
  }));
};

const SvgPoolLadder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.86v7.64h-21v-7.64h1a3.46 3.46 0 0 0 4.77 0 3.45 3.45 0 0 0 4.76 0 3.45 3.45 0 0 0 4.76 0 3.46 3.46 0 0 0 4.77 0h1ZM7.23 14.86V4.36a2.86 2.86 0 0 1 2.86-2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 15.79V4.36a2.86 2.86 0 0 1 2.87-2.86M7.23 6.27h7.63M7.23 11.05h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPopcorn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.37 8.13a3.13 3.13 0 0 1 4.42 0 3.12 3.12 0 0 1 4.41 0 3.13 3.13 0 0 1 4.42 0L17.53 22.5H6.47Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.82 7.31a2.32 2.32 0 0 1-.55-1.51 2.39 2.39 0 0 1 2.39-2.39 2.31 2.31 0 0 1 1 .22 2.37 2.37 0 0 1 4.72 0 2.31 2.31 0 0 1 1-.22 2.39 2.39 0 0 1 2.35 2.39 2.32 2.32 0 0 1-.55 1.51M10.09 14.86h3.82v.95h-3.82z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPort = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.18h13.36v7.64H5.32zM9.14 13.91v1.91M12 13.91v1.91M14.86 13.91v1.91M5.32 12h13.36"
  }));
};

const SvgPostage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 6.27a1.92 1.92 0 0 0 1.91 1.91v1.91a1.91 1.91 0 0 0 0 3.82v1.91a1.91 1.91 0 0 0 0 3.82v2.86h-2.86a1.91 1.91 0 0 0-3.82 0h-1.91a1.91 1.91 0 0 0-3.82 0H8.18a1.91 1.91 0 0 0-3.82 0H1.5v-2.86a1.91 1.91 0 0 0 0-3.82v-1.91a1.91 1.91 0 0 0 0-3.82V8.18a1.91 1.91 0 0 0 0-3.82V1.5h2.86a1.91 1.91 0 1 0 3.82 0h1.91a1.91 1.91 0 0 0 3.82 0h1.91a1.91 1.91 0 0 0 3.82 0h2.86v2.86a1.92 1.92 0 0 0-1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13 11.05 1.59.95a3.12 3.12 0 0 0 3.19 0 3 3 0 0 1 1.58-.44 2.93 2.93 0 0 1 1.29.29M20.82 7.19a5.66 5.66 0 0 0-1.51-.4 3 3 0 0 0-1.58.44 3.12 3.12 0 0 1-3.19 0L13 6.27M13 15.82l1.59.95a3.1 3.1 0 0 0 3.19 0 3.06 3.06 0 0 1 3.13 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPostcard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h21v15.27h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 8.18h4.77V12h-4.77zM12.95 15.82h6.69M4.36 8.18h4.78M4.36 12h4.78M4.36 15.82h4.78"
  }));
};

const SvgPottedPlant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 12h13.36v3.82H5.32zM6.27 15.82h11.46l-.96 6.68H7.23l-.96-6.68zM20.21 5.22A8.76 8.76 0 0 1 17 12h-3.56a8.67 8.67 0 0 0 1.13-4.3v-.42a8.82 8.82 0 0 1 5.64-2Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.57 7.7a8.67 8.67 0 0 1-1.13 4.3h-2.88a8.81 8.81 0 0 1-1.12-4.72A8.78 8.78 0 0 1 12 1.5a8.78 8.78 0 0 1 2.56 5.77c.01.16.01.29.01.43Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.56 12H7a8.76 8.76 0 0 1-3.21-6.77 8.82 8.82 0 0 1 5.65 2.04A8.81 8.81 0 0 0 10.56 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPowerChip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 6.27h11.45v11.45H6.27zM8.18 4.36v1.91M8.18 19.64v-1.91M12 4.36v1.91M12 19.64v-1.91M15.82 4.36v1.91M15.82 19.64v-1.91M4.36 15.82h1.91M19.64 15.82h-1.91M4.36 12h1.91M19.64 12h-1.91M4.36 8.18h1.91M19.64 8.18h-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M12 12.96H9.14L12 8.18v4.78zM12 11.04h2.86L12 15.82v-4.78z"
  }));
};

const SvgPowerHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9M14.83 11.67a4 4 0 1 1-5.66 0M12 9.5v5"
  }));
};

const SvgPrayer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.29 15.83V9.12a1.92 1.92 0 0 0-1.91-1.91 1.92 1.92 0 0 0-1.92 1.91v7.29a3.79 3.79 0 0 0 .84 2.39l3 3.74v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m7.21 17.75-1.32-1.32a2 2 0 0 1-.6-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.44.59l2.67 2.61a2 2 0 0 1 .6 1.43v5.87M18.71 15.83V9.12a1.92 1.92 0 0 1 1.91-1.91 1.92 1.92 0 0 1 1.91 1.91v7.29a3.79 3.79 0 0 1-.84 2.39l-3 3.74v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m16.79 17.75 1.32-1.32a2 2 0 0 0 .6-1.44 2 2 0 0 0-2-2 2 2 0 0 0-1.44.59L12.6 16.2a2 2 0 0 0-.6 1.43v5.87M12 .5v10.54M8.17 4.01h7.66",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPresentBox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 11.05h17.18V22.5H3.41zM2.45 7.23h19.09v3.82H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05h.01V22.5H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(90 12 16.77)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.99 8.18H12v17.18h-.01z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 1.5A4.77 4.77 0 0 1 12 6.27v1H9.14a3.82 3.82 0 0 1-3.82-3.86A1.91 1.91 0 0 1 7.23 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5h2.86v1a4.77 4.77 0 0 1-4.77 4.77A1.91 1.91 0 0 1 12 5.32a3.82 3.82 0 0 1 3.82-3.82Z",
    transform: "rotate(-180 15.34 4.365)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPresent = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 10.11h19.09v12.41H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 6.3h21v3.82h-21zM9.61 1.52A2.39 2.39 0 0 1 12 3.91V6.3H9.61a2.39 2.39 0 0 1-2.38-2.39 2.39 2.39 0 0 1 2.38-2.39Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 1.52h2.39v2.39a2.39 2.39 0 0 1-2.39 2.39A2.39 2.39 0 0 1 12 3.91a2.39 2.39 0 0 1 2.39-2.39Z",
    transform: "rotate(-180 14.385 3.91)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 23.48V6.3M3.41 15.84h18.14"
  }));
};

const SvgPresentationLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "presentation standing analysis"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.17 11.04 2.87-2.87 1.92 1.91 2.87-2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 1.46h19.17v14.38H2.42z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 15.83h23"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 15.83v2.88"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.63,
    r: 1.92,
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgPresentation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.29 2.42h13.42v13.42H5.29zM3.38 15.83h17.25M12 .5v1.92"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.25 23.5 2.88-7.67h5.75l2.87 7.67M7.21 19.67h8.62"
  }));
};

const SvgPress = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m11.14 22.23-5-5a2 2 0 0 1 0-2.8 2 2 0 0 1 1.4-.58 2 2 0 0 1 1.4.58l1.28 1.29V4.63a1.94 1.94 0 0 1 1.7-2 1.87 1.87 0 0 1 2 1.86V12l4.92.7a1.87 1.87 0 0 1 1.6 1.85 17 17 0 0 1-1.77 7.53l-.09.17M7.84 1.23a4.67 4.67 0 0 0 0 6.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.3 7.83a4.69 4.69 0 0 0 0-6.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPrint = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 17.73h2.86a1.91 1.91 0 0 0 1.91-1.91V9.14a1.92 1.92 0 0 0-1.91-1.91H3.41A1.92 1.92 0 0 0 1.5 9.14v6.68a1.91 1.91 0 0 0 1.91 1.91h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.86h11.45v7.64H6.27zM6.27 1.5h11.45v5.73H6.27zM4.36 14.86h15.28M17.73 11.05h1.91M9.14 18.68h5.72"
  }));
};

const SvgPrinter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 18.68h2.86a1.9 1.9 0 0 0 1.91-1.91V9.14a1.9 1.9 0 0 0-1.91-1.91H3.41A1.9 1.9 0 0 0 1.5 9.14v7.63a1.9 1.9 0 0 0 1.91 1.91h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 14.86h11.45v7.64H6.27zM6.27 1.5h11.45v5.73H6.27zM4.36 14.86h15.28M17.73 11.05h1.91M9.14 18.68h5.72"
  }));
};

const SvgProgramming = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 6.27 1.5 12l5.73 5.73M16.77 17.73 22.5 12l-5.73-5.73M14.86 6.27 9.14 17.73"
  }));
};

const SvgProjectPresentation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "presentation standing"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.48h23M.5 16.81h23M2.42 1.48h19.17v15.33H2.42zM12 16.81v6.71M8.17 23.52v-.96L12 19.69M15.83 23.52v-.96L12 19.69"
  })));
};

const SvgProjectorDevice = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.12 7.27h3.38v10.5h-21V7.27h11.02"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 9.18,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 11.09h1.91M8.18 11.09h1.91M3.41 20.64v-2.87M20.59 20.64v-2.87"
  }));
};

const SvgProjector = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 8.18h2.86v7.64h-21V8.18H12"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 8.18,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 19.64v-3.82M19.64 19.64v-3.82M4.36 12h1.91M8.18 12h1.91"
  }));
};

const SvgProtectPlant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 18.68h15.27v3.82H4.36zM2.45 22.5h19.1M12 1.5a6.68 6.68 0 0 1 6.68 6.68v10.5H5.32V8.18A6.68 6.68 0 0 1 12 1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 7.79h2.46A4.23 4.23 0 0 1 15.34 12v2.46h-2.45a4.23 4.23 0 0 1-4.23-4.23V7.79Z",
    transform: "rotate(45 12.003 11.122)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 18.55v-8.46"
  }));
};

const SvgPumpkin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.44 6.27h.5A2.06 2.06 0 0 1 12 8.33v12.1a2.06 2.06 0 0 1-2.06 2.07h-.5a4.12 4.12 0 0 1-4.12-4.12v-8a4.12 4.12 0 0 1 4.12-4.11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.8 21.55h-.53a4.78 4.78 0 0 1-4.77-4.78V12a4.78 4.78 0 0 1 4.77-4.77h.53",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.12 6.27h.5a2.06 2.06 0 0 1 2.06 2.06v12.1a2.06 2.06 0 0 1-2.06 2.06h-.5A4.12 4.12 0 0 1 12 18.38v-8a4.12 4.12 0 0 1 4.12-4.12Z",
    transform: "rotate(-180 15.34 14.385)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.2 7.23h.53A4.78 4.78 0 0 1 22.5 12v4.77a4.78 4.78 0 0 1-4.77 4.78h-.53M8.18 1.5A3.82 3.82 0 0 1 12 5.32v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPunchingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 12.96,
    y: 5.28,
    width: 9.57,
    height: 17.22,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.87 5.28 1.91-3.82h1.92l1.91 3.82M12.96 9.11h9.57v9.57h-9.57z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.3,
    cy: 11.98,
    r: 3.83,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.02 9.28-.01-.01-.79-3.99H3.39L2.6 9.27l-.01.01M5.3.5v4.78M.52 1.46h22.96"
  }));
};

const SvgPunchingBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M8.18 22.5a3.82 3.82 0 0 1 7.64 0"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.29 8.73.36 1.36h2.7l.36-1.36M12 10.09v8.59"
  }));
};

const SvgPuttyKnifeEquipment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.48 15.92a10.4 10.4 0 0 1-10.4-10.4l13.1-4.37a1.32 1.32 0 0 1 1.35.32 1.32 1.32 0 0 1 .32 1.35ZM3.2 22.92a2.12 2.12 0 0 1-2.12-2.12 2.13 2.13 0 0 1 .62-1.5l4.88-4.88 3 3L4.7 22.3a2.13 2.13 0 0 1-1.5.62ZM17.08 6.92l-9 9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPuttyKnifeTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12 12 8.18l4.75-5.54a3.28 3.28 0 0 1 2.48-1.14 3.26 3.26 0 0 1 3.27 3.27 3.28 3.28 0 0 1-1.14 2.48ZM10.57 6.75l6.68 6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.88 22.5a1.8 1.8 0 0 1-1.27-.5L2 15.39a1.8 1.8 0 0 1-.53-1.27 1.81 1.81 0 0 1 1.06-1.65L12 8.18 15.82 12l-4.29 9.44a1.81 1.81 0 0 1-1.65 1.06ZM4.36 12 12 19.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPuttyKnife = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 15.82h3.82v4.77A1.91 1.91 0 0 1 12 22.5a1.91 1.91 0 0 1-1.91-1.91v-4.77ZM12 1.5a1.46 1.46 0 0 0-1.34.87L7.35 9.81a1.48 1.48 0 0 0-.12.59v.13A1.47 1.47 0 0 0 8.7 12h6.6a1.47 1.47 0 0 0 1.47-1.47v-.13a1.48 1.48 0 0 0-.12-.59l-3.31-7.44A1.46 1.46 0 0 0 12 1.5ZM12 8.18v7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgPuzzlePiece = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a2.86 2.86 0 0 1 2.86 2.86v1h5.73V12h-.95a2.85 2.85 0 0 0-2 .84 2.86 2.86 0 0 0 2 4.89h.95v4.77H3.41v-4.77h1a2.87 2.87 0 1 0 0-5.73h-1V5.32h5.73v-1A2.86 2.86 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    "data-name": "puzzle piece"
  }));
};

const SvgPuzzle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.7 5.88a1.87 1.87 0 0 0-.56 1.35 1.92 1.92 0 0 0 1.91 1.91H12V12H9.14v1a1.91 1.91 0 0 1-3.82 0v-1H1.5V1.5H12v3.82h-.95a1.87 1.87 0 0 0-1.35.56Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 1.5V12h-3.82v-.95a1.91 1.91 0 0 0-1.91-1.91 1.92 1.92 0 0 0-1.91 1.91V12H12V9.14h-.95a1.92 1.92 0 0 1-1.91-1.91 1.91 1.91 0 0 1 1.91-1.91H12V1.5ZM14.86 16.77A1.92 1.92 0 0 1 13 18.68h-1v3.82H1.5V12h3.82v1a1.91 1.91 0 0 0 3.82 0v-1H12v2.86h1a1.92 1.92 0 0 1 1.86 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12v10.5H12v-3.82h1a1.91 1.91 0 0 0 0-3.82h-1V12h2.86v-.95a1.92 1.92 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91V12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgPyramid = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 17.75 12 6.25l-9.58 11.5M12 6.25l4.79 11.5M10.08 14.88v2.87M.5 17.75h23"
  }));
};

const SvgQrCode = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "QR Code"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h8.59v8.59H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23H4.36V4.36h2.87M18.68 5.32v1.91h-1.91M7.23 19.64H4.36v-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M22.5 10.09h-8.59V1.5h8.59v8.59M13.91 13.91h8.59v8.59h-8.59zM1.5 13.91h8.59v8.59H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M16.77 16.77h1.91v1.91h-1.91z"
  })));
};

const SvgQuestionChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12v-1.14a1.9 1.9 0 0 1 .56-1.35l.79-.79a1.92 1.92 0 0 0 .56-1.35V7.2A1.91 1.91 0 0 0 12 5.3a1.91 1.91 0 0 0-1.91 1.9M11.05 13.89h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgQuestionClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5ZM12 15.82V14.7a1.9 1.9 0 0 1 .56-1.35l.79-.79a1.9 1.9 0 0 0 .56-1.35v-.16A1.91 1.91 0 0 0 12 9.14a1.91 1.91 0 0 0-1.91 1.91M11.05 17.73h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgQuestionFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM11.05 18.68h1.9M12 16.77v-1.12a1.92 1.92 0 0 1 .56-1.35l.79-.79a1.88 1.88 0 0 0 .56-1.35V12A1.92 1.92 0 0 0 12 10.09 1.92 1.92 0 0 0 10.09 12"
  }));
};

const SvgQuestionFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 13A1.91 1.91 0 0 1 12 11.05 1.91 1.91 0 0 1 13.91 13v.17a1.92 1.92 0 0 1-.56 1.35l-.79.79a1.9 1.9 0 0 0-.56 1.3v.16",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21M11.05 18.68h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgQuestionMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12v-1.14a1.9 1.9 0 0 1 .56-1.35l.79-.79a1.92 1.92 0 0 0 .56-1.35V7.2A1.91 1.91 0 0 0 12 5.3a1.91 1.91 0 0 0-1.91 1.9M11.05 13.89h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgQuestionPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a6.7 6.7 0 0 1 6.7 6.7v2.87H5.33V8.2A6.7 6.7 0 0 1 12 1.5ZM19.67 20.63v-.25a2.56 2.56 0 0 1 1.13-2 1.91 1.91 0 1 0-3-1.55M19.67 21.59v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 11.06H2.46v11.48H16.8M9.15 16.8h1.92M5.33 16.8h1.91M12.98 16.8h1.91"
  }));
};

const SvgQuestion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.91v-.25a2.54 2.54 0 0 1 1.13-2 1.91 1.91 0 1 0-3-1.54M12 14.86v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRackPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h19.09v5.73H1.5zM11.04 12.96H1.5V7.23h19.09v1.91M4.36 4.36h1.91M4.36 10.09h1.91M8.18 4.36h9.55M8.18 10.09h2.87M11.04 18.68H1.5v-5.72h9.54M4.36 15.82h1.91M11.05 15.82H8.18M17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31Z"
  }));
};

const SvgRadio = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23h21V22.5h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 11.52,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 16.3,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23 17.73 1.5M4.36 11.05h10.5M4.36 14.86h10.5M4.36 18.68h10.5"
  }));
};

const SvgRadioactive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Radio Active"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m15.6 5.82-2.6 4.6a1.87 1.87 0 0 0-1.9 0l-2.7-4.6a7.1 7.1 0 0 1 7.2 0ZM11.05 13.71l-2.6 4.49a7.13 7.13 0 0 1-3.61-6.13h5.25a1.88 1.88 0 0 0 .96 1.64ZM19.16 12.07a7.13 7.13 0 0 1-3.61 6.13L13 13.71a1.88 1.88 0 0 0 1-1.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 12.07a1.88 1.88 0 0 1-1 1.64 1.81 1.81 0 0 1-1.9 0 1.89 1.89 0 0 1 0-3.29 1.87 1.87 0 0 1 1.9 0 1.87 1.87 0 0 1 1 1.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 12.07a1.88 1.88 0 0 1-1 1.64 1.81 1.81 0 0 1-1.9 0 1.89 1.89 0 0 1 0-3.29 1.87 1.87 0 0 1 1.9 0 1.87 1.87 0 0 1 1 1.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgRainCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.6 16.77h4.6a4.3 4.3 0 1 0 0-8.59h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.77 4.77 0 0 0 0 9.54h4.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64a2.86 2.86 0 0 1-5.72 0c0-1.91 2.86-4.78 2.86-4.78s2.86 2.87 2.86 4.78Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainDropMoon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16 17.56A8 8 0 0 1 14.77 2 10.05 10.05 0 0 0 12 1.63a10.37 10.37 0 0 0 0 20.74 10.15 10.15 0 0 0 4.67-1.12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.64 18.94a3.43 3.43 0 1 1-6.86 0c0-3.43 3.43-6 3.43-6s3.43 2.57 3.43 6Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainDropSun = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v1.92M12 21.58v1.92M23.5 12h-1.92M2.42 12H.5M12 .5v1.92M12 21.58v1.92M23.5 12h-1.92M2.42 12H.5M20.13 3.87l-1.35 1.35M5.22 18.78l-1.35 1.35M5.22 5.22 3.87 3.87M20.13 3.87l-1.35 1.35M5.22 18.78l-1.35 1.35M5.22 5.22 3.87 3.87M18.49 13.7a6.83 6.83 0 0 0 .22-1.7A6.71 6.71 0 1 0 12 18.71a6.58 6.58 0 0 0 4.13-1.44"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.8 19.06a3.49 3.49 0 0 1-7 0c0-3.49 3.49-6.1 3.49-6.1s3.51 2.61 3.51 6.1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainDrops = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17 19a3.47 3.47 0 0 1-6.94 0c0-3.47 3.47-6.08 3.47-6.08S17 15.56 17 19ZM22.5 7.35a3.34 3.34 0 1 1-6.68 0c0-3.34 3.34-5.85 3.34-5.85S22.5 4 22.5 7.35ZM8.18 11.52a3.34 3.34 0 0 1-6.68 0c0-3.34 3.34-5.84 3.34-5.84s3.34 2.5 3.34 5.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainStorm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 19a4.29 4.29 0 0 0-2.39-7.86h-.56a6.12 6.12 0 0 0 .09-1 5.73 5.73 0 0 0-11.46 0 4.77 4.77 0 0 0-2.86 8.59M6.27 15.91v2.86M6.27 20.68v2.87M10.09 14v2.86M10.09 18.77v2.87M13.91 15.91v2.86M13.91 20.68v2.87M17.73 14v2.86M17.73 18.77v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainUmbrella = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.39 16.76v-1A8.61 8.61 0 0 1 12 7.2a8.61 8.61 0 0 1 8.61 8.6v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 16.76v-1c0-4.75 1.29-8.6 2.87-8.6s2.87 3.85 2.87 8.6v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 16.76a2.87 2.87 0 0 1 2.87-2.87 2.88 2.88 0 0 1 2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 16.76A2.88 2.88 0 0 1 12 13.89a2.88 2.88 0 0 1 2.87 2.87M3.39 16.76a2.88 2.88 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.87 2.87M12 5.28V7.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.89v6.84a1.77 1.77 0 0 1-1.77 1.77 1.77 1.77 0 0 1-1.59-1l-.47-.93M1.48.5v1.91M4.35 4.33v1.91M9.13 2.41v1.92M14.87.5v1.91M18.7 4.33v1.91M22.52 2.41v1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 16.7a4.77 4.77 0 0 1 .95-9.45 5.73 5.73 0 0 1 11.46 0 6 6 0 0 1-.09.95h.56a4.3 4.3 0 0 1 .48 8.57M8.18 13.93v3.82M12 12.02v3.82M15.82 13.93v3.82M8.18 19.66v3.82M12 17.75v3.82M15.82 19.66v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainbow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 16.75a10.5 10.5 0 0 1 21 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 16.75a6.68 6.68 0 0 1 13.36 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 16.75a2.86 2.86 0 0 1 5.72 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainingDay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.89 20.61h.48a3.35 3.35 0 0 0 0-6.7h-.57a5.88 5.88 0 0 0 .09-.95 4.78 4.78 0 1 0-9.56 0 3.83 3.83 0 1 0 0 7.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.51 14.12a4.79 4.79 0 1 0-7-5.91M13.93.52v1.91M23.5 10.09h-1.91M20.7 3.32l-1.35 1.36M8.52 4.68 7.17 3.32M7.24 22.52v-4.78M10.11 23.48V18.7M12.98 22.52v-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRainingNight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.11 6.38a5.73 5.73 0 0 1 5.67-4.9 4.56 4.56 0 0 1 .75.06 4.1 4.1 0 0 0 4.92 6.56 5.7 5.7 0 0 1-4.84 4.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 18.73h.48a3.36 3.36 0 1 0 0-6.71h-.57a5 5 0 0 0 .09-1 4.79 4.79 0 1 0-9.58 0 3.84 3.84 0 1 0 0 7.67M7.21 22.56v-4.79M10.08 23.52v-4.79M12.96 22.56v-4.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRaining = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.2 8.2h-.56a5.88 5.88 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.78 4.78 0 0 0 0 9.55H18.2a4.3 4.3 0 1 0 0-8.6ZM12 23.48V18.7M7.23 22.52V16.8M16.77 22.52V16.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRamMemory = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 11.05a1 1 0 0 0 .95.95v6.68h-21V12a1 1 0 0 0 0-1.91V5.32h21v4.77a1 1 0 0 0-.95.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 9.14h3.82v3.82H6.27zM10.09 9.14h3.82v3.82h-3.82zM13.91 9.14h3.82v3.82h-3.82zM4.36 15.82v2.86M8.18 15.82v2.86M12 15.82v2.86M15.82 15.82v2.86M19.64 15.82v2.86"
  }));
};

const SvgRamStorage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 11.05a1 1 0 0 0 .95.95v6.68h-21V12a1 1 0 0 0 0-1.91V5.32h21v4.77a1 1 0 0 0-.95.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 9.14H6.27v3.82H17.73V9.14h-3.82zM4.36 15.82v2.86M8.18 15.82v2.86M12 15.82v2.86M15.82 15.82v2.86M19.64 15.82v2.86"
  }));
};

const SvgRealEstateBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 7.23h11.45V22.5H6.27zM17.73 14.86h4.77v7.64h-4.77zM1.5 14.86h4.77v7.64H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 11.05h4.77v3.82h-4.77zM1.5 11.05h4.77v3.82H1.5zM10.09 15.82v6.68M13.91 15.82v6.68M18.68 7.23H5.32V4.36L12 1.5l6.68 2.86v2.87zM3.41 18.68h2.86M17.73 18.68h2.86M10.09 10.09V12M13.91 10.09V12"
  }));
};

const SvgReceiptDollar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "bill alternatif"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M10 13.5h2.5A1.5 1.5 0 0 0 14 12h0a1.5 1.5 0 0 0-1.5-1.5h-1A1.5 1.5 0 0 1 10 9h0a1.5 1.5 0 0 1 1.5-1.5H14M12 5.5v2M12 13.5v2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "m4 22.5 2.66-2 2.67 2 2.66-2 2.67 2 2.67-2 2.67 2 1-1v-20H3v20l1 1z"
  })));
};

const SvgReceiptLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 9.16h2.86M5.32 12.98h7.63M5.32 16.8h7.63M19.64 22.52H4.36a2.86 2.86 0 0 1-2.86-2.86V2.48L4 4.39l2.59-1.91 2.54 1.91 2.55-1.91 2.54 1.91 2.55-1.91v17.18a2.87 2.87 0 0 0 2.87 2.86Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 10.11h3.82v9.55a2.87 2.87 0 0 1-5.73 0v-9.55h1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgReceiptList = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "reciept alternatif"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10 7.5h8M10 11.5h8M10 15.5h8M8 7.5H6M8 11.5H6M8 15.5H6"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4 22.5 2.66-2 2.67 2 2.66-2 2.67 2 2.67-2 2.67 2 1-1v-20H3v20l1 1z"
  })));
};

const SvgRecordChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.07,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 10.07,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 11.98h7.64M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgRecordCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 7.23,
    width: 9.55,
    height: 9.55,
    rx: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRecordMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.07,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 10.07,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 11.98h7.64M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgRecordSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 3.41h21v17.18h-21z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.7,
    cy: 11.52,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 11.52,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.7 13.91h8.6"
  }));
};

const SvgRecord = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 13,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 13,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 16.82h13.36"
  }));
};

const SvgRecycleArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.25 16A10.58 10.58 0 0 1 4.54 4.54l.22-.21H.5M23.5 19.67h-4.26l.22-.21A10.58 10.58 0 0 0 21.75 8M8 2.27a10.57 10.57 0 0 1 11.46 2.27l.21.22V.5M4.33 23.5v-4.26l.21.22a10.57 10.57 0 0 0 11.51 2.27M16.79 10.08h-3.83V6.25l-5.75 7.67h3.83v3.83l5.75-7.67z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRecycleBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 16.77c0 4.22-3.42 5.73-7.64 5.73S4.36 21 4.36 16.77c0-2.38 3.6-7 5.73-10.5h3.82c2.09 3.53 5.73 8.12 5.73 10.5ZM13.91 6.27h-3.82L9.14 1.5h5.72l-.95 4.77zM17.73 3.41l-3.82 2.86M17.73 7.23l-3.82-.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 17.73H8.18l1.39-2.07M14.43 15.66l1.39 2.07h-2.86M10.62 14.07 12 12l1.38 2.07"
  }));
};

const SvgRecycleContainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36zM2.45 1.5h19.1M4.36 5.32h15.28M4.36 18.68h15.28M2.45 22.5h19.1M2.45 12h3.82M17.73 12h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 14.86H8.18l1.39-2.07M14.43 12.79l1.39 2.07h-2.86M10.62 11.21 12 9.14l1.38 2.07"
  }));
};

const SvgRecycleElectricity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.53 10.16h-4.61V3.71L6.47 13.84h4.61v6.46l6.45-10.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.61 3a10.14 10.14 0 0 1-2.94 19M7.39 21a10.14 10.14 0 0 1 2.94-19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.61 7.39V2.78h4.61M7.39 16.61v4.61H2.78"
  }));
};

const SvgRecycleShoppingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 17.73H8.18l1.39-2.07M14.43 15.66l1.39 2.07h-2.86M10.62 14.07 12 12l1.38 2.07"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.23h21v11.45a3.82 3.82 0 0 1-3.82 3.82H5.32a3.82 3.82 0 0 1-3.82-3.82V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 11.05V8.18A6.68 6.68 0 0 1 12 1.5a6.68 6.68 0 0 1 6.68 6.68v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRecycleTag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a2.67 2.67 0 0 0-1.69.61l-5 4.16V22.5h13.37V6.27l-5-4.16A2.67 2.67 0 0 0 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 16.77H8.18l1.39-2.07M14.43 14.7l1.39 2.07h-2.86M10.62 13.12 12 11.04l1.38 2.08"
  }));
};

const SvgRecycleTrash = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 5.32h15.28v14.32a2.86 2.86 0 0 1-2.86 2.86H7.23a2.86 2.86 0 0 1-2.86-2.86V5.32h-.01ZM2.45 5.32h19.1M15.82 5.32H8.18L8.77 3a1.92 1.92 0 0 1 1.86-1.5h2.74A1.92 1.92 0 0 1 15.23 3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 16.77H8.18l1.39-2.07M14.43 14.7l1.39 2.07h-2.86M10.62 13.12 12 11.04l1.38 2.08"
  }));
};

const SvgRecycleWater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.35 15.15a7.35 7.35 0 0 1-14.7 0C4.65 8.85 12 1.5 12 1.5s7.35 7.35 7.35 13.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.88 16.62a3 3 0 0 1 0-4.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m15 10.5-3 3v-3h3zM9 18.5l3-3v3H9z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.41 11.67.71.71a3 3 0 0 1 0 4.24M9.88 16.62l.71.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRedCarpet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.58 13.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.58,
    cy: 3.4,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 13.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.42,
    cy: 3.4,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.58 21.6H2.42l5.75-8.62h7.66l5.75 8.62zM23.5 21.6H.5M21.58 5.31S17.29 9.15 12 9.15 2.42 5.31 2.42 5.31"
  }));
};

const SvgReddit = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 14.36,
    rx: 8.59,
    ry: 6.2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.44 13.85a2.39 2.39 0 1 1 2.36-3.77M20.56 13.85a2.39 2.39 0 1 0-2.36-3.77M8.18 16.75a7.12 7.12 0 0 0 3.82.95 7.12 7.12 0 0 0 3.82-.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.66,
    cy: 13.41,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.34,
    cy: 13.41,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 8.16.96-4.77 4.77.95"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.34,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgReflectionHorizontal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.32 1.47h15.34l-7.67 7.67-7.67-7.67zM19.66 22.57H4.32l7.67-7.68 7.67 7.68zM9.11 12.02h1.92M12.95 12.02h1.92M1.44 12.02h1.92M5.28 12.02h1.91M16.78 12.02h1.92M20.62 12.02h1.92"
  })));
};

const SvgReflectionVertical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.55 4.34v15.35l-7.68-7.67 7.68-7.68zM1.45 19.69V4.34l7.67 7.68-7.67 7.67zM12 9.14v1.92M12 12.98v1.91M12 1.47v1.92M12 5.3v1.92M12 16.81v1.92M12 20.65v1.92"
  })));
};

const SvgRefreshAccountArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 14.86A2.86 2.86 0 0 1 12 12a2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18 3.41a10.5 10.5 0 0 1-6 19.09M6 20.59A10.5 10.5 0 0 1 12 1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 8.18V3.41h4.77M6.27 15.82v4.77H1.5"
  }));
};

const SvgRefreshChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.08 9.99 9.3 7.21l2.78-2.79"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 7.2H12A3.82 3.82 0 1 1 8.18 11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRefreshDimension = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 16.58 4.89-2.44V8.77L12 6.36 7.12 8.77v5.37L12 16.58z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.12 8.76h.01l4.87 2.4v5.42M12 16.58v-5.42l4.87-2.4h.01"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.88 8.76h-.01L12 11.16l-4.87-2.4h-.01"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.18 3.21A10.75 10.75 0 0 1 12 22.75M5.82 20.79A10.75 10.75 0 0 1 12 1.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.84 7.12-.98-3.91h3.91M5.16 16.89l.98 3.9H2.23"
  }));
};

const SvgRefreshEnvelopeArrow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.21h3.91v15.27h-21V7.21h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.21 12 17.7 22.5 7.21M9.14 14.84 1.5 22.48M22.5 22.48l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.21h3.91v15.27h-21V7.21h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.59 8.1a3.81 3.81 0 1 1 1.23-2.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82.52v3.82H12"
  }));
};

const SvgRefreshMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.08 9.99 9.3 7.21l2.78-2.79"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 7.2H12A3.82 3.82 0 1 1 8.18 11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRemoteControl = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.14,
    width: 21,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 16.77V12"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 16.77V12M9.14 19.64h1.91M12.95 19.64h1.91M13.91 12.96h-3.82l-.95-3.82h5.72l-.95 3.82zM12 7.23v1.91M9.3 6.22a3.82 3.82 0 0 1 5.4 0M6.75 3.67a7.44 7.44 0 0 1 10.5 0"
  }));
};

const SvgRentHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 13.44H2.9a1.44 1.44 0 0 1 1.44 1.44 1.44 1.44 0 0 1-1.44 1.43H1.46v-2.87ZM1.46 20.15v-3.84h1a1.91 1.91 0 0 1 1.91 1.92v1.92M10.08 19.19H7.21v-5.75h2.87M9.13 16.31H7.21M12 20.15v-6.71h.96l1.92 5.75h.95v-6.71M17.75 13.44h5.75M20.63 20.15v-6.71M23.5 22.06H.5M22.54 10.56 12 1.94 1.46 10.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgReplay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.96 4.36 2.86 2.87-2.86 2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.96 4.36 2.86 2.87-2.86 2.86M11.04 13.91l-2.86 2.86 2.86 2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 11.05A5.73 5.73 0 0 1 12 16.77H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 11.05A5.73 5.73 0 0 1 12 16.77H8.18M6.27 13A5.73 5.73 0 0 1 12 7.23h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRestaurantForkKnife = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.38 1.46a5.75 5.75 0 0 1 5.75 5.75v8.63H3.38V1.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 23.5v-7.67h3.83v7.67M14.88 23.5V11.04h3.83V23.5M13 7.21h7.67v1A2.87 2.87 0 0 1 17.75 11h-1.92A2.88 2.88 0 0 1 13 8.17v-1 .04ZM16.79.5v6.71M12.96.5v6.71M20.63.5v6.71"
  }));
};

const SvgRestaurant = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11 .5v6.26a3.81 3.81 0 0 1-2.12 3.42 3.83 3.83 0 0 1-3.43 0 3.83 3.83 0 0 1-2.08-3.42V.5M7.21.5v23M14.87 23.5v-22a5.74 5.74 0 0 1 5.74 5.75V13l-5.75 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRibbonBow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 8.16a3.86 3.86 0 0 1-2.53 3.6 3.89 3.89 0 0 1-2.58 0 3.82 3.82 0 0 1-1.13-6.55 3.8 3.8 0 0 1 4.84 0 3.85 3.85 0 0 1 1.4 2.95Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m14.42 5.21 3.48-3a2.81 2.81 0 0 1 1.82-.68 2.77 2.77 0 0 1 2.78 2.72v7.81a2.77 2.77 0 0 1-4.6 2.09l-3.48-3M9.58 11.11l-3.48 3a2.77 2.77 0 0 1-4.6-2.09V4.25a2.77 2.77 0 0 1 2.78-2.77 2.81 2.81 0 0 1 1.82.68l3.48 3.05",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4.54 14.83-2.08 3.83h2.86l1.91 2.86 3.48-9.76M19.45 14.83l2.1 3.83h-2.87l-1.91 2.86-3.48-9.76M4.36 8.16h3.82M15.82 8.16h3.82"
  }));
};

const SvgRibs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.71 3.38h-1.92a1.9 1.9 0 0 0-1.91 1.91A1.91 1.91 0 0 0 13 3.38h-2a1.91 1.91 0 0 0-1.88 1.91 1.9 1.9 0 0 0-1.91-1.91H5.29a1.9 1.9 0 0 0-1.91 1.91v13.42a1.9 1.9 0 0 0 1.91 1.91h1.92a1.9 1.9 0 0 0 1.91-1.91A1.91 1.91 0 0 0 11 20.62h2a1.91 1.91 0 0 0 1.92-1.91 1.9 1.9 0 0 0 1.91 1.91h1.92a1.9 1.9 0 0 0 1.91-1.91V5.29a1.9 1.9 0 0 0-1.95-1.91ZM6.25.5v2.88M12 .5v2.88M17.75.5v2.88M6.25 20.63v2.87M12 20.63v2.87M17.75 20.63v2.87M9.13 12.96v5.75M14.88 5.29v3.84M14.88 11.04v4.79M9.13 7.21v3.83M14.88 17.75v.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRiceBowl = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12h-21c0 3.91 3.31 7.27 6.68 8.75v1.75h7.64v-1.75c3.37-1.48 6.68-4.84 6.68-8.75ZM2.45 12C2.45 6.2 6.73 1.5 12 1.5s9.55 4.7 9.55 10.5M7.23 8.18h1.91M12 9.14h1.91M12.95 5.32h1.91M16.77 8.18h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRightOrientation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.28 6.27h5.75v11.51H4.28zM13.87 3.39h5.75v17.26h-5.75zM10.03.52v23.01M19.62.52v23.01"
  })));
};

const SvgRoadSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h21v4.77h-21zM3.41 5.32l5.73 4.77M9.14 5.32l5.72 4.77M14.86 5.32l5.73 4.77M4.36 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91H2.45V3.41A1.91 1.91 0 0 1 4.36 1.5ZM2.45 10.09h3.82V22.5H2.45zM19.64 1.5a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V3.41a1.91 1.91 0 0 1 1.91-1.91ZM17.73 10.09h3.82V22.5h-3.82zM6.27 16.77h11.46"
  }));
};

const SvgRock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 12A1.91 1.91 0 0 1 13 10.11 1.91 1.91 0 0 1 14.86 12M14.86 12a1.92 1.92 0 0 1 1.91-1.91A1.91 1.91 0 0 1 18.68 12M18.68 12V5.34a1.92 1.92 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91v9.55a9.87 9.87 0 0 1-.71 3.68l-.49 1.23a9.87 9.87 0 0 0-.71 3.68M8.18 23.48a4.57 4.57 0 0 0-1.35-3.26l-4.74-4.74a2 2 0 0 1-.59-1.43 2.07 2.07 0 0 1 .59-1.44 2 2 0 0 1 2.87 0l2.27 2.28V3.43a1.91 1.91 0 0 1 1.91-1.91 1.92 1.92 0 0 1 1.91 1.91V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRocker = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.1 12a1.9 1.9 0 0 1 1.9-1.87A1.9 1.9 0 0 1 13.9 12M13.9 12a1.9 1.9 0 0 1 1.9-1.89A1.9 1.9 0 0 1 17.7 12M17.7 12V5.38a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9v9.5a9.81 9.81 0 0 1-.71 3.66l-.48 1.22a9.81 9.81 0 0 0-.71 3.66M6.3 14.87V3.48a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9V12M6.3 23.42v-1.9l-2.69-2.68a3.81 3.81 0 0 1-1.11-2.69v-1.62a2.5 2.5 0 0 1 1.3-2.25 2.39 2.39 0 0 1 2.5.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRocketLaunch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 18.68H9.14a1.9 1.9 0 0 1-1.91-1.91v-7a10.77 10.77 0 0 1 3.14-7.59A2.31 2.31 0 0 1 12 1.5a2.31 2.31 0 0 1 1.63.67 10.77 10.77 0 0 1 3.14 7.59v7a1.9 1.9 0 0 1-1.91 1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 18.68h5.72l-.95 3.82h-3.82l-.95-3.82zM16.77 9.14l4.78 5.72v1.91h-4.78V9.14zM7.23 9.14l-4.77 5.72v1.91h4.77V9.14z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.49 4.73a4.77 4.77 0 0 0 7 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRocket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 19.64H9.14a1.91 1.91 0 0 1-1.91-1.91V8.18a7.64 7.64 0 0 1 3-6.11A2.89 2.89 0 0 1 12 1.5a2.89 2.89 0 0 1 1.72.57 7.64 7.64 0 0 1 3 6.11v9.55a1.91 1.91 0 0 1-1.86 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.27a1.91 1.91 0 0 1 1.91 1.91h-3.82A1.91 1.91 0 0 1 12 6.27ZM7.23 18.68H1.5v-1.91l5.73-5.73v7.64zM16.77 18.68h5.73v-1.91l-5.73-5.73v7.64zM13.91 22.5h-3.82l-.95-2.86h5.72l-.95 2.86zM12 14.86v4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRollGym = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 9.13,
    y: 3.38,
    width: 5.75,
    height: 17.25,
    rx: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.88 9.13 3.83 1.91v1.92l-3.83 1.92M9.13 14.88l-3.84-1.92v-1.92l3.84-1.91M18.71 12h4.79M5.29 12H.5"
  }));
};

const SvgRollerBrushTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Rect, {
    x: 1.43,
    y: 1.46,
    width: 17.26,
    height: 7.67,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.69 5.3h3.84V12h-9.59A1.92 1.92 0 0 0 11 13.93v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.1 14.89h3.84v5.75A1.92 1.92 0 0 1 11 22.56a1.92 1.92 0 0 1-1.9-1.92v-5.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgRollerBrush = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 1.5H22.5v5.73H5.32z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 4.36h-.48A3.35 3.35 0 0 0 1.5 7.7a3.35 3.35 0 0 0 3.34 3.35h9.07v3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.86h3.82v5.73a1.91 1.91 0 0 1-1.91 1.91A1.91 1.91 0 0 1 12 20.59v-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRoomDivider = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 2.85-7.64-.91-6.68.91V20.2l6.68-.91 7.64.91 6.68-.91V1.94l-6.68.91zM8.18 1.52v18.14M15.82 2.48v18.13M1.5 23.48v-2.87M8.18 22.52v-2.86M15.82 23.48v-2.87M22.5 22.52v-2.86"
  }));
};

const SvgRoomKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 8.18V4.36h13.36M7.23 8.18V4.36M13.91 22.5H1.5v-9.54h12.41l3.82 4.77-3.82 4.77zM17.73 17.73h1.4a3.37 3.37 0 0 0 3.37-3.38 3.38 3.38 0 0 0-1-2.38l-.89-.89a3.37 3.37 0 0 1-1-2.39V5.32"
  }));
};

const SvgRoomServiceTrolley = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.28 7.2h13.39a1.91 1.91 0 0 1 1.91 1.91v6.7H5.28V7.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.28,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.28 18.67V15.8M20.59 18.67V15.8M5.28 8.15V3.37L.5 1.46M12.93 2.41a3.83 3.83 0 0 1 3.83 3.83v1H9.11v-1a3.83 3.83 0 0 1 3.83-3.83ZM12.93.5v1.91"
  }));
};

const SvgRoomService = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 7.23A5.73 5.73 0 0 1 12 1.5a5.73 5.73 0 0 1 5.73 5.73V22.5H6.27v-7.64l5.21-3.25a5.18 5.18 0 0 0 2.43-4.38A1.91 1.91 0 0 0 12 5.32a1.91 1.91 0 0 0-1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRose = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.61 12a5.21 5.21 0 0 1-.55-.08A4.92 4.92 0 0 1 7.22 7V1.5A8.56 8.56 0 0 1 13.3 4a8.53 8.53 0 0 1 1.95 3 3.68 3.68 0 0 1-3.64 5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 1.5v5.74A4.77 4.77 0 0 1 11.51 12a4.92 4.92 0 0 1-4.29-5V1.5ZM12 23.5V12.02M16.28 13.93h1.46v.5a4.28 4.28 0 0 1-4.28 4.28H12v-.5a4.28 4.28 0 0 1 4.28-4.28Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.26 15.85h1.46A4.28 4.28 0 0 1 12 20.13v.5h-1.46a4.28 4.28 0 0 1-4.28-4.28v-.5Z",
    transform: "rotate(-180 9.13 18.24)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRotateLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M7.23 9.14H5.32a3.82 3.82 0 1 1 3.82-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.32 6.27 2.86 2.87L5.32 12"
  }));
};

const SvgRotateRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M3.41 9.14h1.91A3.82 3.82 0 1 0 1.5 5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 6.27 2.46 9.14 5.32 12"
  }));
};

const SvgRotationArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.37 20.55c-.66 1.38-1.48 2.2-2.37 2.2-1.69 0-3.13-2.95-3.66-7.09A25 25 0 0 1 8.09 12a25 25 0 0 1 .25-3.66c.53-4.14 2-7.09 3.66-7.09s3.13 3 3.66 7.09a22.48 22.48 0 0 1 .23 2.66",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.9 15.85h-2.92a22.48 22.48 0 0 1-2.68-.23c-4.14-.53-7.09-2-7.09-3.66s3-3.13 7.09-3.66a25 25 0 0 1 3.7-.21 26.79 26.79 0 0 1 3.17.18l.49.07c4.14.53 7.09 2 7.09 3.66 0 .89-.82 1.71-2.2 2.37",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 12.98 2.93 2.93L12 18.84"
  }));
};

const SvgRoundTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Round tube"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5v8.29a6.68 6.68 0 1 0 5.72 0V1.5M6.27 1.5h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.85 14.17a2.67 2.67 0 0 0 1.85.69C9.85 14.86 9.85 13 12 13s2.16 1.91 4.31 1.91a2.67 2.67 0 0 0 1.85-.69M12.95 4.36h2.07M12.95 7.23h2.07M15.42 10.09h-2.47M9.14 17.73h1.91M12.95 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgRoundedWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M12 1.5V13H2.45v-2A9.55 9.55 0 0 1 12 1.5ZM12 1.5a9.55 9.55 0 0 1 9.55 9.5v2H12V1.5Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 12.95H12v9.55H2.45zM12 12.95h9.55v9.55H12z"
  }));
};

const SvgRouteDestination = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.11 5.08c0 2.39-3.81 6-3.81 6s-3.82-3.58-3.82-6A3.7 3.7 0 0 1 5.3 1.5a3.7 3.7 0 0 1 3.81 3.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.3,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.34 13h4.3A2.39 2.39 0 0 1 11 15.34a2.39 2.39 0 0 1-2.38 2.39H3.86a2.39 2.39 0 0 0-2.38 2.38 2.39 2.39 0 0 0 2.38 2.39H17.7M16.75 9.14v11.45M16.75 14.86h4.77l-.95-1.9.95-1.92h-4.77v3.82z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRoute = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 5.08c0 2.39-3.82 6-3.82 6s-3.82-3.61-3.82-6A3.7 3.7 0 0 1 5.32 1.5a3.7 3.7 0 0 1 3.82 3.58Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.62c0 2.39-3.82 6-3.82 6s-3.82-3.58-3.82-6a3.7 3.7 0 0 1 3.82-3.57 3.7 3.7 0 0 1 3.82 3.57Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13h4.3a2.39 2.39 0 0 1 2.39 2.39 2.39 2.39 0 0 1-2.39 2.39H3.89a2.39 2.39 0 0 0-2.39 2.33 2.39 2.39 0 0 0 2.39 2.39h15.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRouterSecurity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 14.86,
    width: 21,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 3.41v11.45M4.36 18.68h1.91M8.18 18.68h1.91M12 18.68h7.64M9.14 7.23h5.73v3.82H9.14zM12 3.41a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82V5.32A1.91 1.91 0 0 1 12 3.41Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 4.36a2.88 2.88 0 0 1 2.87 2.87M16.77 1.5a5.72 5.72 0 0 1 5.73 5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRouter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 12.93h21v9.55h-21zM5.32.52v13.37M18.68.52v13.37M19.64 17.7h-1.91M15.82 17.7h-1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.7,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgRssSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 11.05A6.68 6.68 0 0 1 13 17.73M6.27 6.27a11.46 11.46 0 0 1 11.46 11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }));
};

const SvgRulerCombined = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 5.32h5.73V22.5H1.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 1.5v5.73H7.23V5.32H1.5V1.5h21zM11.05 4.36v2.87M14.86 4.36v2.87M18.68 4.36v2.87"
  }));
};

const SvgRulerTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-135 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.76 1.39h8.49V22.6H7.76z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.66 11-2.12-2.12M15.83 13.83l-1.42-1.42M13 16.66l-2.12-2.12M10.17 19.49l-1.41-1.42"
  }));
};

const SvgRuler = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 8.18H1.5v8.59h21V8.18h-5.73"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 6.27,
    width: 9.55,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 12.48,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 14.86v1.91M14.86 14.86v1.91M11.05 13.91v3.82M18.68 13.91v3.82"
  }));
};

const SvgRulers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5v21h21v-7.64H9.14V1.5H1.5zM1.5 18.68h1.91M1.5 14.86h2.86M1.5 11.05h1.91M1.5 7.23h2.86M5.32 22.5v-1.91M9.14 22.5v-2.86M12.95 22.5v-1.91M16.77 22.5v-2.86"
  }));
};

const SvgSafe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 5.32h13.36v13.36H5.32z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 8.18v1.91M12 13.91v1.91M8.69 10.09l1.66.96M13.65 12.95l1.66.96M15.31 10.09l-1.66.96M10.35 12.95l-1.66.96M18.68 9.14h1.91M18.68 15.82h1.91"
  }));
};

const SvgSafetyGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 13.91h22.9M2.45 13.91v4.77a3.82 3.82 0 0 0 3.82 3.82h2.48a1.91 1.91 0 0 0 1.82-1.34l.19-.6a1.31 1.31 0 0 1 1.24-.92 1.31 1.31 0 0 1 1.24.89l.22.66a1.92 1.92 0 0 0 1.82 1.31h2.44a3.82 3.82 0 0 0 3.82-3.82v-4.77M1.5 13.91l2.18-9.45a3.82 3.82 0 0 1 3.72-3h1.74M22.5 13.91l-2.18-9.45a3.82 3.82 0 0 0-3.72-3h-1.74"
  }));
};

const SvgSafetyGlove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20 5.34a1.92 1.92 0 0 0-2.23 1.89V5.42a2 2 0 0 0-1.59-2 1.9 1.9 0 0 0-2.23 1.88V3.51a2 2 0 0 0-1.59-2 1.9 1.9 0 0 0-2.23 1.88v1.93a1.9 1.9 0 0 0-2.27-1.88 2 2 0 0 0-1.59 2v5.63A1.92 1.92 0 0 0 4 9.16a2 2 0 0 0-1.59 2v.06a9.85 9.85 0 0 0 4.78 8.43v2.85h11.49v-2.86a9.77 9.77 0 0 0 2.87-6.92V7.33A2 2 0 0 0 20 5.34ZM6.27 13.91v-2.86M10.09 11.05V5.32M13.91 11.05V5.32M17.73 11.05V7.23M20.59 22.5H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSafetyGoggles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 22.5H16a2.86 2.86 0 0 1-2.71-2 1.32 1.32 0 0 0-1.26-.9 1.32 1.32 0 0 0-1.26.9 2.86 2.86 0 0 1-2.77 2H6.27a3.82 3.82 0 0 1-3.82-3.82V13H9.3a1.94 1.94 0 0 1 1.35.56 1.9 1.9 0 0 0 2.7 0A1.94 1.94 0 0 1 14.7 13h6.85v5.73a3.82 3.82 0 0 1-3.82 3.77ZM23.45 12.95h-1.9M2.45 12.95H.55M1.5 13l2.14-8.61a3.82 3.82 0 0 1 3.7-2.89h1.8M22.5 13l-2.14-8.61a3.82 3.82 0 0 0-3.7-2.89h-1.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSafetyVest = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 8.18V22.5h-6.69A2.86 2.86 0 0 1 12 19.64a2.86 2.86 0 0 1-2.86 2.86H2.45V8.18a2.86 2.86 0 0 0 2.87-2.86V1.5h13.36v3.82a2.86 2.86 0 0 0 2.87 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.09 8.18 1.5h7.64L12 10.09zM12 19.64v-9.55M2.45 12.95h6.69M2.45 17.73h6.69M14.86 12.95h6.69M14.86 17.73h6.69"
  }));
};

const SvgSagradaFamilia = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 22.5h-21v-5.73L12 12.96l10.5 3.81v5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.68a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.91A1.91 1.91 0 0 1 12 18.68ZM16.77 18.68h1.91M5.32 18.68h1.91M3.27 5.3a28.59 28.59 0 0 0-1.77 9.9v1.57M5.12 15.46v-.27A25.83 25.83 0 0 0 3.55 5.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8 3.39a27.17 27.17 0 0 0-1.68 9.9V15M9.8 13.76v-.48a24.87 24.87 0 0 0-1.47-9.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 16.77V15.2a28.59 28.59 0 0 0-1.77-9.9M20.45 5.3a25.83 25.83 0 0 0-1.58 9.89v.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.61 15v-1.71A27.17 27.17 0 0 0 16 3.39M15.68 3.39a24.87 24.87 0 0 0-1.49 9.89v.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSailBoat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 22.48H3.41a1.91 1.91 0 0 0-1.91-1.91V17.7h21a4.78 4.78 0 0 1-4.77 4.78ZM12 .52V17.7M12 5.29H7.23l.95-1.9-.95-1.91H12v3.81z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.3c0 4.77-5.73 12.4-8.59 12.4h17.18c0-7.63-5.73-16.22-8.59-16.22Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSailingBoat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 17.7h21a4.77 4.77 0 0 1-4.77 4.77H6.27A4.77 4.77 0 0 1 1.5 17.7ZM20.59 13.89H12V2.43a11 11 0 0 1 8.59 10.71ZM12 13.89H4.36L12 5.29v8.6zM12 .52V17.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.48H12V5.3H7.23z"
  }));
};

const SvgSander = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14 8.44 1.5 12v3.82h21v-.94a6.7 6.7 0 0 0-6.7-6.7 6.76 6.76 0 0 0-1.8.26Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 15.82V7.23a2.87 2.87 0 0 1 2.86-2.87h7.16a2.87 2.87 0 0 1 2.29 1.15l2 2.67M15.82 12a2.86 2.86 0 0 1 2.86 2.86v1H13v-1A2.86 2.86 0 0 1 15.82 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 15.82h13.36a3.82 3.82 0 0 1 3.82 3.82h-21a3.82 3.82 0 0 1 3.82-3.82ZM19.64 5.32l2.86 2.86M18.68 9.14l2.39-2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSandwich = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.41 1.5 12v3.82h21V12L12 3.41zM10.69 19.64H1.5v-3.82h21v3.82h-9.18M1.5 12h21"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.44 15.82 5.25 3.82 1.31.95 1.32-.95 5.25-3.82"
  }));
};

const SvgSanitizerBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "hygienic liquid"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 9.11h5.74a4.78 4.78 0 0 1 4.78 4.78v8.61H4.35v-8.61a4.78 4.78 0 0 1 4.78-4.78ZM8.17 15.8h7.66M12 11.98v7.65M9.13 5.28h5.74v3.83H9.13zM12 .5v4.78M19.65 3.37l-1.91-1.91H9.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgSantaBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 7.23h-1.9l-8.41 8.36a4.05 4.05 0 0 0-1.19 2.86 4 4 0 0 0 4.05 4.05h12.9a4 4 0 0 0 4.05-4.05 4.05 4.05 0 0 0-1.19-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5h5.73v2.86A2.86 2.86 0 0 1 12 7.23a2.86 2.86 0 0 1-2.86-2.87V1.5ZM8.18 7.23h6.68M18.68 4.36l-3.82 2.87M18.68 9.14l-3.82-1.91M12 11.05v9.54M16.77 15.82H7.23M8.18 12.95h1.91M8.18 18.68h1.91M13.91 12.95h1.91M13.91 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSantaClaus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13 14.86H7.23a2.87 2.87 0 1 0 0 5.73h.17a2.84 2.84 0 0 0 5.38 0h.17a2.87 2.87 0 1 0 0-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 15.6v-4.56h9.54v4.56"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 7.23h11.45v3.82H4.36zM5.32 7.23 5.72 6A6.62 6.62 0 0 1 12 1.5a6.65 6.65 0 0 1 5.73 3.33l1 1.71"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 8.18,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 4.36v2.87"
  }));
};

const SvgSantaHat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 16.77,
    width: 18.14,
    height: 5.73,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 15.82,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m21.55 14.17-.83-5.47a8.46 8.46 0 0 0-8.36-7.2A8.46 8.46 0 0 0 4 8.42l-1.55 8.52M15.82 6.27l1.91 10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSantaSleigh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m16.21 13.51-.79.79a1.9 1.9 0 0 1-1.35.56h-3A1.9 1.9 0 0 1 9.14 13a1.91 1.91 0 0 0-1.91-1.9H2.45v.9a6.69 6.69 0 0 0 6.69 6.68h6.68A5.73 5.73 0 0 0 21.55 13h-4a2 2 0 0 0-1.34.51ZM.55 11.05h2.86M20.59 12.95h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.65 13a3.91 3.91 0 0 0 0-.49 5.28 5.28 0 0 0-2-4.11L13 5.32h-1.9l-3.77 3a5.26 5.26 0 0 0-1.76 2.7M10.09 1.5h3.82v1.91A1.91 1.91 0 0 1 12 5.32a1.91 1.91 0 0 1-1.91-1.91V1.5ZM22.5 18.68a3.82 3.82 0 0 1-3.82 3.82H1.5M6.27 18.68v3.82M17.73 18.68v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSatelliteDish = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.27 5.29-2.58 5.72M18.71 3.73l-5.72 2.58M15.82 18.96v3.54H1.5v-2.86l4.88-4.88"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.57 3h1.35v18.9h-1.35a9.45 9.45 0 0 1-9.45-9.45A9.45 9.45 0 0 1 15.57 3Z",
    transform: "rotate(-45 11.519 12.479)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSatelliteSignal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 1.5,
    width: 3.82,
    height: 12.41,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.36h4.77V12H1.5zM17.73 4.36h4.77V12h-4.77zM7.23 8.18h2.86M16.77 8.18h-2.86M16.05 17A5.72 5.72 0 0 1 8 17M18.75 19.7a9.54 9.54 0 0 1-13.5 0M12 15.82v-1.91"
  }));
};

const SvgSatellite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 1.52,
    width: 3.82,
    height: 12.41,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 4.39h4.77v7.64H1.5zM17.73 4.39h4.77v7.64h-4.77zM7.23 8.2h2.86M16.77 8.2h-2.86M12 16.8v-2.87M12 16.8a3.82 3.82 0 0 1 3.82 3.82H8.18A3.82 3.82 0 0 1 12 16.8ZM12 23.48v-2.87"
  }));
};

const SvgSauceBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 9.14,
    width: 9.55,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 5.32h5.73v3.82H9.14zM13.91 5.32h-3.82l.95-3.82h1.92l.95 3.82zM10.09 15.82h3.82M7.23 12.95h9.55v5.73H7.23z"
  }));
};

const SvgSauce = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.22 5.44a13.1 13.1 0 0 1-4.87.94h-5v4.68a4.68 4.68 0 0 0 4.68 4.69h2.82a4.69 4.69 0 0 0 4.68-4.69l3.75-5.62V4.5h-1.19a13.1 13.1 0 0 0-4.87.94Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.03,
    cy: 6.84,
    r: 2.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.19 15.75h6.56l1.88 3.75H7.31l1.88-3.75z"
  }));
};

const SvgSausage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.6 16.6a26.18 26.18 0 0 1-8.77 5.64A3.6 3.6 0 0 1 3 19.6a3.6 3.6 0 0 1 2.18-4 19.07 19.07 0 0 0 6.38-4.05 19.07 19.07 0 0 0 4.05-6.38A3.6 3.6 0 0 1 19.6 3a3.6 3.6 0 0 1 2.64 4.87 26.18 26.18 0 0 1-5.64 8.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.15 20.22a21 21 0 0 1-2.65.62M20.84.5a21 21 0 0 1-.62 2.65M14.06 14.06l-2.54-2.54M17.45 8.98l-2.54-.85M8.98 17.45l-.85-2.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSawBlade = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m20.23 12.66-1.01 1.63-2.05.02-1.09 1.73-2.04.03-1.08 1.73-2.04.03-1.09 1.73-2.04.03-1.07 1.73-1.8.45-3.42-3.42L13.71 6.14l6.52 6.52zM13.71 6.14l3.22-3.22a2.36 2.36 0 0 1 1.66-.69 2.36 2.36 0 0 1 1.67.69l1.55 1.55a2.36 2.36 0 0 1 .69 1.67 2.4 2.4 0 0 1-.69 1.67L18.59 11l-4.88-4.86"
  }));
};

const SvgSaw = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.41 19.65v-9.56a5.74 5.74 0 0 1 5.74-5.74 5.74 5.74 0 0 1 5.74 5.74v9.56M.5 17.74h16.26M16.76 15.83h3.83a1.91 1.91 0 0 1 1.91 1.91 1.91 1.91 0 0 1-1.91 1.91h-3.83v-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScaleWeigh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 9.15h21.08v7.67H1.46zM3.38 5.31h17.25v3.83H3.38zM23.5 5.31H.5M15.83 13ZM19.67 13ZM11.04 12.98H5.29M4.33 19.69v-2.88M19.67 19.69v-2.88"
  }));
};

const SvgScale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 17.18,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.32,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36v4.78M12 12v6.68"
  }));
};

const SvgScarfFashion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 5.34,
    width: 21,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 13H11v5.7a1.91 1.91 0 0 1-1.91 1.91H5.32a1.91 1.91 0 0 1-1.91-1.91V13ZM7.23 23.48v-2.87M3.41 23.48V18.7M11.05 23.48V18.7M6.27 1.52h11.46a2.86 2.86 0 0 1 2.86 2.86v1H3.41v-1a2.86 2.86 0 0 1 2.86-2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScarf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.61 1.5h11V13h-11a2.39 2.39 0 0 0-2.38 2.39V3.89A2.39 2.39 0 0 1 9.61 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.61 13h9.07v7.16a2.39 2.39 0 0 0-2.38-2.38H9.61a2.39 2.39 0 0 1 0-4.78ZM23.45 12.95h-2.86M23.45 9.14h-2.86M23.45 5.32h-2.86M23.45 1.5h-2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 11.05h3.82v4.29a2.39 2.39 0 0 0 2.38 2.39h6.69a2.39 2.39 0 0 1 0 4.77H3.41ZM3.41 11.05H.55M.55 14.86h2.86M.55 18.68h2.86M.55 22.5h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSchoolBell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 9.61a8.1 8.1 0 0 1-13.33 6.2 8.11 8.11 0 1 1 13.33-6.2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 9.61a.5.5 0 0 1-.17.37.47.47 0 0 1-.31.11.47.47 0 0 1-.47-.48.48.48 0 0 1 .95 0ZM15.12 15.54a3.82 3.82 0 0 1 1.65 3.14v3.82H2.45v-3.82a3.8 3.8 0 0 1 1.66-3.14M21.55 9.14v10.5h-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 9.14,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSchoolBus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 16.75,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 16.75,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 16.75H1.5V5.29h18.14l.95 5.73 1.91 1.08v4.65h-2.86M15.82 16.75H8.18M21.55 5.3h-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 5.3h4.77v11.45h-4.77zM20.59 11.02h-4.77V4.34M1.5 5.3h9.55v4.77H1.5zM6.27 5.3v4.77"
  }));
};

const SvgSchoolChairDesk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.11 12.02h11.48v3.83H9.11zM10.07 1.5h9.57v5.74h-9.57zM11.02 23.5v-7.65h7.65v7.65"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.98 12.98V7.24h5.74v5.74M11.98 15.85H4.33v-6.7M2.41 9.15h5.74"
  }));
};

const SvgScienceAtoms = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 13.91A3.82 3.82 0 1 1 12 10.09a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.98 16.25-4.06 3.17M19.08 19.42l-4.06-3.17M12 10.09V5.32"
  }));
};

const SvgScienceBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.57 22.5H5.34a1.91 1.91 0 0 1-1.91-1.91 1.92 1.92 0 0 1 1.91-1.91h16.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.7 22.5H5.34a1.91 1.91 0 0 1-1.91-1.91V3.41A1.91 1.91 0 0 1 5.34 1.5h15.27v17.18H18.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.93 11.19v-2.2l-1.91-1.1-1.91 1.1v2.2l1.91 1.1 1.91-1.1zM10.11 11.05l-2.86 1.61M13.93 8.63l1.91-1.11v-2.2M12.02 14.86V12"
  }));
};

const SvgScience = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 3.82,
    ry: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 3.82,
    ry: 10.5,
    transform: "rotate(-60 12 11.997)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 10.5,
    ry: 3.82,
    transform: "rotate(-30 12.005 11.997)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScienctific = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 13.51,
    ry: 6.14,
    transform: "rotate(-45 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 6.14,
    ry: 13.51,
    transform: "rotate(-45 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScientistMan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48A10.5 10.5 0 0 1 12 13a10.5 10.5 0 0 1 10.5 10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.17 13.7-2.85 2.14 1.91 1.91v2.86L12 22.52l4.77-1.91v-2.86l1.91-1.91-2.85-2.14-.01-.01M12 22.52l-2.75-9.17M14.75 13.35 12 22.52"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 1.52,
    width: 9.55,
    height: 11.45,
    rx: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 4.39a3.46 3.46 0 0 0 3.09 1.91h3.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScientistWoman = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48A10.5 10.5 0 0 1 12 13a10.5 10.5 0 0 1 10.5 10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.17 13.7-2.85 2.14 1.91 1.91v2.86L12 22.52l4.77-1.91v-2.86l1.91-1.91-2.85-2.14-.01-.01M12 22.52l-2.75-9.17M14.75 13.35 12 22.52M16.77 6.3v1.9a4.77 4.77 0 1 1-9.54 0V6.3a4.77 4.77 0 1 1 9.54 0Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.14 15.54a6.59 6.59 0 0 1-1.73-4.47 3.82 3.82 0 0 0 3.82-3.82v.95a4.77 4.77 0 1 0 9.54 0v-.95a3.82 3.82 0 0 0 3.82 3.82 6.59 6.59 0 0 1-1.73 4.47M10.09 4.39a3.46 3.46 0 0 0 3.09 1.91h3.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScissorPliers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5v6.68A1.91 1.91 0 0 0 10.1 10a3.81 3.81 0 0 1-2.87-3.7A4.75 4.75 0 0 1 12 1.5ZM16.77 6.27A3.81 3.81 0 0 1 13.9 10 1.91 1.91 0 0 0 12 8.18V1.5a4.75 4.75 0 0 1 4.77 4.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 10.09a1.58 1.58 0 0 1 0 .38 1.91 1.91 0 0 1-3.74 0 1.58 1.58 0 0 1 0-.38.45.45 0 0 1 0-.12 1.9 1.9 0 0 1 3.8 0 .45.45 0 0 1-.06.12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.12 9.46a5.73 5.73 0 0 0-3.85 5.4v5.73a1.93 1.93 0 0 0 1.91 1.91 1.91 1.91 0 0 0 1.91-1.91v-5.14a11.26 11.26 0 0 1 1-4.63M13.88 9.46a5.73 5.73 0 0 1 3.85 5.4v5.73a1.93 1.93 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91v-5.14a11.26 11.26 0 0 0-1-4.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScissor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.83 9.84 9 12.67l-5-5A4 4 0 0 1 4 2ZM21.89 19.28a4 4 0 0 1-7.89-.94 4.21 4.21 0 0 1 .05-.62l-2.22-2.22 2.83-2.83 1.93 1.93a3.88 3.88 0 0 1 1.41-.26 4 4 0 0 1 3.89 4.94Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m19.67 7.66-5 5-4.78 4.78a3.73 3.73 0 0 1-.23 2.45 4.09 4.09 0 0 1-3.15 2.42 4 4 0 0 1-4.38-5 3.94 3.94 0 0 1 2-2.49 4.05 4.05 0 0 1 3.06-.3L9 12.67l2.83-2.83L19.67 2a4 4 0 0 1 0 5.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgScissors = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.28 19.72 11.68-18.5M16.77 19.88 5.31.79"
  }));
};

const SvgScrewNail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 10.09v.95h-5.8L4.36 22.5H1.5v-2.86L12.96 7.3V1.5h.95l8.59 8.59zM16.77 7.23 18.2 5.8M10.09 7.23l3.82 9.54M7.23 10.09l3.82 9.55M4.36 12.95l3.82 9.55"
  }));
};

const SvgScrewdriver = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12 12 8.18l4.75-5.54a3.28 3.28 0 0 1 2.48-1.14 3.26 3.26 0 0 1 3.27 3.27 3.28 3.28 0 0 1-1.14 2.48ZM10.57 6.75l6.68 6.68M3.41 22.5H1.5v-1.91l1.91-2.86h2.86v2.86L3.41 22.5zM13.91 10.09l-7.64 7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSeaCabin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.09 17.45h21.82M3.82 17.45V22M20.18 17.45V22M5.64 6.55h12.73v10.91H5.64z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2 8.36 12 2l10 6.36M10.18 12h3.64v5.45h-3.64zM1.09 20.63a3.4 3.4 0 0 0 5.45 0 3.41 3.41 0 0 0 5.45 0 3.39 3.39 0 0 0 5.44 0 3.4 3.4 0 0 0 5.44 0"
  }));
};

const SvgSea = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.07 20.13a3.41 3.41 0 0 0 5.46 0 3.41 3.41 0 0 0 5.46 0 3.4 3.4 0 0 0 5.45 0 3.4 3.4 0 0 0 5.45 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.29,
    r: 2.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 1.01v1.82M12 13.75v1.83M19.29 8.29h-1.83M6.54 8.29H4.71M17.15 3.14l-1.29 1.29M8.14 12.15l-1.29 1.29M17.15 13.44l-1.29-1.29M8.14 4.43 6.85 3.14"
  }));
};

const SvgSearchChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.52,
    cy: 9.59,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 14.84-2.89-2.89M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgSearchEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 9.14-2.75-2.75M17.63 7.23h4.87V22.5h-21V7.23h4.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.63 7.23h4.87V22.5h-21V7.23h4.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 7.23h4.77V22.5h-21V7.23h4.77"
  }));
};

const SvgSearchFlights = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 9.14,
    r: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 7.64-7.64M14.86 4.36V12M12.95 12.95l1.91-.95M16.77 12.95 14.86 12M14.86 7.23l-3.81 1.91M14.86 7.23l3.82 1.91"
  }));
};

const SvgSearchMap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.29 16.52 4.21 1.21V4.36l-6.68-1.9-7.64 1.9-6.68-1.9v13.36l6.68 1.91 3.44-.86M8.18 4.36v13.37M15.82 11.17V2.45"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 14.86,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 17.73 3.82 3.82"
  }));
};

const SvgSearchMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.52,
    cy: 9.59,
    r: 3.34,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 14.84-2.89-2.89M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgSearchVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.51 10.86a1.81 1.81 0 0 0-3 0L9.07 13H3.21a2 2 0 0 1-2-2V3.21a2 2 0 0 1 2-2h17.58a2 2 0 0 1 2 2V11a2 2 0 0 1-2 2M4.18 5.16h1.96M4.18 9.07h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.91,
    cy: 15.91,
    r: 3.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.98 18.84-3.91 3.91"
  }));
};

const SvgSeashell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.18 14.86-4.35 4.6A6.63 6.63 0 0 1 12 21.55a6.63 6.63 0 0 1-4.83-2.09l-4.35-4.6a3.77 3.77 0 0 1 .64-6.17 4.4 4.4 0 0 1 0-.51 3.82 3.82 0 0 1 3.77-3.82 3.76 3.76 0 0 1 1.34.26 3.8 3.8 0 0 1 6.86 0 3.76 3.76 0 0 1 1.34-.26 3.82 3.82 0 0 1 3.82 3.82 4.4 4.4 0 0 1-.05.51 3.77 3.77 0 0 1 .64 6.17ZM10.95 16.83 8.18 4.36M15.82 4.36l-2.77 12.47M9.03 17.26 3.41 9.14M20.59 9.14l-5.62 8.12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSeatChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.37 9.18a2 2 0 0 0-1.59 2A2.76 2.76 0 0 1 14 13.93h-4a2.76 2.76 0 0 1-2.76-2.76 2 2 0 0 0-1.59-2 1.91 1.91 0 0 0-2.24 1.89 6.7 6.7 0 0 0 6.7 6.69h3.82a6.7 6.7 0 0 0 6.7-6.69 1.91 1.91 0 0 0-2.26-1.88Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.26 9.42V7.24a5.74 5.74 0 1 1 11.48 0v2.18M6.26 23.5l.96-6.7M16.78 16.8l.96 6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSecurityCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 3.38h17.25v3.83H3.38zM.5 3.38h23M4.33 7.21h15.34V13A7.67 7.67 0 0 1 12 20.63 7.67 7.67 0 0 1 4.33 13V7.21Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.88,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 11.04h1.92"
  }));
};

const SvgSecurityHelmet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14 2.56a8.6 8.6 0 0 1 6.59 8.35v1.91H3.41v-1.91A8.57 8.57 0 0 1 10 2.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 12.82,
    width: 21,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 12.82H9.14l.95-11.46h3.82l.95 11.46z"
  }));
};

const SvgSegway = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.11,
    cy: 18.61,
    r: 3.78,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.11,
    cy: 18.61,
    r: 0.94,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.5 1.61h-2.83V12.5a6.83 6.83 0 0 1-3.78 6.11M3.5 18.61h2.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSensor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.93 4.18c0 1.62-1.31 1-2.93 1s-2.93.64-2.93-1a2.93 2.93 0 0 1 5.86 0ZM14.93 19.82a2.93 2.93 0 0 1-5.86 0c0-1.62 1.31-1 2.93-1s2.93-.62 2.93 1ZM22.75 12a2.93 2.93 0 0 1-2.93 2.93c-1.62 0-1-1.31-1-2.93s-.64-2.93 1-2.93A2.93 2.93 0 0 1 22.75 12ZM5.16 12c0 1.62.64 2.93-1 2.93a2.93 2.93 0 0 1 0-5.86c1.64 0 1 1.31 1 2.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.69 9.11a8.83 8.83 0 0 1 5.42-5.42M20.31 14.88a8.83 8.83 0 0 1-5.42 5.42M9.12 20.31a8.83 8.83 0 0 1-5.42-5.42M20.31 9.12a8.83 8.83 0 0 0-5.42-5.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.93,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgServerCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 13a2.35 2.35 0 0 1 0 .26 3.82 3.82 0 0 1-3.83 3.57h-1.92V13c0 1-2.15 1.92-4.8 1.92S7.17 14 7.17 13v3.83h-1a4.8 4.8 0 0 1-4.74-4.63 1.41 1.41 0 0 1 0-.2 4.78 4.78 0 0 1 4.8-4.8 6.68 6.68 0 0 1 .57-2.52l.13-.26a5.71 5.71 0 0 1 4.83-3H12a5.75 5.75 0 0 1 5.72 5.78v1.92h1a3.84 3.84 0 0 1 3.8 3.88Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 11.97,
    cy: 12.96,
    rx: 4.8,
    ry: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 13v3.83c0 1.06-2.15 1.92-4.8 1.92s-4.8-.86-4.8-1.92V13c0 1 2.15 1.92 4.8 1.92s4.8-.92 4.8-1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 11.97,
    cy: 12.96,
    rx: 4.8,
    ry: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 16.79v3.84a1.27 1.27 0 0 1-.65 1 7.88 7.88 0 0 1-4.15 1 7.88 7.88 0 0 1-4.15-1 1.25 1.25 0 0 1-.65-1v-3.84c0 1.06 2.15 1.92 4.8 1.92s4.8-.86 4.8-1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgServerConnect = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.45 1.48h21.1v6.71H1.45zM1.45 8.19h21.1v6.71H1.45zM9.12 3.4v1.92M9.12 10.11v1.92M5.29 3.4v1.92M5.29 10.11v1.92M23.51 20.66h-9.59M10.08 20.66H.49M10.08 18.74h3.84v3.84h-3.84zM12 14.91v3.83M19.67 4.36h-3.83M19.67 11.07h-3.83"
  })));
};

const SvgServerDatabase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 4.36c0 .87-1.38 1.63-3.58 2.16a30.79 30.79 0 0 1-7 .72 30.89 30.89 0 0 1-7-.72C2.79 6 1.41 5.23 1.41 4.36c0-1.59 4.73-2.87 10.59-2.87s10.51 1.28 10.51 2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 4.36V12c0 .86-1.38 1.63-3.58 2.15a30.23 30.23 0 0 1-7 .72 30.32 30.32 0 0 1-7-.72C2.79 13.67 1.41 12.9 1.41 12V4.36C1.41 5.23 2.79 6 5 6.52a30.89 30.89 0 0 0 7 .72 30.79 30.79 0 0 0 7-.72c2.13-.52 3.51-1.29 3.51-2.16Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.51 12v7.67c0 .86-1.38 1.63-3.58 2.16a30.79 30.79 0 0 1-7 .72 30.89 30.89 0 0 1-7-.72c-2.19-.53-3.57-1.3-3.57-2.16V12c0 .86 1.38 1.63 3.57 2.15a30.32 30.32 0 0 0 7 .72 30.23 30.23 0 0 0 7-.72c2.2-.48 3.58-1.25 3.58-2.15ZM11 11.08h1.92M14.83 11.08h1.92M7.16 11.08h1.92M11 18.75h1.92M14.83 18.75h1.92M7.16 18.75h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgServerInterconnection = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.28 1.48h13.43v6.71H5.28zM5.28 8.19h13.43v6.71H5.28zM5.28 14.91h13.43v6.71H5.28zM18.71 4.36a3.84 3.84 0 0 1 3.84 3.83A3.84 3.84 0 0 1 18.71 12M18.71 12a3.84 3.84 0 0 1 3.84 3.84 3.83 3.83 0 0 1-3.84 3.83M5.28 19.7a3.82 3.82 0 0 1-3.83-3.83A3.83 3.83 0 0 1 5.28 12"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.28 12a3.83 3.83 0 0 1-3.83-3.81 3.83 3.83 0 0 1 3.83-3.83M8.16 4.36h1.92M8.16 11.07h1.92M8.16 17.78h1.92M15.83 4.36h-2.88M15.83 11.07h-2.88M15.83 17.78h-2.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgServerShare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.4 1.49h21.1v7.67H1.4zM1.4 14.91h21.1v7.67H1.4zM11.95 14.91V9.16M5.24 4.36v1.92M9.07 4.36v1.92M5.24 17.79v1.92M9.07 17.79v1.92M19.62 5.32h-3.83M19.62 18.75h-3.83"
  })));
};

const SvgServerShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 14.86,
    width: 21,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.74 7.23h3.85a1.92 1.92 0 0 1 1.91 1.91V13a1.92 1.92 0 0 1-1.91 1.91H3.41A1.92 1.92 0 0 1 1.5 13V9.14a1.92 1.92 0 0 1 1.91-1.91h3.84",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12.94a6.55 6.55 0 0 1-4.73-6.3V2.88L12 1.5l4.81 1.38v3.75A6.56 6.56 0 0 1 12 12.94ZM4.36 11.05h1.91M4.36 18.68h1.91M8.18 18.68h1.91M12 18.68h7.64M19.64 11.05h-4.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgServer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 2.44h21.1v6.71H1.46zM1.46 9.15h21.1v6.71H1.46zM1.46 15.87h21.1v6.71H1.46zM5.3 4.36v1.92M5.3 17.78v1.92M5.3 11.07v1.92M9.13 4.36v1.92M9.13 17.78v1.92M9.13 11.07v1.92M19.68 5.32h-4.79M19.68 12.03h-4.79M19.68 18.74h-4.79"
  })));
};

const SvgServiceBell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 22.5h-21v-1.91l.96-1.91h19.09l.95 1.91v1.91zM11.75 5.32h.49a9.3 9.3 0 0 1 9.3 9.3v.25H2.45v-.25a9.3 9.3 0 0 1 9.3-9.3ZM12 1.5v3.82M9.14 1.5h5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 14.86h13.36v3.82H5.32z"
  }));
};

const SvgServiceDesk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.37,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.24A4.78 4.78 0 0 1 16.78 12v1H7.22v-1A4.78 4.78 0 0 1 12 7.24ZM23.48 12.98H.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 23.5V12.98h17.22V23.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.22 16.8h9.57v3.83H7.22z"
  }));
};

const SvgSettingsChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.07,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 7.2V5.3M12 7.2V5.3M12 14.84v-1.91M9.52 8.64l-1.65-.96M9.52 8.64l-1.65-.96M16.13 12.45l-1.65-.95M14.48 8.64l1.65-.96M14.48 8.64l1.65-.96M7.87 12.45l1.65-.95M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgSettingsLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.52 19.63a2.86 2.86 0 0 1-2.87 2.87H4.35a2.86 2.86 0 0 1-2.87-2.87 1.9 1.9 0 0 1 1.91-1.91h5.74l1 1h3.82l1-1h5.74a1.9 1.9 0 0 1 1.83 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 5.28h1.92a1.92 1.92 0 0 1 1.91 1.92v10.52M3.39 17.72V7.2A1.92 1.92 0 0 1 5.3 5.28h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 5.28,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 2.41V.5M12 10.07V8.15M9.51 3.85l-1.65-.96M16.14 7.67l-1.65-.95M16.14 2.89l-1.65.96M9.51 6.72l-1.65.95"
  }));
};

const SvgSettingsMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.07,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 7.2V5.3M12 7.2V5.3M12 14.84v-1.91M9.52 8.64l-1.65-.96M9.52 8.64l-1.65-.96M16.13 12.45l-1.65-.95M14.48 8.64l1.65-.96M14.48 8.64l1.65-.96M7.87 12.45l1.65-.95"
  }));
};

const SvgSettingsMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5h1.91a1.9 1.9 0 0 1 1.91 1.91v13.36a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V3.41A1.9 1.9 0 0 1 3.41 1.5h15.27ZM12 22.5v-3.82M16.77 22.5H7.23M1.5 14.86h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 5.32V3.41M12 12.95v-1.9M9.52 6.75 7.87 5.8M16.13 10.57l-1.65-.96M16.13 5.8l-1.65.95M9.52 9.61l-1.65.96"
  }));
};

const SvgSettingsShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20 11.7a4.11 4.11 0 0 1 2-3.3l-1.85-3.3a4.15 4.15 0 0 1-6.23-3.6H10.1a4.15 4.15 0 0 1-6.23 3.6L2 8.4A4.13 4.13 0 0 1 4 12a4.13 4.13 0 0 1-2 3.6l1.91 3.3a4.15 4.15 0 0 1 6.23 3.6h3.82a4.13 4.13 0 0 1 .57-2.11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.75 22.48h-.06A6.57 6.57 0 0 1 13 16.2v-3.78l4.72-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.79 6.31Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 15.69a3.42 3.42 0 0 1-1 .13 3.82 3.82 0 1 1 3.8-4.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSettingsVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.51 11.35a1.8 1.8 0 0 0-3 0l-1.44 2.12H3.21a2 2 0 0 1-2-2V3.69a2 2 0 0 1 2-1.95h17.58a2 2 0 0 1 2 2v7.82a2 2 0 0 1-2 2M4.18 5.65h1.96M4.18 9.56h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.91,
    cy: 17.37,
    r: 2.93,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.91 12.49v1.95M15.91 20.31v1.95M11.68 14.93l1.69.98M18.45 18.84l1.69.98M20.14 14.93l-1.69.98M13.37 18.84l-1.69.98"
  }));
};

const SvgShape = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.53 4.33v15.35A31.08 31.08 0 0 0 12 17.76a31.08 31.08 0 0 0-10.57 1.92V4.33A31.08 31.08 0 0 0 12 6.25a31.08 31.08 0 0 0 10.53-1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    "data-name": "roll brush"
  }));
};

const SvgShareChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.07,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 6.25,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 13.89,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 10.07 7.64 3.82M15.82 6.25l-7.64 3.82"
  }));
};

const SvgShareEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 5.32,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 5.32 5.72 2.86M14.86 2.45 9.14 5.32M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }));
};

const SvgShareMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 10.07,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 6.25,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 13.89,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 10.07 7.64 3.82M15.82 6.25l-7.64 3.82"
  }));
};

const SvgShareWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.09,
    cy: 14.92,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.84,
    cy: 12.04,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.84,
    cy: 17.8,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.09 14.92 5.75 2.88M14.84 12.04l-5.75 2.88M1.41 1.49h21.1v21.1H1.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 7.25H1.41V1.49h21.1v5.76zM4.29 4.37h1.92M8.13 4.37h1.92M11.96 4.37h1.92"
  })));
};

const SvgShare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.08 5.64 6.92 10.72M17.08 18.36 6.92 13.28"
  }));
};

const SvgSharpener = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41a31.45 31.45 0 0 0 7.64-1h2.86v19.1h-2.86a31.45 31.45 0 0 0-7.64-1 31.45 31.45 0 0 0-7.64 1H1.5V2.45h2.86a31.45 31.45 0 0 0 7.64.96Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 13.91 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 3.41h9.55v17.18H9.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 12.95H22.5M13.91 10.09Z"
  }));
};

const SvgShelf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 15.84h21v3.82h-21zM3.41 23.48v-3.82M20.59 23.48v-3.82M2.45 3.43h3.82v12.41H2.45zM6.27 1.52h3.82v14.32H6.27zM10.09 5.34h3.82v10.5h-3.82zM10.09 12.02h3.82M15.82 4.39l3.82 10.5M18.68 4.39l3.82 10.5"
  }));
};

const SvgShieldChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.89A5 5 0 0 1 8.18 9V6.25L12 5.3l3.82 1V9A5 5 0 0 1 12 13.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 20.59H1.5V1.5h15.27v7.64M4.36 5.32h9.55M4.36 9.14h9.55M4.36 12.95h6.69M4.36 16.77h6.69"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 11.05a5.06 5.06 0 0 1-3.82-4.89V2.45L12 1.5l3.82 1v3.66A5.06 5.06 0 0 1 12 11.05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.23 12 17.73l10.5-10.5M9.14 14.86 1.5 22.5M22.5 22.5l-7.64-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.23h3.91V22.5h-21V7.23h3.91"
  }));
};

const SvgShieldExclamation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5ZM12 7.23V12M12 12.95v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.05,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.68a5.23 5.23 0 0 1-3.82-5v-2.52L12 10.09l3.82 1.07v2.48A5.23 5.23 0 0 1 12 18.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgShieldKeyhole = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 13.91v-2.86"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.05,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.65a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86 1.9 1.9 0 0 1 1.91-1.91h5.73l.95 1h3.82l.95-1h5.73a1.9 1.9 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.33h1.91a1.92 1.92 0 0 1 1.91 1.91v10.5M3.41 17.74V7.24a1.92 1.92 0 0 1 1.91-1.91h1.91M12 8.75A3.93 3.93 0 0 1 9.14 5V2.72L12 1.89l2.89.83V5A3.93 3.93 0 0 1 12 8.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.84A5 5 0 0 1 8.18 10V7.2l3.82-1 3.82 1V10A5 5 0 0 1 12 14.84Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5h1.91a1.9 1.9 0 0 1 1.91 1.91v13.36a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V3.41A1.9 1.9 0 0 1 3.41 1.5h15.27ZM12 22.5v-3.82M16.77 22.5H7.23M1.5 14.86h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 11.61a3.93 3.93 0 0 1-2.86-3.77V5.57L12 4.75l2.89.82v2.25A3.94 3.94 0 0 1 12 11.61Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldNetwork = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.67a6.56 6.56 0 0 1-4.73-6.3V7.65L12 6.27l4.81 1.38v4.7A6.58 6.58 0 0 1 12 18.67Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 12h3.82M20.59 12h-3.82M14.88 7.11V2.46h5.71M9.14 7.23V2.46H3.41M9.14 16.99v4.87H3.41M14.86 16.97v4.89h5.73"
  }));
};

const SvgShieldServer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 9.14,
    cy: 4.36,
    rx: 7.64,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14c0 1 1.36 1.87 3.41 2.38a17.84 17.84 0 0 0 4.23.48 17 17 0 0 0 1.91-.1M1.5 13.91c0 1.58 3.42 2.86 7.64 2.86.66 0 1.31 0 1.92-.09M1.5 4.36v14.32M16.77 9.14V4.36M1.5 18.68c0 1.59 3.42 2.87 7.64 2.87a17.71 17.71 0 0 0 3.56-.34M17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShieldWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.76a4.2 4.2 0 0 1-2.88-4v-2.71l2.88-1 2.87 1v2.72A4.2 4.2 0 0 1 12 18.76Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.41 1.5h21.1v21.1H1.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.51 7.25H1.41V1.5h21.1v5.75zM4.28 4.38H6.2M8.12 4.38h1.92M11.96 4.38h1.92"
  })));
};

const SvgShipCruise = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.58 21.15-2.75-7.34h12.84l.91-.91h4.59l-2.75 8.25M9.25 17.48ZM12.92 17.48ZM14.75 17.48h1.83"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.67 13.81 6.5 9.23h11l1.83 3.67M8.33 5.56h7.33v3.67H8.33zM10.17 1.9v3.66M13.83 1.9v3.66M9.25 11.98v1.83M12.92 11.98v1.83M1 20.23a3.44 3.44 0 0 0 5.5 0 3.43 3.43 0 0 0 5.49 0 3.42 3.42 0 0 0 5.49 0 3.43 3.43 0 0 0 5.49 0"
  }));
};

const SvgShip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 1.5h3.82M17.73 22.5H6.27L2.46 12 12 10.09 21.55 12l-3.82 10.5z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.32 11.43 1.91-6.11h9.54l1.91 6.11M12 5.32V1.5M12 12.95v9.55"
  }));
};

const SvgShippingPackage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "package 1"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 1.5H5.32L1.5 8.18V22.5h21V8.18L18.68 1.5zM4.36 18.68h3.82M12 1.5V12M1.5 8.18h21"
  })));
};

const SvgShopBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 7.23h17.18v12a3.23 3.23 0 0 1-3.23 3.23H6.64a3.23 3.23 0 0 1-3.23-3.23v-12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 10.09V5.32A3.82 3.82 0 0 1 12 1.5a3.82 3.82 0 0 1 3.82 3.82v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShopCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.07,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.66,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.52 1.5h2.66a2.87 2.87 0 0 1 2.74 2l3.19 10.41h-.47a2.39 2.39 0 0 0-2.39 2.39 2.39 2.39 0 0 0 2.39 2.38h10",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 5.32h15.27v1.91l-1.91 6.68H9.11"
  }));
};

const SvgShop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.25 1.5H3.6L1.5 6.75a2.52 2.52 0 0 0 2.62 2.39 2.52 2.52 0 0 0 2.63-2.39 2.52 2.52 0 0 0 2.63 2.39A2.52 2.52 0 0 0 12 6.75a2.52 2.52 0 0 0 2.62 2.39 2.52 2.52 0 0 0 2.63-2.39 2.52 2.52 0 0 0 2.63 2.39 2.52 2.52 0 0 0 2.62-2.39L20.4 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.75 7.23.15-.8.9-4.93M17.25 7.23 16.2 1.5M12 1.5v5.73M20.59 9.14V22.5H3.41V9.14M.55 22.5h22.9"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 13.91h7.64v8.59H8.18zM3.41 17.73h4.77M15.82 17.73h4.77"
  }));
};

const SvgShoppingBagRecycle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.23h21v11.45a3.82 3.82 0 0 1-3.82 3.82H5.32a3.82 3.82 0 0 1-3.82-3.82V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 11.05V8.18A6.68 6.68 0 0 1 12 1.5a6.68 6.68 0 0 1 6.68 6.68v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 14.86A3.81 3.81 0 0 1 12 11.05M15.82 14.86A3.82 3.82 0 0 1 12 18.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "M17.73 13.91h-3.82L15.82 12l1.91 1.91zM6.27 15.82h3.82l-1.91 1.91-1.91-1.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 15.82ZM15.82 13.91v.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShoppingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 7.23h17.18v12.41a2.86 2.86 0 0 1-2.86 2.86H6.27a2.86 2.86 0 0 1-2.86-2.86V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 10.09V6.27A4.77 4.77 0 0 1 12 1.5a4.77 4.77 0 0 1 4.77 4.77v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShoppingBasket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.23 20.6H6.77a2.87 2.87 0 0 1-2.84-2.4L2.42 9.1h19.16l-1.51 9.1a2.87 2.87 0 0 1-2.84 2.4ZM23.5 9.1H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21 11.02V9.1l2.87-6.7M16.79 11.02V9.1l-2.87-6.7M12 12.94v4.79M8.17 12.94v4.79M15.83 12.94v4.79"
  }));
};

const SvgShoppingCartHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.15,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.76,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.76 18.7H5.68a1.35 1.35 0 0 1-1.35-1.36 1.34 1.34 0 0 1 .39-.95l2.48-2.48L4.84 3.7A2.87 2.87 0 0 0 2 1.48H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 3.39V5.3l-1.91 8.61H7.2"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.02 6.26h5.74v4.78h-5.74zM13.89 2.44l-3.83 3.82h7.66l-3.83-3.82z"
  }));
};

const SvgShoppingCart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.21 15.82 15.27-2.86v-8.6H4.15"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.52 1.5h2.87L7.2 15.82l-1.66 2.49a1.48 1.48 0 0 0-.24.82 1.46 1.46 0 0 0 1.46 1.46h11.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.66,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.11,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShorts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v3.82H3.41zM14.86 5.32H3.41L1.5 22.5h8.59l.85-7.64a1.07 1.07 0 0 1 1.06-.95 1.07 1.07 0 0 1 1.06.95l.85 7.64h8.59L20.59 5.32Z"
  }));
};

const SvgShovelTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.45 22.5a2 2 0 0 1-1.95-1.95 7.12 7.12 0 0 1 2.07-5l2.16-2.15 4.88 4.88-2.15 2.15a7.12 7.12 0 0 1-5.01 2.07Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.07 2.75h5.53v2.07a2.76 2.76 0 0 1-2.76 2.76 2.76 2.76 0 0 1-2.76-2.76V2.75h-.01Z",
    transform: "rotate(45 18.84 5.164)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.13 6.87 5.41 18.59"
  }));
};

const SvgShovel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.24 22.5a2.74 2.74 0 0 1-2.74-2.74 7.22 7.22 0 0 1 2.11-5.1l3.62-3.61L13 16.77l-3.66 3.62a7.22 7.22 0 0 1-5.1 2.11ZM6.27 17.73 19.64 4.36M16.77 1.5l5.73 5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShowerBath = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 14.86h21v1.91a5.73 5.73 0 0 1-5.73 5.73H7.23a5.73 5.73 0 0 1-5.73-5.73v-1.91ZM1.5 14.86V3.41A1.9 1.9 0 0 1 3.41 1.5h1.91a1.91 1.91 0 0 1 1.91 1.91v1.91M4.36 5.32h5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 14.86h5.73v3.82h-5.73zM1.5 11.05h1.91"
  }));
};

const SvgShowerBathroom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 4.37a4.78 4.78 0 0 1 4.78 4.78h-9.56a4.78 4.78 0 0 1 4.78-4.78Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 4.37A2.87 2.87 0 0 0 12 1.5H7.22a2.86 2.86 0 0 0-2.87 2.87V23.5M12 11.07ZM15.83 11.07ZM19.65 11.07ZM12 14.89ZM15.83 14.89ZM19.65 14.89ZM12 18.72ZM15.83 18.72ZM19.65 18.72ZM12 22.54ZM15.83 22.54ZM19.65 22.54Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShowerCurtain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 21.55c-1.31 0-1.31.95-2.63.95s-1.31-.95-2.63-.95-1.31.95-2.62.95-1.32-.95-2.63-.95-1.31.95-2.62.95-1.31-.95-2.62-.95-1.31.95-2.63.95-1.31-.95-2.62-.95V5.32c1.31 0 1.31.95 2.62.95s1.32-.95 2.63-.95 1.31.95 2.62.95 1.31-.95 2.62-.95 1.31.95 2.63.95 1.31-.95 2.62-.95 1.32.95 2.63.95 1.32-.95 2.63-.95ZM.55 1.5h22.9M7.23 1.5v3.82M12 1.5v3.82M16.77 1.5v3.82M21.55 1.5v3.82M2.45 1.5v3.82M6.27 8.18v10.5M12 8.18v10.5M17.73 8.18v10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShowerFacilities = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.33 23.5V5.33A3.82 3.82 0 0 1 7.15 1.5h4.78a3.82 3.82 0 0 1 3.83 3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.98 7.24 4.78-1.91 4.78 1.91v2.87h-9.56V7.24zM11.93 12.98v1.91M15.76 12.98v1.91M19.59 12.98v1.91M11.93 20.63v1.91M15.76 20.63v1.91M19.59 20.63v1.91M13.85 16.8v1.92M17.67 16.8v1.92M.46 19.67H6.2"
  }));
};

const SvgShower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 5.32h2a2.86 2.86 0 0 1 2.86 2.86v1H8.18v-1A2.86 2.86 0 0 1 11 5.32ZM12 1.5v3.82M11.05 12h1.9M14.86 12h1.91M9.14 14.86h1.91M12.95 14.86h1.91M7.23 12h1.91M.55 22.5h22.9M19.64 6.27h2.86M19.64 17.73h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgShowerhead = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.8 23.5V5.33A3.82 3.82 0 0 0 13 1.5h-1a3.82 3.82 0 0 0-3.8 3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.2 5.33a4.78 4.78 0 0 1 4.8 4.78v1H3.41v-1A4.78 4.78 0 0 1 8.2 5.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.8,
    cy: 18.72,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.37 13.93v1.92M8.2 13.93v1.92M12.02 13.93v1.92M4.37 17.76v1.91M8.2 17.76v1.91M12.02 17.76v1.91M4.37 21.59v1.91M8.2 21.59v1.91M12.02 21.59v1.91M21.59 18.72h-3.83"
  }));
};

const SvgShredFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 12.26V6.27L15.82 1.5H3.41v10.24"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM.55 12h22.9M.55 22.5a2.86 2.86 0 0 0 2.86-2.86V12M23.45 22.5a2.86 2.86 0 0 1-2.86-2.86V12M7.23 12v6.68M12 12v8.59M16.77 12v5.73M7.23 20.59v1.91M11.05 22.5h1.9M15.82 19.64h1.91"
  }));
};

const SvgShuffle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 5.32 2.87 2.86-2.87 2.86M14.86 12.96l2.87 2.86-2.87 2.86M5.32 8.18h2A1.93 1.93 0 0 1 8.84 9l.54.72.54.74"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12.29 13.6.49.67.59.78a1.9 1.9 0 0 0 1.52.77h2.84M17.73 8.18H14.9a1.92 1.92 0 0 0-1.53.82l-4.53 6.1a1.91 1.91 0 0 1-1.53.77h-2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSideViewVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.52 14.34v2.58a3 3 0 0 0 3 3 3.15 3.15 0 0 0 1.35-.32l1.26-.6v3.74M5.4 5.92a8.41 8.41 0 1 1 13.14 10v6.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.4,
    cy: 11.07,
    r: 3.27,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.17 11.53H9.2l-3.74 2.81H2.65V5.92h8.41l1.88 1.87v.04"
  }));
};

const SvgSignDollar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "dollar 3"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-21M6.27 16.77h0a2.87 2.87 0 0 0 2.87 2.87h4.77a3.82 3.82 0 0 0 3.82-3.82h0A3.82 3.82 0 0 0 13.91 12h-3.82a3.82 3.82 0 0 1-3.82-3.82h0a3.82 3.82 0 0 1 3.82-3.82h4.77a2.87 2.87 0 0 1 2.87 2.87h0"
  })));
};

const SvgSignYenCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "yuan coin"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 7.23 12 12 8.18 7.23M12 18.68V12M9.14 12.95h5.72"
  })));
};

const SvgSignYen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-9.55M7.23 12.95h9.54M5.32 1.5v1.91L12 12.96l6.68-9.55V1.5"
  }));
};

const SvgSignalChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 6.25v6.68M12 8.16v4.77M8.18 10.07v2.86M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgSignalMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 6.25v6.68M12 8.16v4.77M8.18 10.07v2.86M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgSignal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.29,
    r: 0.94,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.68 10.61a4.7 4.7 0 0 1 0-6.61M15.32 4a4.7 4.7 0 0 1 0 6.64M6 13.27A8.45 8.45 0 0 1 6 1.32M18 1.32a8.45 8.45 0 0 1 0 12M16.7 22.32 12.25 8.2M11.75 8.2 7.3 22.32M14.82 16.68H9.18M5.43 22.32h13.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSingleBed = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.66 10.11h16.68a2.16 2.16 0 0 1 2.16 2.16v4.53h-21v-4.52a2.16 2.16 0 0 1 2.16-2.17ZM4.59 1.52h14.82a2.13 2.13 0 0 1 2.13 2.13v6.46H2.45V3.66a2.13 2.13 0 0 1 2.14-2.14Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.51 6.3h5a2.28 2.28 0 0 1 2.28 2.28v1.54H7.23V8.58A2.28 2.28 0 0 1 9.51 6.3ZM1.5 16.8h21v3.82h-21zM2.45 23.48v-2.87M21.55 23.48v-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.65 23.5V7.24H9.26a1.91 1.91 0 0 0-1.91 1.91 6.7 6.7 0 0 0 6.65 6.7h2.87v7.65M19.78 15.85h-2.87M17.87 3.41V1.5h2.87a1.91 1.91 0 0 1 1.91 1.91v3.83M7.35 11.07h12.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSiren = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 22.58h23M5.29 18.75h13.42v3.83H5.29zM12 7.25A4.79 4.79 0 0 1 16.79 12v6.71H7.21V12A4.79 4.79 0 0 1 12 7.25ZM12 12.04v5.75M10.08 12.04h3.84M19.67 12.04h3.83M.5 12.04h3.83M12 .54v3.84M3.87 3.91l2.71 2.71M17.42 6.62l2.71-2.71"
  }));
};

const SvgSizeText = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 20.59V3.41M11.05 20.59H7.23M1.5 5.32V3.41h15.27v1.91M17.73 20.59V9.14M19.64 20.59h-3.82M12.96 11.04v-1.9h9.54v1.9"
  }));
};

const SvgSkeleton = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.65 17.72H12v2.39a2.39 2.39 0 0 1-2.39 2.39h-1a2.39 2.39 0 0 1-2.39-2.39 2.39 2.39 0 0 1 2.43-2.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 17.72h1a2.39 2.39 0 0 1 2.39 2.39v2.39h-3.39A2.39 2.39 0 0 1 12 20.11a2.39 2.39 0 0 1 2.39-2.39Z",
    transform: "rotate(-180 14.87 20.11)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v17.22M21.57 6.24A6.52 6.52 0 0 0 17 4.33H7.05a6.52 6.52 0 0 0-4.62 1.91M21.57 10.07A6.53 6.53 0 0 0 17 8.15H7.05a6.53 6.53 0 0 0-4.62 1.92M19.65 13.89A6.53 6.53 0 0 0 15 12H9a6.53 6.53 0 0 0-4.62 1.91M8.65 17.72H12v2.39a2.39 2.39 0 0 1-2.39 2.39h-1a2.39 2.39 0 0 1-2.39-2.39 2.39 2.39 0 0 1 2.43-2.39Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 17.72h1a2.39 2.39 0 0 1 2.39 2.39v2.39h-3.39A2.39 2.39 0 0 1 12 20.11a2.39 2.39 0 0 1 2.39-2.39Z",
    transform: "rotate(-180 14.87 20.11)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v17.22M21.57 6.24A6.52 6.52 0 0 0 17 4.33H7.05a6.52 6.52 0 0 0-4.62 1.91M21.57 10.07A6.53 6.53 0 0 0 17 8.15H7.05a6.53 6.53 0 0 0-4.62 1.92M19.65 13.89A6.53 6.53 0 0 0 15 12H9a6.53 6.53 0 0 0-4.62 1.91"
  }));
};

const SvgSkiLift = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 10.09h9.55a3.82 3.82 0 0 1 3.82 3.82v8.59H3.41v-8.59a3.82 3.82 0 0 1 3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86h5.73v7.64H9.14zM3.41 17.73h5.73M14.86 17.73h5.73M12 6.27a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 6.27ZM12 2.45v3.82M23.45 1.5.55 4.36"
  }));
};

const SvgSki = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.58.5v23M19.67 20.63h3.83M2.42.5v23M.5 20.63h3.83M8.17 1.46a1.92 1.92 0 0 1 1.92 1.92v19.16H6.25V3.37a1.92 1.92 0 0 1 1.92-1.91ZM15.83 1.46a1.92 1.92 0 0 1 1.92 1.92v19.16h-3.83V3.37a1.92 1.92 0 0 1 1.92-1.92Z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 6.25,
    y: 10.08,
    width: 3.83,
    height: 5.75,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.92,
    y: 10.08,
    width: 3.83,
    height: 5.75,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSkullDocument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 20.59H1.5V1.5h15.27v9.54M4.36 5.32h9.55M4.36 9.14h9.55M4.36 12.95H12M4.36 16.77H12"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 17.25a4.3 4.3 0 1 0-6.68 3.57v1.68h4.77v-1.68a4.29 4.29 0 0 0 1.91-3.57Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSkullEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 15.82H1.5V2.46h19.09v7.63"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 2.46 9.54 7.63 9.55-7.63M22.5 16.3a4.3 4.3 0 1 0-6.68 3.57v1.68h4.77v-1.68a4.32 4.32 0 0 0 1.91-3.57Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSkullLaptop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 5.8a4.3 4.3 0 1 0-6.68 3.57v1.68h4.77V9.37A4.32 4.32 0 0 0 22.5 5.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 6.27,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 6.27,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 19.64a2.86 2.86 0 0 1-2.86 2.86H4.36a2.86 2.86 0 0 1-2.86-2.86 1.9 1.9 0 0 1 1.91-1.91h5.73l.95.95h3.82l.95-.95h5.73a1.9 1.9 0 0 1 1.91 1.91ZM20.59 17.73v-4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 17.73V7.23a1.92 1.92 0 0 1 1.91-1.91H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSkullMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 15.82H1.5V2.46h19.09v7.63"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 2.46 9.54 8.58 9.55-8.58M22.5 16.3a4.3 4.3 0 1 0-6.68 3.57v1.68h4.77v-1.68a4.32 4.32 0 0 0 1.91-3.57Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSkullMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 5.32h1.91a1.9 1.9 0 0 1 1.91 1.91v9.54a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V7.23a1.9 1.9 0 0 1 1.91-1.91h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.8a4.3 4.3 0 1 0-6.68 3.57v1.68h4.77V9.37a4.32 4.32 0 0 0 1.91-3.57Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 6.27,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 6.27,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-3.82M16.77 22.5H7.23"
  }));
};

const SvgSkull = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.26 23.5a5.83 5.83 0 0 0-4.69-5.72h-.09V12A10.52 10.52 0 0 1 12 1.5 10.52 10.52 0 0 1 22.52 12v5.74h-.09a5.83 5.83 0 0 0-4.69 5.72M12 20.63v2.87M9.13 20.63v2.87M14.87 20.63v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.7,
    cy: 12.5,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 12.5,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 17.76h1.92"
  }));
};

const SvgSkype = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 14.39c0 1.31 1.71 2.38 3.82 2.38s3.82-1.07 3.82-2.38S14.11 12 12 12s-3.82-1.07-3.82-2.39S9.89 7.23 12 7.23s3.82 1.07 3.82 2.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.21 14.48A9.51 9.51 0 0 0 12 2.45a9.64 9.64 0 0 0-2.48.34 4.76 4.76 0 0 0-6.73 6.73 9.51 9.51 0 0 0 9.21 12 9.64 9.64 0 0 0 2.48-.34 4.76 4.76 0 0 0 6.73-6.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSleepingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 1.5,
    width: 11.45,
    height: 21,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 8.18-4.77 4.78-6.69-4.78M6.27 8.18h11.46"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 4.36,
    width: 5.73,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSleigh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.46,
    y: 8.17,
    width: 17.22,
    height: 3.83,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 15.83h18.17A3.83 3.83 0 0 0 22.5 12M5.28 12v3.83M14.85 12v3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSlidersLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 20.63h17.25M20.63 20.63h2.87M.5 12h2.88M6.25 12H23.5M.5 3.38h9.58M12.96 3.38H23.5M10.08.5v5.75M3.38 9.13v5.75M17.75 17.75v5.75"
  }));
};

const SvgSlidersUpLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.63 23.5V6.25M20.63 3.37V.5M12 23.5v-2.87M12 17.75V.5M3.38 23.5v-9.58M3.38 11.04V.5M.5 13.92h5.75M9.13 20.63h5.75M17.75 6.25h5.75"
  }));
};

const SvgSlidersUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 5.32,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 23.45V7.23M20.59 3.41V.55M12 23.45v-2.86M12 16.77V.55M3.41 23.45v-9.54M3.41 10.09V.55"
  }));
};

const SvgSliders = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.45 3.41H7.23M3.41 3.41H.55M23.45 12h-2.86M16.77 12H.55M23.45 20.59h-9.54M10.09 20.59H.55"
  }));
};

const SvgSlippers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 8.18V6.75A3.35 3.35 0 0 1 5.8 3.41a3.36 3.36 0 0 1 3.34 3.34v1.43M9.14 13v4.3a3.35 3.35 0 0 1-6.69 0V13M14.86 8.18V6.75a3.35 3.35 0 0 1 3.34-3.34 3.36 3.36 0 0 1 3.35 3.34v1.43M21.55 13v4.3a3.35 3.35 0 0 1-6.69 0V13M1.5 8.18h8.59v4.77H1.5zM13.91 8.18h8.59v4.77h-8.59z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSmartphoneCharging = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 11.45,
    height: 17.18,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 15.82h1.91M7.23 18.68a3.82 3.82 0 0 0 3.82 3.82h4.77a3.82 3.82 0 0 0 3.82-3.82V9.14M16.77 5.32h5.73v1.91a1.91 1.91 0 0 1-1.91 1.91h-1.91a1.91 1.91 0 0 1-1.91-1.91V5.32ZM17.73 1.5h3.82v3.82h-3.82zM8.18 5.32 6.27 9.14h1.91l-1.91 3.82"
  }));
};

const SvgSmartphoneLocationPin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 17.51v3.21a1.78 1.78 0 0 1-1.78 1.78h-9.8a1.78 1.78 0 0 1-1.78-1.78V3.28A1.78 1.78 0 0 1 3.28 1.5h9.8a1.78 1.78 0 0 1 1.78 1.78V4.7M7.23 18.68h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.09c0 3.82-5.73 9.55-5.73 9.55s-5.72-5.73-5.72-9.55a5.73 5.73 0 1 1 11.45 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 10.09,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSmartphoneLocation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.83 9.14h5.76a1.92 1.92 0 0 1 1.91 1.91v9.54a1.92 1.92 0 0 1-1.91 1.91H3.41a1.92 1.92 0 0 1-1.91-1.91v-9.54a1.92 1.92 0 0 1 1.91-1.91h3.86M18.68 9.14V22.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 6.15c0 3.11-4.77 7.76-4.77 7.76S6.27 9.26 6.27 6.15a4.72 4.72 0 0 1 4.78-4.65 4.71 4.71 0 0 1 4.77 4.65Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 5.8,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSmartphonePlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.16,
    y: 1.25,
    width: 13.68,
    height: 21.5,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14 2.23h-3.9a1 1 0 0 1-1-1h5.86a1 1 0 0 1-.96 1ZM18.84 10c2.38.72 3.91 1.81 3.91 3s-1.53 2.29-3.91 3a21.26 21.26 0 0 1-3.91.74M12 16.89A24.74 24.74 0 0 1 5.16 16c-2.38-.73-3.91-1.81-3.91-3s1.53-2.3 3.91-3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.07 13.95 12 16.89l-2.93 2.93M12.98 8.09l-1.96.98V7.12l1.96.97z"
  }));
};

const SvgSmartphoneRotation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.16,
    y: 1.25,
    width: 13.68,
    height: 21.5,
    rx: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14 2.23h-3.9a1 1 0 0 1-1-1h5.86a1 1 0 0 1-.96 1ZM18.84 8c2.38.73 3.91 1.81 3.91 3s-1.53 2.3-3.91 3a20.46 20.46 0 0 1-3.91.74M12 14.93A24.37 24.37 0 0 1 5.16 14c-2.38-.72-3.91-1.81-3.91-3s1.53-2.27 3.91-3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.07 12 12 14.93l-2.93 2.93"
  }));
};

const SvgSmartphoneVirtualReality = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.16,
    y: 1.25,
    width: 13.68,
    height: 21.5,
    rx: 1.95,
    transform: "rotate(90 12 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.77 14v-3.9a1 1 0 0 1 1-1v5.86a1 1 0 0 1-1-.96ZM21.37 5.25c1.2-1.91 1.68-3.3 1.18-3.8C21.8.69 19 2.17 15.47 5l-.21.17C14.23 6 13.12 7 12 8c-.67.63-1.35 1.28-2 2a69 69 0 0 0-5 5.5 35.36 35.36 0 0 0-2.36 3.28c-1.2 1.91-1.68 3.3-1.18 3.8.74.73 3.54-.75 7.07-3.58",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.63 5.25C1.43 3.34 1 2 1.45 1.45 2.2.69 5 2.17 8.53 5l.21.17C9.77 6 10.88 7 12 8c.67.63 1.35 1.28 2 2s1.34 1.36 2 2c1.11 1.2 2.13 2.37 3 3.47a35.36 35.36 0 0 1 2.36 3.28c1.2 1.91 1.68 3.3 1.18 3.8-.75.76-3.55-.72-7.08-3.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSmartwatchWireless = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.2,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.11 12a1.91 1.91 0 1 1-1.91-1.91M2.43 8.84l.95-7.34h7.64l.95 7.34M11.97 15.16l-.95 7.34H3.38l-.95-7.34M14.84 12h-1.91M16.58 9.3a3.82 3.82 0 0 1 0 5.4M19.13 6.75a7.42 7.42 0 0 1 0 10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSmartwatch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.36,
    y: 5.32,
    width: 13.36,
    height: 13.36,
    rx: 1.91,
    transform: "rotate(90 12.05 12)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.82 18.68-.96 3.82H8.23l-.96-3.82h9.55zM7.27 5.32l.96-3.82h7.63l.96 3.82H7.27zM20.64 10.09h-1.91M20.64 13.91h-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.11 8.18a1.26 1.26 0 0 0-1.06.57A1.29 1.29 0 0 0 11 8.18a1.27 1.27 0 0 0-1.29 1.27c0 1.91 2.34 2.55 2.34 2.55s2.33-.64 2.33-2.55a1.27 1.27 0 0 0-1.27-1.27Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.23 14.86h1.91M11.09 14.86H13M13.95 14.86h1.91"
  }));
};

const SvgSnack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.26 4.36h17.48a1.76 1.76 0 0 1 1.76 1.77 9.69 9.69 0 0 1-9.69 9.69h-1.62A9.69 9.69 0 0 1 1.5 6.13a1.76 1.76 0 0 1 1.76-1.77Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.35 4.36h17.3a1.85 1.85 0 0 1 1.85 1.86v3.23a10.19 10.19 0 0 1-10.19 10.19h-.63A10.19 10.19 0 0 1 1.5 9.45V6.22a1.85 1.85 0 0 1 1.85-1.86ZM14.86 10.09l1.44 1.43M17.73 8.18h1.91M12.95 6.27l1.44 1.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnapchat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14a9.92 9.92 0 0 0 3.82.95c1.91 0 0-2.86.95-5.73S12 1.5 12 1.5s4.77 0 5.73 2.86-1 5.73.95 5.73a9.92 9.92 0 0 0 3.82-.95M6.27 12a4.18 4.18 0 0 1-2.86 3.82c-2.86.95-1.91 2.86-1 2.86h1c1 0 0 1.91 1 1.91s3.27-.55 4.78 1a3.51 3.51 0 0 0 2.81.91 3.51 3.51 0 0 0 2.86-.95c1.51-1.51 3.82-1 4.78-1s0-1.91.95-1.91h1c.95 0 1.9-1.91-1-2.86A4.18 4.18 0 0 1 17.73 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnorkling = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 14.84h-4.77l-.53-1.05a1.54 1.54 0 0 0-1.38-.86 1.53 1.53 0 0 0-1.38.86L12 14.84H7.23a1.9 1.9 0 0 1-1.91-1.91V6.25a1.91 1.91 0 0 1 1.91-1.91h13.36a1.91 1.91 0 0 1 1.91 1.91v6.68a1.9 1.9 0 0 1-1.91 1.91ZM12 18.66h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 18.66a3.82 3.82 0 0 1-3.82 3.82H5.32a3.82 3.82 0 0 1-3.82-3.82V.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowBoot = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 5.32h10.5V22.5H3.41zM13.91 14.86h1.91a5.73 5.73 0 0 1 5.73 5.73v1.91h-7.64v-7.64Z"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 1.5,
    width: 12.41,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 9.14h3.82M10.09 12.95h3.82M3.41 16.77a5.73 5.73 0 0 1 5.73 5.73H3.41v-5.73Z"
  }));
};

const SvgSnowCap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.33a8.61 8.61 0 0 1 8.61 8.61v1H3.39v-1A8.61 8.61 0 0 1 12 5.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.33a8.61 8.61 0 0 1 8.61 8.61v1H3.39v-1A8.61 8.61 0 0 1 12 5.33Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.53 5.71a2.75 2.75 0 0 0 .34-1.34 2.87 2.87 0 1 0-5.74 0 2.75 2.75 0 0 0 .34 1.34M3.39 14.89h3.83v1a3.83 3.83 0 0 1-3.83 3.83v-4.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 14.89a3.83 3.83 0 0 1 3.83 3.83v1h-3.83v-4.83Z",
    transform: "rotate(180 18.695 17.285)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.52 14.89H1.48M3.39 23.5v-3.83M20.61 23.5v-3.83M7.22 11.07h1.91M11.04 11.07h1.92M14.87 11.07h1.91"
  }));
};

const SvgSnowCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 8.18h-.18a2.76 2.76 0 0 0 .18-.95 2.88 2.88 0 0 0-2.87-2.87 2.51 2.51 0 0 0-.55.06A5.24 5.24 0 0 0 6.3 6.27h-1a3.82 3.82 0 0 0 0 7.64h14.34a2.87 2.87 0 0 0 0-5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowGlobeDecoration = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 10.09a8.58 8.58 0 0 1-4.67 7.64H8.08a8.59 8.59 0 1 1 12.51-7.64ZM19.64 22.5H4.36l.96-4.77h13.36l.96 4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 12C12 12 12 14.86 19.64 14.86M7.23 7.23h1.91M11.05 10.09h1.9M12.95 5.32h1.91M15.82 9.14h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowGloves = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 1.5a7.16 7.16 0 0 0-7.16 7.16v1.91a2.39 2.39 0 0 0-4.78 0 8 8 0 0 0 2.37 5.7l2.41 2.41h14.32v-10a7.17 7.17 0 0 0-7.16-7.18ZM7.23 18.68h14.32v2.86a1 1 0 0 1-1 1H8.18a1 1 0 0 1-1-1v-2.86h.05ZM7.23 12.95v-2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowGoggles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m20.8 18-6.89.77-.2-.41a1.92 1.92 0 0 0-3.42 0l-.2.41L3.2 18a1.91 1.91 0 0 1-1.7-1.9V9.18a1.91 1.91 0 0 1 1.91-1.91h17.18a1.91 1.91 0 0 1 1.91 1.91v6.88A1.91 1.91 0 0 1 20.8 18ZM4.36 10.14l3.82 3.81M10.09 10.14l3.82 3.81M15.82 10.14l3.82 3.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowHat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 17.73,
    width: 21,
    height: 4.77,
    rx: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.32a8.59 8.59 0 0 1 8.59 8.59v3.82H3.41v-3.82A8.59 8.59 0 0 1 12 5.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.32a8.59 8.59 0 0 1 8.59 8.59v3.82H3.41v-3.82A8.59 8.59 0 0 1 12 5.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.53 5.7a2.86 2.86 0 1 0-5.06 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 11.52c0-3.42 1.28-6.2 2.86-6.2s2.86 2.78 2.86 6.2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowSkate = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.18V1.5H1.48v14.32a2.86 2.86 0 0 0 2.86 2.86h12.41a2.86 2.86 0 0 0 2.86-2.86 5.73 5.73 0 0 0-5.72-5.73A1.9 1.9 0 0 1 12 8.18ZM11.98 4.36V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 1.5V12a2.86 2.86 0 0 0 2.86 2.86h12.41a2.85 2.85 0 0 0 2.41-1.3M.52 22.5h18.14a3.82 3.82 0 0 0 3.82-3.82M8.16 5.32h3.82M8.16 9.14h3.82M4.34 18.68v3.82M16.75 18.68v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowSki = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 15.82,
    width: 12.41,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 19.64h3.82a2.87 2.87 0 0 0 2.86-2.87M18.68 14.86v4.78M18.68 15.82H3.41a1.91 1.91 0 0 1-1.91-1.91V12a1.91 1.91 0 0 1 1.91-1.91h13.36l3.06 2.29a1.91 1.91 0 0 1 .76 1.53 1.91 1.91 0 0 1-1.91 1.91ZM12 10.09V4.36h1.91l2.86 5.73M3.41 6.27v3.82M9.14 7.23 12 10.09",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.22 22.5a4.73 4.73 0 0 1-4.72-4.72 4.76 4.76 0 0 1 1.38-3.35L14.43 2.88a4.76 4.76 0 0 1 3.35-1.38 4.73 4.73 0 0 1 4.72 4.72 4.76 4.76 0 0 1-1.38 3.35L9.57 21.12a4.76 4.76 0 0 1-3.35 1.38ZM12.95 8.18l2.87 2.87M8.18 12.95l2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowflakeDecor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.39 1 12 3.39 9.61 1M9.61 23 12 20.61 14.39 23M12 20.61v-5.3M12 8.69v-5.3M10.09 5.3h3.82M10.09 18.7h3.82M3.67 4.43l.87 3.27-3.26.87M20.33 19.57l-.88-3.27 3.27-.87M19.45 16.3l-4.58-2.65M9.13 10.35 4.55 7.7M5.24 10.31 7.16 7M16.84 17l1.92-3.31M20.33 4.43l-.88 3.27 3.27.87M3.67 19.57l.87-3.27-3.26-.87M9.13 13.65 4.55 16.3M19.45 7.7l-4.58 2.65M18.75 10.31 16.84 7M7.16 17l-1.92-3.31M14.87 10.35v3.3L12 15.31l-2.87-1.66v-3.3L12 8.69l2.87 1.66z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 2.43,
    cy: 12,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.57,
    cy: 12,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.22,
    cy: 20.28,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.78,
    cy: 3.72,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.78,
    cy: 20.28,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.22,
    cy: 3.72,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowflakeDecoration = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5V14.86M12 9.14V1.5M9.14 1.5h5.72M9.14 22.5h5.72M14.86 4.36 12 7.23 9.14 4.36M9.14 19.64 12 16.77l2.86 2.87M21.1 17.25l-4.97-2.86-1.65-.96M9.52 10.57l-1.65-.96L2.9 6.75M1.47 9.23l2.87-4.96M19.66 19.73l2.87-4.96"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.82 5.7 1.05 3.91-3.91 1.05M17.18 18.3l-1.05-3.91 3.92-1.05M2.9 17.25l4.97-2.86 1.65-.96M14.48 10.57l1.65-.96 4.97-2.86M22.53 9.23l-2.87-4.96M4.34 19.73l-2.87-4.96"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.18 5.7-1.05 3.91 3.92 1.05M6.82 18.3l1.05-3.91-3.91-1.05M14.86 12a2.88 2.88 0 0 1-.38 1.43 2.87 2.87 0 0 1-5 0 2.88 2.88 0 0 1 0-2.86 2.87 2.87 0 0 1 5 0 2.88 2.88 0 0 1 .38 1.43Z"
  }));
};

const SvgSnowglobe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 10.09a8.58 8.58 0 0 1-4.67 7.64H8.08a8.59 8.59 0 1 1 12.51-7.64ZM19.64 22.5H4.36l.96-4.77h13.36l.96 4.77zM12 13.91v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 13.91H9.14L12 7.23l2.86 6.68zM7.23 7.23h1.91M6.27 11.05h1.91M16.77 11.05h1.91M13.91 5.32h1.91"
  }));
};

const SvgSnowingSnowflakes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.72.5v5.75M16.23 4.81l4.98-2.87M21.21 4.81l-4.98-2.87M3.86 3.85V9.6M1.37 8.17l4.98-2.88M6.35 8.17 1.37 5.29M12.01 9.13v5.75M9.52 13.44l4.98-2.88M14.5 13.44l-4.98-2.88M8.18 17.75v5.75M5.69 22.06l4.98-2.87M10.67 22.06l-4.98-2.87M20.64 15.83v5.75M18.15 20.15l4.98-2.88M23.13 20.15l-4.98-2.88"
  }));
};

const SvgSnowing = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 16.7a4.77 4.77 0 0 1 .95-9.45 5.73 5.73 0 0 1 11.46 0 6 6 0 0 1-.09.95h.56a4.3 4.3 0 0 1 .48 8.57",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 10.11v4.78M10.09 12.02h3.82M12 23.48V18.7M13.91 21.57h-3.82M6.21 13.45l4.14 2.39M6.91 16.06l1.91-3.3M17.79 20.14l-4.14-2.39M17.09 17.53l-1.91 3.31M17.79 13.45l-4.14 2.39M17.09 16.06l-1.91-3.3M6.21 20.14l4.14-2.39M6.91 17.53l1.91 3.31"
  }));
};

const SvgSnowmanHat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 17.73a4.77 4.77 0 1 1-6.72-4.37 3.73 3.73 0 0 0 3.9 0 4.8 4.8 0 0 1 2.82 4.37Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 10.09a3.82 3.82 0 1 1-6.34-2.86h5a3.8 3.8 0 0 1 1.34 2.86ZM9.14 7.23H6.27M17.73 7.23h-2.87M9.14 1.5h5.73v5.73H9.14zM12 18.68v-4.77M20.59 11.05l-4.29 4.29M23.45 11.04h-2.86V8.18M3.41 11.05l4.29 4.29M.55 11.04h2.86V8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSnowman = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 15.82A6.68 6.68 0 1 1 8.9 9.9a4.75 4.75 0 0 0 6.2 0 6.67 6.67 0 0 1 3.58 5.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 6.27A4.79 4.79 0 0 1 15.1 9.9a4.75 4.75 0 0 1-6.2 0 4.77 4.77 0 1 1 7.87-3.63ZM15.82 13.91l6.68-6.68M23.45 10.09h-3.81V6.27M8.18 13.91 1.5 7.23M.55 10.09h3.81V6.27M11.05 7.23h1.9M11.05 14.86h1.9M11.05 18.68h1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSocial9Gag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.81 15.78 3.5 17.67l8.5 4.72 8.5-4.72V6.33L12 1.61 3.5 6.33v2.84l8.5 4.72 4.72-2.63V16L12 18.61ZM12 9.17 8.69 7.28 12 5.39l3.31 1.89Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.31 7.28 12 9.17 8.69 7.28 12 5.39l3.31 1.89z"
  }));
};

const SvgSocialLogo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 12.95,
    y: 1.5,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 1.5a1.43 1.43 0 0 1 1.43 1.43v1.43H8.66a1.43 1.43 0 0 1-1.43-1.43A1.43 1.43 0 0 1 8.66 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 13.91,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    transform: "rotate(-180 9.135 18.205)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.34 19.64a1.43 1.43 0 0 1 1.43 1.43v1.43h-1.43a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43Z",
    transform: "rotate(180 15.34 21.07)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 13.91,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    transform: "rotate(-180 9.135 18.205)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.34 19.64a1.43 1.43 0 0 1 1.43 1.43v1.43h-1.43a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43Z",
    transform: "rotate(180 15.34 21.07)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.3,
    y: 10.57,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    transform: "rotate(90 18.205 14.865)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.07 7.23a1.43 1.43 0 0 1 1.43 1.43v1.43h-1.43a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43Z",
    transform: "rotate(90 21.07 8.66)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 3.89,
    y: 4.84,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    transform: "rotate(-90 5.795 9.135)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.93 13.91a1.43 1.43 0 0 1 1.43 1.43v1.43H2.93a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43Z",
    transform: "rotate(-90 2.93 15.34)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 3.89,
    y: 4.84,
    width: 3.82,
    height: 8.59,
    rx: 1.91,
    transform: "rotate(-90 5.795 9.135)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.93 13.91a1.43 1.43 0 0 1 1.43 1.43v1.43H2.93a1.43 1.43 0 0 1-1.43-1.43 1.43 1.43 0 0 1 1.43-1.43Z",
    transform: "rotate(-90 2.93 15.34)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSocialMedia = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.14S13.73 3 7.23 6.27a10.21 10.21 0 0 0-5.73 8.59c0 2.87 2.86 5.73 7.64 5.73s9.76-1.84 10.5-4.77C20.59 12 16.77 12 16.77 12s1.21-2.26 0-2.86c-1.91-.96-4.77 0-4.77 0ZM19.15 9.44a1.87 1.87 0 0 0 .49-1.26 1.91 1.91 0 0 0-3.08-1.51",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.74 10.77a4.78 4.78 0 0 0-4-7.36 4.71 4.71 0 0 0-2.29.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 9.61,
    cy: 16.3,
    rx: 6.2,
    ry: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 8.6,
    cy: 16.26,
    rx: 2.04,
    ry: 1.7,
    transform: "rotate(-20 8.596 16.252)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSocialNetwork = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 10.09h3.82v3.82h-3.82zM1.5 12h8.59"
  }));
};

const SvgSock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h13.36v5.73H1.5zM17.25 22.5H8.18a5.74 5.74 0 0 1-5.73-5.73V7.23h11.46v2.86A2 2 0 0 0 16 12h1a5.39 5.39 0 0 1 5.45 4.73 5.24 5.24 0 0 1-5.2 5.77Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 20.59v1.91H8.18a5.74 5.74 0 0 1-5.73-5.73v-1.91h1.91a5.74 5.74 0 0 1 5.73 5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSocketElectricity = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 4.36,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 12,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.86,
    cy: 12,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSodaCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 1.5H6.27L4.36 5.32v13.36l1.91 3.82h11.46l1.91-3.82V5.32L17.73 1.5zM4.36 1.5h15.28"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 5.32h15.28M4.36 18.68h15.28"
  }));
};

const SvgSodaDrink = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 14.86C12 16.77 12 12 7.23 14.86M4.36 9.14h15.28M13 5.32V3.41a1.9 1.9 0 0 0-1.9-1.91H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 5.32H7.23l-.96 3.82L8.18 22.5h7.64l1.91-13.36-.96-3.82z"
  }));
};

const SvgSolarHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 12H2.46L6.27 1.5h11.46L21.55 12zM5.23 4.36h13.54M3.84 8.18h16.32M10.09 1.5 8.18 12M13.91 1.5 15.82 12M3.41 12h17.18v10.5H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 15.82h5.73v6.68H9.14zM22.5 22.5h-21"
  }));
};

const SvgSolarPanelCharge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.5 11.95h-19L6.3 1.5h11.4l3.8 10.45zM5.26 4.35H18.73M3.88 8.15H20.12M10.1 1.5 8.2 11.95M13.9 1.5l1.9 10.45M12 15.75l-1.9 2.85H12v-2.85zM12 20.5l1.9-2.85H12v2.85z"
  }));
};

const SvgSolarPanelSun = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 5.28a2.87 2.87 0 1 1-.84-2 2.89 2.89 0 0 1 .84 2ZM12 2.41V.5M12 10.07V8.15M9.13 5.28H7.22M16.78 5.28h-1.91M9.97 3.25 8.61 1.9M15.39 8.67l-1.36-1.36M9.97 7.31 8.61 8.67M15.39 1.9l-1.36 1.35M21.57 22.5H2.44l3.82-10.52h11.48l3.83 10.52zM5.22 14.85H18.78M3.82 18.67h16.36M10.09 11.98 8.17 22.5M13.91 11.98l1.92 10.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSolarPower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v2.88M12 20.63v2.87M23.5 12h-2.87M3.38 12H.5M20.13 3.87 18.1 5.9M5.9 18.1l-2.03 2.03M20.13 20.13 18.1 18.1M5.9 5.9 3.87 3.87M12 11.04l-.72.96H12v-.96zM12 12.96l.72-.96H12v.96z"
  }));
};

const SvgSoldHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 19.19H4a1.25 1.25 0 0 0 1.25-1.25 1.26 1.26 0 0 0-.55-1L3 15.72a1.25 1.25 0 0 1-.55-1 1.25 1.25 0 0 1 1.25-1.25h2.55M23.5 22.06H.5M22.54 10.56 12 1.94 1.46 10.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.17,
    y: 13.44,
    width: 2.88,
    height: 5.75,
    rx: 1.44,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.92 12.48v6.71h2.87M18.71 13.44h1a1.92 1.92 0 0 1 1.92 1.92v1.92a1.92 1.92 0 0 1-1.92 1.92h-1v-5.76Z"
  }));
};

const SvgSoundFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 11.05v7.63M15.82 12.95v3.82M8.18 12.95v3.82M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgSoundLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 21.58h5.75M9.13 21.58h5.75M17.75 21.58h5.75M.5 17.75h5.75M9.13 17.75h5.75M17.75 17.75h5.75M.5 13.92h5.75M9.13 13.92h5.75M17.75 13.92h5.75M9.13 10.08h5.75M17.75 10.08h5.75M9.13 6.25h5.75M9.13 2.42h5.75"
  }));
};

const SvgSoundProof = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 22.5c0-1.75-.95-1.75-.95-3.5s.95-1.75.95-3.5-.95-1.74-.95-3.49.95-1.75.95-3.5-.95-1.75-.95-3.51.95-1.75.95-3.5h3.82v21ZM.55 22.5h22.9M2.57 9a2.86 2.86 0 0 1 0 4.05M6 5.65a7.64 7.64 0 0 1 0 10.8M9.32 2.27a12.4 12.4 0 0 1 0 17.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSound = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 13v-2.91A7.64 7.64 0 0 1 12 2.45a7.64 7.64 0 0 1 7.64 7.64V13M5.32 13h-1a2.87 2.87 0 0 0-2.82 2.82v2.86a2.87 2.87 0 0 0 2.86 2.87h1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 21.55h1a2.87 2.87 0 0 0 2.86-2.87v-2.86a2.87 2.87 0 0 0-2.9-2.82h-1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSoundcloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.93a2.87 2.87 0 0 1-2.86 2.87H13V7.47a4.82 4.82 0 0 1 1.44-.22 4.07 4.07 0 0 1 4.29 3.82h1a2.86 2.86 0 0 1 2.77 2.86ZM10.09 8.2v9.55M7.23 9.16v8.59M4.36 9.16v8.59M1.5 11.07v5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSoupBowl = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 11h19.14a7.65 7.65 0 0 1-7.65 7.65h-3.83A7.65 7.65 0 0 1 2.43 11ZM1.48 18.67h21a3.83 3.83 0 0 1-3.78 3.83H5.3a3.83 3.83 0 0 1-3.83-3.83ZM7.22.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24M13 1.46c0 1.11-1 1.11-1 2.23s1 1.11 1 2.23S12 7 12 8.15M18.7.5c0 1.11-1 1.11-1 2.23s1 1.12 1 2.23-1 1.12-1 2.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSpaceNeedle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M16.77 4.36c0 1.06-2.13 1-4.77 1s-4.77.1-4.77-1S9.36 1.5 12 1.5s4.77 1.81 4.77 2.86Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 5.32a39.08 39.08 0 0 1 1 8.59c0 2.86-1.91 8.59-3.82 8.59M13.91 5.32a39.08 39.08 0 0 0-1 8.59c0 2.86 1.91 8.59 3.82 8.59M8.18 18.68h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSpatchulaTool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 12 12 8.18l4.75-5.54a3.28 3.28 0 0 1 2.48-1.14 3.26 3.26 0 0 1 3.27 3.27 3.28 3.28 0 0 1-1.14 2.48ZM10.57 6.75l6.68 6.68M13 13.91l-2.86-2.86-6.98 4.62a3.71 3.71 0 0 0-1.66 3.1 3.73 3.73 0 0 0 3.73 3.73 3.71 3.71 0 0 0 3.1-1.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 12-2.86 1.91-2.87-2.87L12 8.18 15.82 12z"
  }));
};

const SvgSpeaker = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 1.5,
    width: 15.27,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgSpeakers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 1.46h3.83v17.25H1.46zM.5 22.54h5.75M3.38 18.71v3.83M18.71 1.46h3.83v17.25h-3.83zM17.75 22.54h5.75M20.63 18.71v3.83M8.17 12h7.67v10.54H8.17z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.83,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 19.67h1.92"
  }));
};

const SvgSpeech = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 8.18h13.36V12H5.32zM7.23 12h9.55v10.5H7.23zM19.64 22.5H4.36M7.23 8.18V5.32a2.87 2.87 0 0 1 2.86-2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSpeedBoat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 18.68H1.5V12l21-1.91a8.59 8.59 0 0 1-8.59 8.59ZM1.5 14.86h13.36M7.23 11.47V5.32H12l4.55 5.31",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSpeedTrain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 10.08h16.29a5.75 5.75 0 0 1 5.75 5.75 1.92 1.92 0 0 1-1.92 1.92H.5M.5 13.92h1.92M4.33 13.92h1.92M8.17 13.92h1.91M12 13.92h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.79 10.08v3.84h5.42M23.5 20.63H.5M8.17 10.08 5.29 7.21v-.96l2.88-2.87M5.29 3.38h4.79"
  }));
};

const SvgSperm = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 15.8,
    cy: 4.36,
    rx: 3.82,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 18.66,
    cy: 19.64,
    rx: 3.82,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 11.98,
    cy: 12.95,
    rx: 3.82,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.2 4.17c.8 0 .8.38 1.59.38s.8-.38 1.6-.38.79.38 1.59.38M4.34 4.36h1.91M10.07 19.45c.79 0 .79.38 1.59.38s.79-.38 1.59-.38.8.38 1.59.38M7.2 19.64h1.91M3.39 12.76c.79 0 .79.39 1.59.39s.79-.39 1.59-.39.79.39 1.59.39M.52 12.95h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSphinx = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.35 18.72h1.91a1.91 1.91 0 0 1 1.91 1.91v1.91H2.43v-1.91a1.91 1.91 0 0 1 1.92-1.91ZM17.74 18.72h1.91a1.91 1.91 0 0 1 1.91 1.91v1.91h-5.73v-1.91a1.91 1.91 0 0 1 1.91-1.91ZM14.87 13l2.87-1V7.24a5.74 5.74 0 1 0-11.48 0V12l2.87 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.87 12.98-2.87.96-2.87-.96V8.2l.96-1.92h3.82l.96 1.92v4.78zM12 15.85v-1.92M12 18.72v4.78M23.48 22.54H.52M5.3 18.72l.61-2.1a6.29 6.29 0 0 1 2.92-3.74M15.17 12.88a7.22 7.22 0 0 1 .65.42 6.31 6.31 0 0 1 2.27 3.32l.61 2.1"
  }));
};

const SvgSpine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 1.5,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 3.41h2.86M15.82 3.41h2.86"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 5.32,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 7.23h2.86M15.82 7.23h2.86"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 9.14,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 11.05h2.86M15.82 11.05h2.86"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 12.95,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 14.86h2.86M15.82 14.86h2.86M10.09 16.77h3.82a1.92 1.92 0 0 1 1.91 1.91 1.89 1.89 0 0 1-.77 1.53L12 22.5l-3-2.29a1.89 1.89 0 0 1-.77-1.53 1.92 1.92 0 0 1 1.86-1.91Z"
  }));
};

const SvgSpiral = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.45 15.29A11.73 11.73 0 0 1 13.17 3.56a9.38 9.38 0 0 1 9.38 9.38 7.5 7.5 0 0 1-7.5 7.5 6 6 0 0 1-6-6 4.8 4.8 0 0 1 4.8-4.8 3.84 3.84 0 0 1 3.84 3.84 3.07 3.07 0 0 1-3.07 3.07 2.46 2.46 0 0 1-2.46-2.45 2 2 0 0 1 2-2 1.57 1.57 0 0 1 1.54 1.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    "data-name": "roll brush"
  }));
};

const SvgSplitFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 12.26V6.27L15.82 1.5H3.41v10.24"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM.55 12h22.9M20.59 14.86v7.64H3.41v-7.64"
  }));
};

const SvgSportBike = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 2.45,
    cy: 21.52,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 21.55,
    cy: 21.52,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 20.57h19.1M16.38 20.57H7.7a3.35 3.35 0 0 1-3.34-3.34 3.34 3.34 0 0 1 3.34-3.34h.37a19.88 19.88 0 0 1 9.22 2.26 2.31 2.31 0 0 1 1.39 2.12 2.3 2.3 0 0 1-2.3 2.3ZM4.36 6.25l1.91 7.64M1.5 5.3a3.25 3.25 0 0 0 2.3 1h4.38M18.68 3.39v15.27M22.5.52a8.27 8.27 0 0 1-5.36 7.74l-2.28.85M20.59 1.48 15.82 5.3"
  }));
};

const SvgSportsCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.2,
    cy: 15.85,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.76,
    cy: 15.85,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.85 15.85H9.11M5.28 15.85H2.41L1.46 13v-1.93h1.91l1.72-2.3a3.84 3.84 0 0 1 3.06-1.53h4.07a3.84 3.84 0 0 1 2.26.76l4.19 3.09.93.23A3.81 3.81 0 0 1 22.5 15v.84h-3.83"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3.37 11.06-.96-3.82H.5M18.67 11.07h-7.65"
  }));
};

const SvgSportsShoe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 15.8H3.41a1.91 1.91 0 0 1-1.91-1.91V6.48A1.18 1.18 0 0 1 2.69 5.3a1.22 1.22 0 0 1 1 .55c1.47 2.15 6.4 1.22 6.4-.55l9.81 4.52a4.49 4.49 0 0 1 2.6 4.07 1.91 1.91 0 0 1-1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.89v1.91a3.82 3.82 0 0 1-3.82 3.81H3.41A1.9 1.9 0 0 1 1.5 17.7v-3.81M9.14 3.39l.95 1.91M12 10.07l1.91-2.87M14.86 11.98l1.91-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSpotify = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.8 9.28a11 11 0 0 1 12.4 0M6.75 13.06a10.34 10.34 0 0 1 10.5 0M7.7 16.84a10.11 10.11 0 0 1 8.6 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSquareCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 1.46h5.75v6.71H9.13zM18.71 1.46h4.79M18.71 8.17h4.79M.5 1.46h4.79M.5 8.17h4.79M.5 15.83h23M.5 22.54h12.46"
  }));
};

const SvgSquareLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 1.46h6.71v6.71H1.46zM11.04 1.46H23.5M11.04 8.17H23.5M.5 15.83h23M.5 22.54h12.46"
  }));
};

const SvgSquareMirror = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36zM12.95 7.23l-5.72 5.72M13.91 12l-3.34 3.34"
  }));
};

const SvgSquareRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 1.46h6.71v6.71h-6.71zM12 1.46H.5M12 8.17H.5M.5 15.83h23M.5 22.54h12.46"
  }));
};

const SvgStBasi = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 7.67c0 2.38-2.57 4.33-5.74 4.33s-5.74-1.95-5.74-4.33C6.26 3.94 12 2.8 12 .5c0 2.3 5.74 3.44 5.74 7.17Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.72 5.16c.8-.58 1.45-1.12 1.45-1.79 0 1.72 4.35 2.58 4.35 5.38 0 1.78-1.95 3.23-4.35 3.23a5.22 5.22 0 0 1-2.85-.8M7.26 5.2c-.84-.6-1.53-1.14-1.53-1.83 0 1.72-4.34 2.63-4.34 5.38 0 1.78 1.94 3.25 4.34 3.25a5.37 5.37 0 0 0 2.9-.82M23.48 11.98H.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 11.98h19.13V22.5H2.43zM.52 22.5h22.96"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 15.8a2.87 2.87 0 0 1 2.87 2.87v3.83H9.13v-3.83A2.87 2.87 0 0 1 12 15.8ZM17.74 14.85v1.91M17.74 17.72v1.91M6.26 14.85v1.91M6.26 17.72v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStairsUpDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 21.57v-4.79h3.82V12h4.79V7.22h4.78V2.44h4.78v19.13H.5"
  }));
};

const SvgStairs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 1.5v5.73h-5.73V12H6.27v4.77H1.5v5.73h21v-21h-5.73z"
  }));
};

const SvgStamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M6.27 19.64h11.46M6.27 22.5h11.46M14.74 14.86l-.83-6.25a3.82 3.82 0 1 0-3.82 0l-.83 6.25h-.12a3.82 3.82 0 0 0-3.82 3.82v1h13.36v-1a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgStandCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.22,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 7.24h8.61v5.74H6.26z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.87 9.15 2.87-1.91h.96v5.74h-.96l-2.87-1.92V9.15zM11.04 23.5V12.98M11.04 12.98l5.74 9.56v.96M11.04 12.98 5.3 22.54v.96"
  }));
};

const SvgStandingClock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a5.73 5.73 0 0 1 5.73 5.73V22.5H6.27V7.23A5.73 5.73 0 0 1 12 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 7.23H12V3.41"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 12.95v3.82M20.59 22.5H3.41"
  }));
};

const SvgStapler = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 4.36h15.28a2.86 2.86 0 0 1 2.86 2.87v1h0-21 0v-1a2.86 2.86 0 0 1 2.86-2.87ZM1.5 15.82h21v1.91a1.91 1.91 0 0 1-1.91 1.91H3.41a1.91 1.91 0 0 1-1.91-1.91v-1.91h0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 8.18H3.41V12h11.45a3.82 3.82 0 0 0 3.82 3.82h0A3.82 3.82 0 0 0 22.5 12V8.18ZM3.41 12.95V12M19.64 12h0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarAward = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.07 18.78h3.86a2.9 2.9 0 0 1 2.9 2.9v1H7.17v-1a2.9 2.9 0 0 1 2.9-2.9ZM12 2.64l1.49 3.02 3.34.48-2.42 2.36.57 3.32L12 10.25l-2.98 1.57.57-3.32-2.42-2.36 3.34-.48L12 2.64zM12 18.78v-8.69M18.76 22.64H5.24",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarBookmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.62 22 12 18.19 4.38 22V2h15.24v20z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 7.84.59 1.19 1.31.19-.95.93.23 1.31-1.18-.62-1.18.62.23-1.31-.95-.93 1.31-.19.59-1.19z"
  }));
};

const SvgStarChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 6.25 1.18 2.51 2.64.41-1.91 1.95.45 2.77L12 12.58l-2.36 1.31.45-2.77-1.91-1.95 2.64-.41L12 6.25z"
  }));
};

const SvgStarClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 10.09 1.18 2.52 2.64.4-1.91 1.95.45 2.77L12 16.42l-2.36 1.31.45-2.77-1.91-1.95 2.64-.4L12 10.09z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarCommentRating = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 9.14.59 1.25 1.32.21-.95.97.22 1.39L12 12.3l-1.18.66.22-1.39-.95-.97 1.32-.21.59-1.25zM17.73 9.14l.59 1.25 1.32.21-.96.97.23 1.39-1.18-.66-1.18.66.22-1.39-.95-.97 1.32-.21.59-1.25zM6.27 9.14l.59 1.25 1.32.21-.95.97.22 1.39-1.18-.66-1.18.66.23-1.39-.96-.97 1.32-.21.59-1.25z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 8.18v5.73a1.91 1.91 0 0 0 1.91 1.91h6.68L12 17.73l1.91-1.91h6.68a1.91 1.91 0 0 0 1.91-1.91V8.18a1.91 1.91 0 0 0-1.91-1.91H3.41A1.91 1.91 0 0 0 1.5 8.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 6.25 1.18 2.51 2.64.41-1.91 1.95.45 2.77L12 12.58l-2.36 1.31.45-2.77-1.91-1.95 2.64-.41L12 6.25z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarDecor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 2.49 3.51 5.68L22 9.76l-4.32 5.09.5 6.66L12 18.98l-6.18 2.53.5-6.66L2 9.76l6.49-1.59L12 2.49zM12 19v-.02M12 13V2.49M18.18 21.51 12 13M12 13l-6.18 8.51M22 9.75 12 13M12 13 2 9.75"
  }));
};

const SvgStarDecoration = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 13.86 19.64 11h-4.78V6.23L12 8.14 9.14 6.23V11H4.36l1.91 2.86-1.91 2.87h4.78v4.77L12 19.59l2.86 1.91v-4.77h4.78l-1.91-2.87zM9.14 13.86h5.72M12 11v5.73M12 .5v7.64"
  }));
};

const SvgStarEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 2.48 1.18 2.51 2.64.4-1.91 1.96.45 2.76L12 8.81l-2.36 1.3.45-2.76-1.91-1.96 2.64-.4L12 2.48z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.25h3.91v15.27h-21V7.25h3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.25 12 17.75l10.5-10.5M9.14 14.89 1.5 22.52M22.5 22.52l-7.64-7.63"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.59 7.25h3.91v15.27h-21V7.25h3.91"
  }));
};

const SvgStarFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 10.09 1.18 2.52 2.64.4-1.91 1.95.45 2.77L12 16.42l-2.36 1.31.45-2.77-1.91-1.95 2.64-.4L12 10.09z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgStarFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 11.04 1.18 2.52 2.64.4-1.91 1.96.45 2.76-2.36-1.3-2.36 1.3.45-2.76-1.91-1.96 2.64-.4L12 11.04z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m12 8.2 1.17 2.5 2.63.4-1.9 1.95.45 2.75L12 14.5l-2.35 1.3.45-2.75-1.9-1.95 2.63-.4L12 8.2z"
  }));
};

const SvgStarMessages = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m14.86 8.73.89 1.89 1.98.3-1.43 1.47.33 2.07-1.77-.98-1.77.98.34-2.07L12 10.92l1.98-.3.88-1.89z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStarOrnament = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.85,
    r: 7.65,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M12 11.02l1.26 2.04 2.32.56-1.54 1.83.17 2.39-2.21-.91-2.21.91.17-2.39-1.54-1.83 2.32-.56L12 11.02z"
  }));
};

const SvgStarSquare = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 7.46 1.47 2.99 3.3.48-2.38 2.33.56 3.28L12 14.99l-2.95 1.55.56-3.28-2.38-2.33 3.3-.48L12 7.46z"
  }));
};

const SvgStarTicketCoupon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 7.23v9.54M22.5 16.77a2.86 2.86 0 0 0-2.86 2.87H4.36a2.86 2.86 0 0 0-2.86-2.87V7.23a2.86 2.86 0 0 0 2.86-2.87h15.28a2.86 2.86 0 0 0 2.86 2.87"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: `${props.color? props.color: "#000"}`
    },
    d: "m15.34 8.18 1.03 2.2 2.31.35-1.67 1.72.4 2.41-2.07-1.14-2.06 1.14.39-2.41L12 10.73l2.31-.35 1.03-2.2z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 8.18h1.91M7.23 12h1.91M7.23 15.82h1.91"
  }));
};

const SvgStarTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 10a2.82 2.82 0 0 0-.84 2 2.86 2.86 0 0 0 2.86 2.86v4.78h-21v-4.78a2.82 2.82 0 0 0 2-.84 2.85 2.85 0 0 0 0-4 2.82 2.82 0 0 0-2-.84V4.36h21v4.78a2.82 2.82 0 0 0-2.02.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 10.18.59 1.2 1.32.19-.95.93.22 1.32L12 13.2l-1.18.62.22-1.32-.95-.93 1.32-.19.59-1.2z"
  }));
};

const SvgStarTopper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 1.72 2.53 4.08 4.66 1.14-3.1 3.67.35 4.79L12 13.58 7.56 15.4l.36-4.79-3.11-3.67L9.47 5.8 12 1.72z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.53 14.21 15 22.28H9l1.47-8.07"
  }));
};

const SvgStar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 2.78 2.94 5.95 6.56.95-4.75 4.63 1.12 6.54L12 17.77l-5.87 3.08 1.12-6.54L2.5 9.68l6.56-.95L12 2.78z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.25 11.04h6.65l-3.8 3.8h9.5"
  }));
};

const SvgStatistics = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.96 14.04 9 9l6 6 8-8M2.54 15.46 1 17"
  }));
};

const SvgSterlingCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "Pound coin"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 7.7a2.38 2.38 0 0 0-2.38-2.38h0a2.39 2.39 0 0 0-2.39 2.38v2.84a11.08 11.08 0 0 1-1.91 6.23h6.68M8.18 11.05H12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgSterlingSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 7.23v-1a4.78 4.78 0 0 0-4.77-4.73h0a4.77 4.77 0 0 0-4.77 4.77v10.38A4.77 4.77 0 0 1 7.78 20l-2.46 2.5h13.36M5.32 12h7.63",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgStethoscope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h2.87v6.68A4.77 4.77 0 0 1 6.27 13 4.77 4.77 0 0 1 1.5 8.18V1.5h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 13v5.73a3.82 3.82 0 0 0 3.82 3.82 3.82 3.82 0 0 0 3.82-3.82V13a2.86 2.86 0 0 1 2.86-2.86A2.87 2.87 0 0 1 19.64 13v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStocking = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 18.45a4 4 0 0 1-4 4.05 4.07 4.07 0 0 1-2.86-1.18L8 17.5a5.72 5.72 0 0 1-1.68-4.06V5.32h7.64v5.5a2.85 2.85 0 0 0 .84 2l2.75 2.75a4 4 0 0 1 1.13 2.88ZM5.32 1.5h9.55v3.82H5.32z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.27 9.14 1.27.95 1.27-.95 1.28.95 1.27-.95 1.27.95 1.28-.95M6.27 12.96l1.27.95 1.27-.95 1.28.95 1.27-.95 1.27.95 1.28-.95"
  }));
};

const SvgStockings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 2.45,
    y: 5.32,
    width: 11.45,
    height: 3.82,
    rx: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 18.45A4.05 4.05 0 0 1 8 21.32l-2.52-2.48a3.8 3.8 0 0 1-1.12-2.7v-7H12v4.77l1.68 1.68a4 4 0 0 1 1.1 2 4.56 4.56 0 0 1 .08.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 14.63a4 4 0 0 1-6.77 3 4 4 0 0 0-1.1-2L12 13.91V9.14h1a1 1 0 0 0 1-1V6.27a1 1 0 0 0-1-.95h5.73v4.77l1.68 1.68a4 4 0 0 1 1.14 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 9.14,
    y: 1.5,
    width: 11.45,
    height: 3.82,
    rx: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStomach = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.38.5v1a6.63 6.63 0 0 0 2 4.74 6.66 6.66 0 0 0 4.74 2h1v.95a4.63 4.63 0 0 1-1.35 3.27L8.4 13.69a3.71 3.71 0 0 0-.84 1.21 6.69 6.69 0 0 0-6.1 6.67v1.93",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.21.5v1a2.87 2.87 0 0 0 2.87 2.87h1.74a5.75 5.75 0 0 1 10.72 2.84V10a10.7 10.7 0 0 1-3.72 8.09 10.74 10.74 0 0 1-6.93 2.55h-.62a4 4 0 0 1-3.43-1.89 2.86 2.86 0 0 0-2.55 2.85v1.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.39 12.69c7.33-1.36 5.61 2.88 12.71.31",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStonehedge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.39 22.5H4.21a1.75 1.75 0 0 1-1.76-1.75v-8.91a1.75 1.75 0 0 1 1.76-1.75h1.56a1.76 1.76 0 0 1 1.72 1.44l1.62 8.91a1.55 1.55 0 0 1 0 .31 1.75 1.75 0 0 1-1.72 1.75ZM19.79 22.5h-3.18a1.75 1.75 0 0 1-1.75-1.75v-8.91a1.75 1.75 0 0 1 1.75-1.75h1.56a1.76 1.76 0 0 1 1.73 1.44l1.62 8.91a1.55 1.55 0 0 1 0 .31 1.75 1.75 0 0 1-1.73 1.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.92 10.09H7a2.68 2.68 0 0 1-2.64-2.67V5.73a2.68 2.68 0 0 1 2.3-2.65l10.88-1.55a2.34 2.34 0 0 1 .38 0 2.68 2.68 0 0 1 2.67 2.67v3.22a2.68 2.68 0 0 1-2.67 2.67ZM.55 22.5h22.9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.26,
    y: 1.5,
    width: 11.48,
    height: 4.78,
    rx: 2.1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 23.5V6.28M18.7 23.5 15.83 6.28M8.17 6.28 5.3 23.5M6.26 16.8h11.48M7.22 12.98h9.56"
  }));
};

const SvgStopCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 8.18h7.64v7.64H8.18z"
  }));
};

const SvgStop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 7.23h9.55v9.55H7.23z"
  }));
};

const SvgStopwatch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5h5.72"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.37 10.53a4.77 4.77 0 0 1-6.74 6.75M12 5.32V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 8.18v4.77M4.36 5.32l1.91 1.91M19.64 5.32l-1.91 1.91"
  }));
};

const SvgStorageCard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 10.09A1.92 1.92 0 0 0 22.5 12v6.68h-4.77v-3.82h-3.82v3.82H1.5V12a1.91 1.91 0 0 0 0-3.82V5.32h21v2.86a1.92 1.92 0 0 0-1.91 1.91ZM6.27 14.86v3.82M10.09 14.86v3.82M13.91 18.68v-3.82M17.73 18.68v-3.82M1.5 14.86h21M8.18 8.18V12M12 8.18V12M15.82 8.18V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStorage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 4.36,
    y: 16.77,
    width: 15.27,
    height: 5.73,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 18.68V3.41a1.91 1.91 0 0 0-1.91-1.91H6.27a1.91 1.91 0 0 0-1.91 1.91v15.27M13.91 19.64h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.23,
    cy: 19.64,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgStore = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 6.27v5.25a2.39 2.39 0 0 1-4.78 0l1.91-5.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.27v5.25a2.39 2.39 0 1 1-4.77 0V6.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 6.27v5.25a2.39 2.39 0 1 1-4.77 0V6.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 11.52a2.39 2.39 0 0 1-4.78 0V6.27h2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 13.91v8.59H4.36v-8.59h.48a2.39 2.39 0 0 0 2.39-2.39 2.39 2.39 0 1 0 4.77 0 2.39 2.39 0 1 0 4.77 0 2.39 2.39 0 0 0 2.39 2.39ZM1.5 22.5h21M6.27 1.5h11.45v4.77H6.27z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M8.18 17.73h7.64v4.77H8.18z"
  }));
};

const SvgStreaming = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.28 13.84a6.68 6.68 0 0 1 0-9.45M16.72 4.39a6.68 6.68 0 0 1 0 9.45M4.58 16.54a10.48 10.48 0 0 1 0-14.85M19.42 1.69a10.48 10.48 0 0 1 0 14.85M12 11a2.86 2.86 0 0 1 2.86 2.86 16.18 16.18 0 0 1-1.7 7.23l-.21.41h-1.9l-.21-.41a16.18 16.18 0 0 1-1.7-7.23A2.86 2.86 0 0 1 12 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStreetCone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 22.5H4.36l5.73-21h3.82l5.73 21zM1.5 22.5h21M8.18 9.14h7.64M6.27 15.82h11.46"
  }));
};

const SvgStreetDrill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 11.07H9.14L7.23 9.16V3.43a1.91 1.91 0 0 1 1.91-1.91h5.72a1.91 1.91 0 0 1 1.91 1.91v5.73ZM9.14 11.07h5.73V13A2.86 2.86 0 0 1 12 15.84 2.86 2.86 0 0 1 9.14 13v-1.93ZM12 23.48v-7.64M1.5 3.43h5.73M16.77 3.43h5.73M12 6.3v4.77M10.09 6.3h3.82M2.45 1.52v3.82M21.55 1.52v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrength = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.48 10.08a16.9 16.9 0 0 0 3.33 5.62",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.69 4.52a2.4 2.4 0 0 0-.18.89v4.65c0 3.82 2.86 12.41 5.73 12.41 5.5 0 9.5-4.94 11.33-7.71A4.77 4.77 0 1 0 13 10.09 14.12 14.12 0 0 0 10.09 12a4.9 4.9 0 0 0-1.28 3.7 8.07 8.07 0 0 0 .33 2",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 5.8,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 5.8,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStretcher = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.67 6.3h16.92a1.91 1.91 0 0 1 1.91 1.9v1.91h-21V8.47A2.17 2.17 0 0 1 3.67 6.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 19.66,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 19.66,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 10.11 6.97 18.7M17.03 18.7 4.36 10.11M15.82 3.43h5.73"
  }));
};

const SvgStringLights = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 7.21a35.46 35.46 0 0 0 23 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.88,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 9.13v3.83"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.67,
    cy: 13.92,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.67 8.17V12"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.33,
    cy: 13.92,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 8.17V12"
  }));
};

const SvgStrongRainNight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.11 7.31a5.72 5.72 0 0 1 5.67-4.89 4.57 4.57 0 0 1 .75.05A4.1 4.1 0 0 0 22.45 9a5.7 5.7 0 0 1-4.84 4.8",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.37 19.15A3.83 3.83 0 0 1 5.29 12a4.79 4.79 0 0 1 9.58 0 5 5 0 0 1-.09 1h.57a3.36 3.36 0 0 1 3.36 3.35 3.32 3.32 0 0 1-1.92 3M10.56 16.79l-2.4 4.79M14.39 16.79 12 21.58M6.75 16.76l-2.42 4.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongRain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.2 8.18h-.56a6 6 0 0 0 .09-.95 5.73 5.73 0 0 0-11.46 0 4.77 4.77 0 0 0 0 9.54H18.2a4.3 4.3 0 1 0 0-8.59ZM14.86 18.68l-1.91 3.82M19.64 18.68l-1.91 3.82M10.09 18.68 8.18 22.5M5.32 18.68 3.41 22.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongRainingDay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 20.07a3.83 3.83 0 0 1 1.92-7.14 4.78 4.78 0 0 1 9.56 0 5.9 5.9 0 0 1-.09 1h.57a3.34 3.34 0 0 1 1.43 6.36M10.59 17.72 8.2 22.5M14.41 17.72l-2.39 4.78M6.78 17.69 4.37 22.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.51 14.1a4.79 4.79 0 1 0-7-5.91M13.93.5v1.91M23.5 10.07h-1.91M20.7 3.3l-1.35 1.35M8.52 4.65 7.17 3.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindCloudDay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.46 16.79A3.82 3.82 0 0 1 5.29 13a4.8 4.8 0 0 1 9.59 0 5.13 5.13 0 0 1-.1 1h.57a3.34 3.34 0 0 1 1.44 6.37",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.49 14.13a4.8 4.8 0 1 0-7-5.92M13.92.5v1.92M23.5 10.08h-1.92M20.69 3.31l-1.35 1.35M8.5 4.66 7.14 3.31M12 21.58a1.92 1.92 0 0 1 1.92 1.92M3.38 21.58H12M7.21 16.79a1.92 1.92 0 1 1 1.91 1.92H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindCloudNight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.42 15.86A3.83 3.83 0 0 1 5.26 12a4.8 4.8 0 1 1 9.6 0 5 5 0 0 1-.1 1h.58a3.36 3.36 0 0 1 1.44 6.39M12 20.66a1.92 1.92 0 0 1 1.92 1.92M3.34 20.66h8.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.18 15.86a1.92 1.92 0 1 1 1.92 1.92H.45M11.09 7.32a5.74 5.74 0 0 1 5.68-4.9 6 6 0 0 1 .75.05 4.11 4.11 0 0 0 4.93 6.58 5.71 5.71 0 0 1-4.85 4.81",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 14.87h11a2.39 2.39 0 1 0-2.39-2.39M.5 18.7h8.61a1.91 1.91 0 1 1-1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.85 16.78h3.35a4.31 4.31 0 0 0 0-8.61h-.57a6 6 0 0 0 .09-1 5.74 5.74 0 1 0-11.48 0A4.78 4.78 0 0 0 1.46 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindHail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.89 6.74A4.31 4.31 0 1 1 18.2 11H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 7.22h7.65a2.87 2.87 0 1 0-2.87-2.87M.5 14.87h18.17a3.83 3.83 0 1 1 0 7.65M1.46 17.74v1.91M4.33 20.61v1.91M7.2 17.74v1.91M10.07 20.61v1.91M12.93 17.74v1.91M15.8 20.61v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindRainCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 14.89h11a2.39 2.39 0 1 0-2.39-2.39M.5 18.72h8.61a1.91 1.91 0 1 1-1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 12.5a4.3 4.3 0 0 0-4.3-4.3h-.57a6.12 6.12 0 0 0 .09-1 5.74 5.74 0 1 0-11.48 0A4.78 4.78 0 0 0 1.46 12M22.5 15.85v3.82M22.5 21.59v1.91M18.67 13.93v3.83M18.67 19.67v1.92M14.85 15.85v3.82M14.85 21.59v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWindRainDrop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.89 6.74A4.31 4.31 0 1 1 18.2 11H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 7.22h7.65a2.87 2.87 0 1 0-2.87-2.87M6.38 14.87h9.42A3.83 3.83 0 1 1 12 18.7M3.23 14.87H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.15 19.17a3.35 3.35 0 1 1-6.69 0c0-3.34 3.34-5.85 3.34-5.85s3.35 2.51 3.35 5.85Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgStrongWind = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.78 7a4.11 4.11 0 1 1 4.11 4.11H1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.83 7.43H8.3A2.74 2.74 0 1 0 5.57 4.7M4.65 14.74h11A3.65 3.65 0 1 1 12 18.39M1.91 18.39h7.31M1 14.74h1.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSubmarineTravel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 20.59h-2.48a17.44 17.44 0 0 1-10.89-3.82v-1.91a17.43 17.43 0 0 1 10.89-3.81h2.48a4.77 4.77 0 0 1 4.77 4.77 4.78 4.78 0 0 1-4.77 4.77ZM1.5 12.95v5.73M1.5 15.82h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 15.82,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.69 11.96 1.35-4.73h5.73l1.1 3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.88 11.89-3.61-1.8H4.36v11.46h1.91l3.61-1.81M16.77 2.46h-2.86v4.77"
  }));
};

const SvgSubmarine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 15.82a5.73 5.73 0 0 1-5.08 5.69 4.63 4.63 0 0 1-.65 0H14.4a19.48 19.48 0 0 1-6-1l-.44-.14A19.56 19.56 0 0 1 1.72 17l-.22-.18v-1.96l.22-.18a20 20 0 0 1 12.68-4.59h2.37a5.74 5.74 0 0 1 5.73 5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.92 11.19a19.53 19.53 0 0 0-6.2 3.49l-.22.18V9.14h1ZM7.92 20.45 2.45 22.5h-1v-5.73l.22.18a19.56 19.56 0 0 0 6.25 3.5ZM8.52 11l1.57-4.73h7.64l1.45 4.36M16.77 1.5h-2.86v4.77M11.05 15.82ZM16.77 15.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSuitcaseLuggage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 6.27,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 6.27H7.23l1.91-3.81h5.72l1.91 3.81zM6.27 9.14v12.41M17.73 9.14v12.41M12.28 16.33l-2.7-2.7 2.7-2.7 2.58.11.12 2.59-2.7 2.7zM14.86 6.27v4.78"
  }));
};

const SvgSuitcaseTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.55 1.5h1.9a1.9 1.9 0 0 1 1.91 1.91v15.27h19.09",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 8.18,
    width: 13.36,
    height: 10.5,
    rx: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 8.18h-7.64l1.1-3.82h5.45l1.09 3.82zM12 11.05v7.63M17.73 11.05v7.63"
  }));
};

const SvgSuitcase = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.14,
    width: 21,
    height: 11.45,
    rx: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 20.59V12M17.73 20.59V12M11 3.41h2a3.82 3.82 0 0 1 3.82 3.82v1.91H7.23V7.23A3.82 3.82 0 0 1 11 3.41Z"
  }));
};

const SvgSunMoon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.66 22a10.51 10.51 0 0 0 0-20",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSunOversea = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .48V2.4M22.54 11.02h-1.91M3.38 11.02H1.46M12 .48V2.4M22.54 11.02h-1.91M3.38 11.02H1.46M5.9 4.92 4.55 3.57M5.9 4.92 4.55 3.57M19.45 3.57 18.1 4.92M19.45 3.57 18.1 4.92M.5 14.85h23M2.42 18.69h19.16M5.29 22.52h13.42M16.27 14.85A5.66 5.66 0 0 0 17.75 11a5.75 5.75 0 0 0-11.5 0 5.66 5.66 0 0 0 1.48 3.83"
  }));
};

const SvgSunflower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 5.09v-.73A2.86 2.86 0 0 1 12 1.5a2.87 2.87 0 0 1 2.86 2.86v.73M9.14 18.91v.73a2.86 2.86 0 0 0 5.72 0v-.73M18.91 14.86h.73a2.86 2.86 0 0 0 0-5.72h-.73M5.09 14.86h-.73a2.86 2.86 0 1 1 0-5.72h.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 5.09v-.73A2.86 2.86 0 0 1 12 1.5a2.87 2.87 0 0 1 2.86 2.86v.73M9.14 18.91v.73a2.86 2.86 0 0 0 5.72 0v-.73M18.91 14.86h.73a2.86 2.86 0 0 0 0-5.72h-.73M5.09 14.86h-.73a2.86 2.86 0 1 1 0-5.72h.73M14.86 5.09l.52-.52a2.86 2.86 0 0 1 4.88 2 2.82 2.82 0 0 1-.83 2l-.52.52M5.09 14.86l-.52.52a2.86 2.86 0 0 0 4 4l.52-.52M14.86 18.91l.52.52a2.82 2.82 0 0 0 2 .83 2.86 2.86 0 0 0 2-4.88l-.52-.52M5.09 9.14l-.52-.52a2.86 2.86 0 0 1 4-4l.52.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m14.86 5.09.52-.52a2.86 2.86 0 0 1 4.88 2 2.82 2.82 0 0 1-.83 2l-.52.52M5.09 14.86l-.52.52a2.86 2.86 0 0 0 4 4l.52-.52M14.86 18.91l.52.52a2.82 2.82 0 0 0 2 .83 2.86 2.86 0 0 0 2-4.88l-.52-.52M5.09 9.14l-.52-.52a2.86 2.86 0 0 1 4-4l.52.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 6.27v11.46M13.91 6.27v11.46M17.73 10.09H6.27M17.73 13.91H6.27"
  }));
};

const SvgSunny = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v1.92M12 21.58v1.92M23.5 12h-1.92M2.42 12H.5M12 .5v1.92M12 21.58v1.92M23.5 12h-1.92M2.42 12H.5M20.13 3.87l-1.35 1.35M5.22 18.78l-1.35 1.35M20.13 20.13l-1.35-1.35M5.22 5.22 3.87 3.87M20.13 3.87l-1.35 1.35M5.22 18.78l-1.35 1.35M20.13 20.13l-1.35-1.35M5.22 5.22 3.87 3.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 6.71,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSunriseArrowUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v1.92M23.5 12h-1.92M2.42 12H.5M12 .5v1.92M23.5 12h-1.92M2.42 12H.5M20.13 3.87l-1.35 1.35M5.22 5.22 3.87 3.87M20.13 3.87l-1.35 1.35M5.22 5.22 3.87 3.87M23.5 15.83h-6A6.56 6.56 0 0 0 18.71 12a6.71 6.71 0 0 0-13.42 0 6.56 6.56 0 0 0 1.21 3.83h-6M9.13 19.67 12 16.79l2.88 2.88M12 23.5v-5.75"
  }));
};

const SvgSunrise = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .47v1.92M23.5 11.97h-1.92M2.42 11.97H.5M12 .47v1.92M23.5 11.97h-1.92M2.42 11.97H.5M20.13 3.84l-1.35 1.35M5.22 5.19 3.87 3.84M20.13 3.84l-1.35 1.35M5.22 5.19 3.87 3.84M16 17l1-1a5.58 5.58 0 0 0 1.71-4 6.71 6.71 0 1 0-13.42 0A6.57 6.57 0 0 0 7 16.38"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 16.28c1.44 0 1.44 1 2.87 1s1.44-1 2.88-1 1.43 1 2.87 1 1.44-1 2.87-1 1.44 1 2.88 1 1.43-1 2.87-1 1.44 1 2.88 1 1.44-1 2.88-1M3.37 22c1.44 0 1.44-1 2.88-1s1.43 1 2.87 1 1.44-1 2.87-1 1.44 1 2.88 1 1.43-1 2.87-1 1.44 1 2.88 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSunsetArrowDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .46v1.92M23.5 11.96h-1.92M2.42 11.96H.5M12 .46v1.92M23.5 11.96h-1.92M2.42 11.96H.5M20.13 3.83l-1.35 1.35M5.22 5.18 3.87 3.83M20.13 3.83l-1.35 1.35M5.22 5.18 3.87 3.83M23.5 15.79h-6A6.56 6.56 0 0 0 18.71 12a6.71 6.71 0 0 0-13.42 0 6.56 6.56 0 0 0 1.21 3.79h-6M14.88 18.67 12 21.54l-2.87-2.87M12 14.83v5.75"
  }));
};

const SvgSupplement = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 6.27h9.55v14.49A1.74 1.74 0 0 1 15 22.5H9a1.74 1.74 0 0 1-1.74-1.74V6.27h-.03ZM5.32 1.5h13.36v4.77H5.32z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 11.05h5.73v6.68h-5.73z"
  }));
};

const SvgSupportRibbon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17 1.5a2.12 2.12 0 0 1 0 3l-14 14 2 2 2 2L21.29 8.21A2.41 2.41 0 0 0 22 6.5a5 5 0 0 0-5-5Z",
    style: {
      strokeMiterlimit: 10,
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeMiterlimit: 10,
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    },
    d: "m16 13.5 5 5-4 4-5-5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m12 9.5-5-5a2.12 2.12 0 0 1 0-3 5 5 0 0 0-5 5 2.41 2.41 0 0 0 .71 1.71L8 13.5",
    style: {
      strokeLinejoin: 'bevel',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeMiterlimit: 10,
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    },
    d: "M7 1.5h10"
  }));
};

const SvgSurfboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m5 21 .43-1A1.09 1.09 0 0 0 4 18.54L3 19a1.08 1.08 0 0 1-1.48-1.29C2.3 15.17 4.13 12.19 7.3 9c5.51-5.51 12.46-9 14.58-6.91s-1.4 9.1-6.88 14.61c-3.16 3.17-6.14 5-8.65 5.75A1.08 1.08 0 0 1 5 21ZM18.81 5.19 8.06 15.94",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSurfingVan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 20.61H1.5v-5.68l.75-6a1.91 1.91 0 0 1 1.89-1.68h15.72a1.9 1.9 0 0 1 1.89 1.67l.75 6v5.72h-2.86M15.82 20.61H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 14.89v.95h-5.73v-4.77h5.25M6.27 11.07h10.5v4.77H6.27zM12 20.61v-9.54M20.59 2.48a18.66 18.66 0 0 1-5.88 1H3.41M14.86 3.43l1.91 3.82M8.18 3.43l1.91 3.82M6.27 3.43l-.95 1.91"
  }));
};

const SvgSushiRiceBall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.55 15.82c0 4.3-2.36 5.9-5.73 6.43a24.19 24.19 0 0 1-3.82.25 24.19 24.19 0 0 1-3.82-.25c-3.37-.53-5.73-2.13-5.73-6.43C2.45 10 6.73 1.5 12 1.5s9.55 8.5 9.55 14.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 14.86v7.39a24.19 24.19 0 0 1-3.82.25 24.19 24.19 0 0 1-3.82-.25v-7.39ZM6.27 10.09h1.91M11.05 7.23h1.9M13.91 11.05h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSushiRoll = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.19 13.16a4.21 4.21 0 0 1 .36 1.7 4.3 4.3 0 0 1-4.3 4.3H6.75a4.29 4.29 0 0 1-4.3-4.3 4.21 4.21 0 0 1 .36-1.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12.61c-2.72.24-5 .71-6.33.55C2 13.08 1.5 12.75 1.5 12c0-2 3.23-4.94 7.64-5.89M14.86 6.11C19.27 7.06 22.5 10 22.5 12c0 .75-.48 1.08-1.31 1.16-1.33.16-3.61-.31-6.33-.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10 4.84h4a.83.83 0 0 1 .83.83v13.49H9.14V5.67a.83.83 0 0 1 .86-.83ZM18.68 10.57V7.7M5.32 10.57V7.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSwimShorts = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h17.18v3.82H3.41zM20.59 5.32 22.5 22.5h-8.59l-.77-8.61A1.17 1.17 0 0 0 12 13a1.17 1.17 0 0 0-1.14.94l-.77 8.61H1.5L3.41 5.32ZM10.09 5.32l-.95 3.82M12.95 5.32l.96 3.82"
  }));
};

const SvgSwimmingPoolLadder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.33 3.76A1.84 1.84 0 0 0 17.5 1.9a1.84 1.84 0 0 0-1.83 1.86v12.8M12 3.76a1.84 1.84 0 0 0-1.83-1.86 1.85 1.85 0 0 0-1.84 1.86v12.8M8.33 6.48h7.34M8.33 11.06h7.34M1 5.56h4.58M18.42 5.56H23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1 14.73a3.44 3.44 0 0 0 5.5 0 3.43 3.43 0 0 0 5.49 0 3.42 3.42 0 0 0 5.49 0 3.43 3.43 0 0 0 5.49 0M1 20.23a3.44 3.44 0 0 0 5.5 0 3.43 3.43 0 0 0 5.49 0 3.42 3.42 0 0 0 5.49 0 3.43 3.43 0 0 0 5.49 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgSwimmingPool = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 4.36v-1A1.9 1.9 0 0 1 7.23 1.5a1.91 1.91 0 0 1 1.91 1.91V13M13 1.5a1.9 1.9 0 0 1 1.91 1.91V13M9.14 10.09h5.72M9.14 6.27h5.72",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 5.32h7.64V22.5h-21V5.32h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 14.86c1.75 0 1.75 1 3.5 1s1.75-1 3.5-1 1.75 1 3.5 1M10.09 18.68c1.75 0 1.75 1 3.5 1s1.75-1 3.5-1 1.75 1 3.5 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTableDining = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 4.35h17.25v3.83H3.38zM23.5 4.35H.5M3.38 20.65V8.19M20.63 20.65V8.19"
  }));
};

const SvgTableDrawers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 1.5h22.96M3.39 10.11h17.22v8.61H3.39zM4.35 23.5v-4.78M19.65 23.5v-4.78M10.09 13.93h3.82M3.39 1.5h17.22v8.61H3.39zM10.09 5.33h3.82"
  }));
};

const SvgTables = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 1.46H1.45v6.71H22.55V1.46h-6.72zM15.83 8.17h6.71v4.8h-6.71zM1.45 8.17h6.71v4.8H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.16 8.17h7.67v4.8H8.16z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.83 12.96h6.71v4.8h-6.71zM1.45 12.96h6.71v4.8H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.16 12.96h7.67v4.8H8.16zM15.83 17.76h6.71v4.8h-6.71zM1.45 17.76h6.71v4.8H1.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.16 17.76h7.67v4.8H8.16z"
  })));
};

const SvgTabletPen = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 19.64h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m22 22.5-.47-2.86a1 1 0 1 1 1.9 0L23 22.5a.49.49 0 0 1-1 0Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 1.5v18.14"
  }));
};

const SvgTablet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.41,
    y: 1.5,
    width: 17.18,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 19.64h1.9"
  }));
};

const SvgTaco = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 8.19h17.18a1.91 1.91 0 0 1 1.91 1.91A10.5 10.5 0 0 1 12 20.6 10.5 10.5 0 0 1 1.5 10.1a1.91 1.91 0 0 1 1.91-1.91Z",
    transform: "rotate(180 12 14.395)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.46 14.22c.24-.89-.55-4.13-.1-4.92s2-.76 2.66-1.41.62-2.2 1.41-2.66 2.12.35 3 .11 1.62-1.6 2.56-1.6 1.69 1.36 2.56 1.6 2.22-.56 3-.11.76 2 1.41 2.66 2.2.62 2.66 1.42-.34 4-.1 4.91M5.32 15.83l1.91 1.91M12.95 14.87v1.91M17.73 14.87v2.87M9.14 11.05l1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "price tag"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeMiterlimit: 10,
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    },
    d: "M3.41 1.5 1.5 3.41v7.63L12.96 22.5l9.54-9.54L11.04 1.5H3.41z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 6.27,
    r: 1.91,
    style: {
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`
    }
  })));
};

const SvgTajMahal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.61 12.94a4 4 0 0 0 2.14-3.36C17.75 5.85 12 4.7 12 2.4c0 2.3-5.75 3.45-5.75 7.18a4 4 0 0 0 2.14 3.36M6.25 22.52v-9.58h11.5v9.58M4.33 12.94h15.34M21.58 6.23v16.29M2.42 6.23v16.29M.5 22.52h23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 18.69a1 1 0 0 1 1 1v2.88h-2v-2.92a1 1 0 0 1 1-.96ZM12 .48V2.4",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTank = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.59 19.64H4.5a2.86 2.86 0 0 1-3-2.7v-.33a2.86 2.86 0 0 1 3-2.7h13.09a2.86 2.86 0 0 1 3 2.7v.33a2.86 2.86 0 0 1-3 2.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.46 14.63V12l1.9-2.86h13.37L19.64 12v2.63M10.09 16.77H12M14.86 16.77h1.91M5.32 16.77h1.91M15.82 9.14H6.27l1.91-4.78h5.73l1.91 4.78zM14.86 6.27h7.64M22.5 4.36v3.82"
  }));
};

const SvgTapeMeasure = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 14.86a6.68 6.68 0 1 1-13.36 0A6.53 6.53 0 0 1 2.15 12a6.67 6.67 0 0 1 12.06 0 6.53 6.53 0 0 1 .65 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 14.86a2.87 2.87 0 1 1-5.73 0 2.77 2.77 0 0 1 .28-1.22 2.86 2.86 0 0 1 5.17 0 2.77 2.77 0 0 1 .28 1.22Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 2.45v5.73H8.18a6.66 6.66 0 0 0-6 3.82 6.53 6.53 0 0 0-.65 2.86V9.14a5 5 0 0 1 .08-1 6.66 6.66 0 0 1 6.6-5.73ZM18.68 2.45v3.82M14.86 2.45v2.87M11.05 2.45v3.82M7.23 2.45v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTape = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.24 12a7.6 7.6 0 1 1-.55-2.86 7.78 7.78 0 0 1 .55 2.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.62,
    cy: 12,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m21.05 7.24.95 1.9h-5.31a7.64 7.64 0 0 0-7.07-4.76H22Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgTargetBug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 9.58,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v4.79M12 18.71v4.79M23.5 12h-4.79M5.29 12H.5"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.08,
    y: 8.17,
    width: 3.83,
    height: 7.67,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.17 8.17 1.91.96M15.83 8.17l-1.91.96M8.17 15.83l1.91-.95M15.83 15.83l-1.91-.95M16.79 12h-2.87M7.21 12h2.87"
  }));
};

const SvgTargetBullseye = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 12,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 12,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 12h10.5M22.5 10.09 20.59 12M22.5 13.91 20.59 12"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 12,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTargetUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 9.58,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.75,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.12 16.79A2.87 2.87 0 0 1 12 13.92a2.87 2.87 0 0 1 2.88 2.87M12 .5v3.83M12 19.67v3.83M23.5 12h-3.83M4.33 12H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTarget = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 8.18V4.36M12 19.64v-3.82M8.18 12H4.36M19.64 12h-3.82"
  }));
};

const SvgTaxiFront = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 18.68h4.78v2.86a1 1 0 0 1-1 1H3.41a1 1 0 0 1-1-1v-2.86h.04ZM16.77 18.68h4.77v2.86a1 1 0 0 1-1 1h-2.81a1 1 0 0 1-1-1v-2.86h.04ZM5.32 11h13.36a3.82 3.82 0 0 1 3.82 3.82v3.82h-21v-3.78A3.82 3.82 0 0 1 5.32 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.29 4.36H7.71a1.91 1.91 0 0 0-1.83 1.39l-1.52 5.3h15.28l-1.52-5.3a1.91 1.91 0 0 0-1.83-1.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.84,
    cy: 15.34,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.16,
    cy: 15.34,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 15.82ZM22.5 9.14h-3.41M4.91 9.14H1.5M14.86 4.36H9.14l.95-2.86h3.82l.95 2.86z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTaxiService = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 18.7H8.18M18.68 18.7h3.82v-4.16a1.91 1.91 0 0 0-1.5-1.87l-2.32-.47a1.55 1.55 0 0 1-.51-.18 1.83 1.83 0 0 1-.82-.83l-.17-.35a4.8 4.8 0 0 0-4.31-2.64H9.16a5.7 5.7 0 0 0-5.27 3.57A1.92 1.92 0 0 1 2.12 13H1.5v5.7h2.86M18.13 12.02h-8.04"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 8.21H9.14l.95-3.82H12l.96 3.82z"
  }));
};

const SvgTaxi = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 6.25H8.18A1.93 1.93 0 0 0 6.65 7l-2.29 3.07L1.5 11v6.7h2.86a1.91 1.91 0 0 1 3.82 0h6.68a1.91 1.91 0 0 1 3.82 0h3.82v-4.43a1.91 1.91 0 0 0-1.2-1.77l-3.57-1.43L15.44 7a1.91 1.91 0 0 0-1.53-.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 17.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.1 11.02H7.23M20.59 14.84h1.91M12 3.39v2.86"
  }));
};

const SvgTeaCoffee = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.48 8.18H15.8v7.24a7.08 7.08 0 0 1-7.08 7.08h-.16a7.08 7.08 0 0 1-7.08-7.08V8.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 19.14,
    cy: 12.88,
    rx: 3.34,
    ry: 3.42,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 22.5h16.23M3.39 1.5c1.65 1.91-.7 2.86.95 4.77M8.16 1.5c1.65 1.91-.7 2.86.95 4.77M12.93 1.5c1.66 1.91-.7 2.86 1 4.77"
  }));
};

const SvgTeaMug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.69 4.5h15v12.19a2.81 2.81 0 0 1-2.81 2.81H4.5a2.81 2.81 0 0 1-2.81-2.81V4.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 16.69,
    y: 7.31,
    width: 5.62,
    height: 8.44,
    rx: 2.81,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.94 13.88H9.19v-3.75l1.87-.94 1.88.94v3.75zM11.06 4.5v4.69"
  }));
};

const SvgTeacherDesk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 8.18h17.18v11.45H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 12h9.55v3.82H7.23zM.55 8.18h22.9M3.41 22.5v-2.86M20.59 22.5v-2.86M5.32 1.5v6.68M8.18 4.36v3.82M2.45 2.45v5.73"
  }));
};

const SvgTeamGroup = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 8.18A2.86 2.86 0 0 1 12 5.32a2.86 2.86 0 0 1 2.86 2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 19.64a2.86 2.86 0 0 1 2.87-2.87 2.86 2.86 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 19.64a2.86 2.86 0 0 1 2.86-2.87 2.86 2.86 0 0 1 2.87 2.87M2.47 11.37a9.53 9.53 0 0 1 4.91-7.72M16.62 3.65a9.53 9.53 0 0 1 4.91 7.72M8.39 21.79a9.53 9.53 0 0 0 7.22 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTelephone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 1.5,
    width: 13.36,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 18.68h13.36"
  }));
};

const SvgTelescope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.89 11.04h4.77V5.32H7.21v5.72h2.86M3.39 6.27h3.82v3.82H3.39z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.48 4.36V12a3.82 3.82 0 0 1-3.82-3.82 3.82 3.82 0 0 1 3.82-3.82Z",
    transform: "rotate(180 20.57 8.18)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.66 2.45v11.46M11.98 1.5v3.82M10.07 1.5h3.82M.52 8.18h2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.98,
    cy: 11.05,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.75 22.5-4.04-9.7M11.24 12.8 7.2 22.5M5.3 22.5h4.77M13.89 22.5h4.77"
  }));
};

const SvgTerraceChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.61 7.24H3.39v-.96L12 1.5l8.61 4.78v.96zM12 7.24V23.5M15.83 23.5v-3.83h4.78v3.83M20.61 13.93v5.74M8.17 23.5v-3.83H3.39v3.83M3.39 13.93v5.74M6.26 15.85h11.48"
  }));
};

const SvgTerrace = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 1.5 22.5 3.41v2.86H.55M20.59 6.27V22.5M23.45 22.5H.55M4.36 12.96l.96 5.72v3.82M5.32 22.5v-3.82h3.82v3.82M9.14 15.82h7.63M12.95 22.5v-6.68"
  }));
};

const SvgTestChemical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14 2.52h-.5A12 12 0 0 0 1.61 12.9c-.61 4.81 2.72 9.42 7.56 9.62a8 8 0 0 0 5.47-14.13.49.49 0 0 1 .36-.87h.37a19.57 19.57 0 0 1 6.16 1l1-4a19 19 0 0 0-8.53-2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 12c8.65-2.86 8.65 2.87 16.23 0M5.32 14.89h1.91M8.18 18.71h1.91M12 16.8h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTestTubeContainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 14.86 1.5 19.64v2.86h21v-2.86l-1.91-4.78H3.41zM5.32 18.68h1.91M9.14 18.68h1.91M16.77 18.68h1.91M3.41 1.5h17.18v13.36H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 10.09V5.32h-3.82v4.77l-2.47 2.47a1.36 1.36 0 0 0-.39.95 1.34 1.34 0 0 0 1.35 1.35h6.84a1.34 1.34 0 0 0 1.35-1.35 1.36 1.36 0 0 0-.39-.95ZM8.18 5.32h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTestTubeExperiment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.46 20.35a2.16 2.16 0 0 1-4.31 0c0-1.44 2.15-3.59 2.15-3.59s2.16 2.15 2.16 3.59ZM.52 22.5h9.57M2.43 1.46h5.74V12a2.87 2.87 0 0 1-2.87 2.85A2.87 2.87 0 0 1 2.43 12V1.46ZM.52 1.46h9.57M2.43 6.24h5.74M8.17 4.33h15.31M19.65.5v22M15.83 22.5h7.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTestTubeLabs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.2 1.5h7.64M17.7 9.14l1-2.87-5.77-1.91V1.5H9.11v9.83A6.67 6.67 0 0 0 6.35 22.5h9.34a6.67 6.67 0 0 0-2.76-11.17V8.18ZM5.3 14.86h11.45M7.2 18.68h1.91M12.93 17.73h1.91"
  }));
};

const SvgTestTubeSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 1.5h9.54"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.87 17.25 1.65-.95M16.13 12.48l-1.65.95M16.13 17.25l-1.65-.95M7.87 12.48l1.65.95M12 10.09V12M12 19.64v-1.91M19.64 14.86a7.63 7.63 0 0 0-4.78-7.07V1.5H9.14v6.29a7.63 7.63 0 0 0 2.18 14.68h1.36a7.65 7.65 0 0 0 6.96-7.61Z"
  }));
};

const SvgTestTubeStand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 6.72V1.46H5.3v5.26a6.22 6.22 0 1 0 4.79 0ZM3.39 1.46H12M5.3 5.28h18.18M5.3 14.85h18.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 22.5h20.09V.5"
  }));
};

const SvgTestTubeTransfer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 16.77V13H4.36v3.82L2.09 19a2 2 0 0 0-.59 1.44 2 2 0 0 0 2 2H9a2 2 0 0 0 2-2 2 2 0 0 0-.6-1.44ZM2.45 12.95h7.64M20.59 15.39v-4.34h-3.82v4.34a3.82 3.82 0 1 0 3.82 0ZM22.5 11.05h-7.64M18.68 11.05V3.89A2.39 2.39 0 0 0 16.3 1.5a2.39 2.39 0 0 0-2.39 2.39v2.38A1.91 1.91 0 0 1 12 8.18a1.91 1.91 0 0 1-1.91-1.91v-.95a1.9 1.9 0 0 0-1.91-1.91 1.91 1.91 0 0 0-1.91 1.91v.95M5.32 9.14h1.91M14.86 17.73h4.78M2.45 18.68h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "test tube"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h7.64v17.18A3.82 3.82 0 0 1 12 22.5a3.82 3.82 0 0 1-3.82-3.82V1.5ZM5.32 1.5h13.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 8.18c3.82 0 3.82-1.91 7.64-1.91M10.09 12.95H12M12 17.73h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgTestTubesChemical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.43 1.5h8.59M17.75 9.14h3.82v11.45a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V9.14ZM15.84 9.14h7.64M10.11 10.57V1.5H5.34v9.07a6.21 6.21 0 1 0 4.77 0ZM2.48 13.91h10.5M8.2 18.68h1.91M4.39 16.77H6.3"
  }));
};

const SvgTestTubesLab = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.2 21.89a2.19 2.19 0 0 1-1.5.61h-9a2.19 2.19 0 0 1-2.2-2.17 2.19 2.19 0 0 1 .4-1.26L6.27 13V5.32h3.82V13l1.32 1.85M4.36 5.32H12M12.95 1.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 11.38V1.5h-3.82v9.88a5.73 5.73 0 1 0 3.82 0ZM4.36 15.82h3.82M12 14.86h6.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTestTubes = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "test tubes"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.5h7.64M12.95 1.5h7.64M5.32 1.5h3.82v15.27a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V1.5ZM.55 22.5h22.9M.55 6.27h22.9M14.86 1.5h3.82v15.27a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V1.5ZM1.5 6.27V22.5M22.5 6.27V22.5M5.32 10.09h3.82M14.86 12h3.82"
  })));
};

const SvgTestVial = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 1.5h3.82v12.41a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V1.5ZM3.41 1.5h7.64M14.86 1.5h3.82v12.41a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V1.5ZM12.95 1.5h7.64M14.86 5.32H9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 5.32h3.82V22.5h-21V5.32h3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 18.68h21v3.82h-21zM5.32 9.14h3.82M14.86 9.14h3.82"
  }));
};

const SvgTetris = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 11.04v5.73H7.23v-5.73H1.5V22.5h21V11.04h-5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 12 4.36)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14.55h5.73v7.64H9.14z"
  }));
};

const SvgTextDirectionLeft = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 1.5v14.32M15.82 1.5v14.32M19.64 1.5h-11a3.34 3.34 0 0 0-3.32 3.34 3.33 3.33 0 0 0 3.34 3.34h.54M18.68 14.86l3.82 3.82-3.82 3.82M1.5 18.68h21"
  }));
};

const SvgTextDirectionRight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.14 1.5v14.32M15.86 1.5v14.32M19.68 1.5H8.7a3.35 3.35 0 0 0-3.34 3.34A3.34 3.34 0 0 0 8.7 8.18h.54M6.32 22.5 2.5 18.68l3.82-3.82M23.5 18.68h-21"
  }));
};

const SvgTextSize = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 20.59V3.41M12.95 20.59h3.82M22.5 5.32V3.41H7.23v1.91M6.27 20.59V9.14M4.36 20.59h3.82M11.04 11.04v-1.9H1.5v1.9"
  }));
};

const SvgText = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-21M10.09 22.5h3.82M21.55 3.41V1.5H2.46v1.91"
  }));
};

const SvgTextbook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.39 1.5h18.14v21H3.39zM1.48 6.27H5.3M1.48 13.91H5.3M1.48 10.09H5.3M1.48 17.73H5.3"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.16 6.27h9.55v3.82H8.16zM7.2 13.91h11.46"
  }));
};

const SvgThaiLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 20.59h-21v-.95l1.91-2.87h17.18l1.91 2.87v.95zM18.68 16.77H5.32v-.95l1.91-2.86h9.54l1.91 2.86v.95zM8.18 6.27h7.64v6.68H8.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 9.14a1 1 0 0 1 1 1V13h-2v-2.91a1 1 0 0 1 1-.95Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 6.27h11.46M6.27 3.41h11.46M10.09 12.96h3.82l.95 7.63H9.14l.95-7.63z"
  }));
};

const SvgThermometerAlert = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 16.18V4.36a2.87 2.87 0 0 0-5.73 0v11.82a3.81 3.81 0 1 0 6.69 2.5 3.77 3.77 0 0 0-.96-2.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 6.27v11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 7.23,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.77 3.41v4.77M16.77 9.14v1.91"
  }));
};

const SvgThermometerMeasureTemp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.08,
    cy: 17.5,
    r: 0.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.75 14.78v-9.2a3.67 3.67 0 0 0-7.33 0v9.2a4.53 4.53 0 0 0-.92 2.72 4.59 4.59 0 0 0 9.17 0 4.53 4.53 0 0 0-.92-2.72ZM11.08 5.58v11M14.75 6.5h2.75M14.75 10.17h2.75M14.75 13.83h2.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgThermometerTemp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m10.6 13.4-4.61 4.61M12.63 11.37l-1.35 1.35M22.5 4.87a3.37 3.37 0 0 0-5.76-2.38L6.27 13a4.77 4.77 0 1 0 4.78 4.78L21.51 7.26a3.38 3.38 0 0 0 .99-2.39ZM14.86 10.09 16.77 12M16.77 8.18l1.91 1.91M18.68 6.27l1.91 1.91"
  }));
};

const SvgThermometer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 6.27,
    y: 1.5,
    width: 11.45,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 4.36v12.41M10.09 6.27H12M10.09 10.09H12M10.09 13.91H12"
  }));
};

const SvgThreeFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.1 3.48a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9M13.9 4.43a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9M17.7 12a1.9 1.9 0 0 1 1.9-1.89A1.9 1.9 0 0 1 21.5 12v2.86a9.81 9.81 0 0 1-.71 3.66l-.48 1.22a9.81 9.81 0 0 0-.71 3.66M6.3 14.87V4.43a1.9 1.9 0 0 1 1.9-1.9 1.9 1.9 0 0 1 1.9 1.9V12M10.1 12.02V3.48M13.9 12.02V3.48M17.7 12.02V4.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.3 23.42A4.59 4.59 0 0 0 5 20.18l-1.39-1.34a3.81 3.81 0 0 1-1.11-2.69v-3.51a2.51 2.51 0 0 1 1.3-2.26 2.39 2.39 0 0 1 2.5.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgThreeLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 13h23M.5 7.25h23M.5 18.75h12.46"
  }));
};

const SvgThumbsDown = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 12h4.78l6.11 7.06a2 2 0 0 1 .61 1.43 2 2 0 0 0 2 2 2.74 2.74 0 0 0 2-.8 2.79 2.79 0 0 0 .8-1.95c0-2-2.87-5.86-2.87-5.86h6a2.61 2.61 0 0 0 2.57-2.58 2.94 2.94 0 0 0-.05-.51L20.89 3A1.91 1.91 0 0 0 19 1.48h-7.75a9.13 9.13 0 0 0-4 1 9.08 9.08 0 0 1-4.06 1H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgThumbsUp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 12h4.78l6.11-7.06A2 2 0 0 0 12 3.51a2 2 0 0 1 2-2 2.74 2.74 0 0 1 2 .8 2.79 2.79 0 0 1 .8 2c0 2-2.87 5.86-2.87 5.86h6a2.61 2.61 0 0 1 2.57 2.53 2.94 2.94 0 0 1-.05.51L20.89 21A1.91 1.91 0 0 1 19 22.52h-7.75a9.13 9.13 0 0 1-4-.95 9.08 9.08 0 0 0-4.06-1H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTicketCheck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h4.78v21h-4.78a2.86 2.86 0 0 0-5.72 0H4.36v-21h10.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 11.04 2.86 2.87 5.73-5.73"
  }));
};

const SvgTicketCoupon = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 4.36v15.28h-21v-4.78a2.86 2.86 0 0 0 0-5.72V4.36Z",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 8.18ZM19.64 12ZM8.18 8.18h1.91M8.18 12h1.91M8.18 15.82h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTicketPlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.48 10a2.82 2.82 0 0 0-.84 2 2.86 2.86 0 0 0 2.86 2.86v4.78h-21v-4.78a2.82 2.82 0 0 0 2-.84 2.85 2.85 0 0 0 0-4 2.82 2.82 0 0 0-2-.84V4.36h21v4.78a2.82 2.82 0 0 0-2.02.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 14.86V9.14L14.86 12l-5.72 2.86z"
  }));
};

const SvgTicketPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.92 21.5v-.95a2.87 2.87 0 0 0-.83-2 2.85 2.85 0 0 0-4 0 2.87 2.87 0 0 0-.83 2H3.5V1.61h15.16v14.21M15.82 20.55h5.68M18.66 17.71v5.68",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTicketStar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h4.78v21h-4.78a2.86 2.86 0 0 0-5.72 0H4.36v-21h10.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 8.31.59 1.19 1.32.19-.95.93.22 1.32-1.18-.62-1.18.62.22-1.32-.95-.93 1.32-.19.59-1.19z"
  }));
};

const SvgTicketXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h4.78v21h-4.78a2.86 2.86 0 0 0-5.72 0H4.36v-21h10.5ZM9.14 14.86l5.72-5.72M14.86 14.86 9.14 9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h4.78v21h-4.78a2.86 2.86 0 0 0-5.72 0H4.36v-21h10.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 8.18,
    height: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 12,
    y: 8.18,
    height: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 15.82,
    y: 8.18,
    height: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 3.79v.09a2.38 2.38 0 0 1-.25 1l-.8 1.57a3.24 3.24 0 0 1-.49.7 3.1 3.1 0 0 1-4.56 0 3.17 3.17 0 0 1-.48-.71l-.82-1.63a2.35 2.35 0 0 1-.24-1 2.29 2.29 0 0 1 2.29-2.31h3.06a2.3 2.3 0 0 1 2.29 2.29Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 19.64 12 22.5l-4.77-2.86L9.72 7.17a3.1 3.1 0 0 0 4.56 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgTiktok = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.94 1.61v14.17a2.83 2.83 0 0 1-2.83 2.83 2.83 2.83 0 0 1-2.83-2.83 2.84 2.84 0 0 1 2.83-2.84V9.17a6.61 6.61 0 0 0-6.61 6.61 6.61 6.61 0 0 0 6.61 6.61 6.61 6.61 0 0 0 6.61-6.61V9.17l.2.1a8.08 8.08 0 0 0 3.58.84V6.33h-.11a4.84 4.84 0 0 1-3.67-4.7h-3.78Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTimeMovie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 5.29h1.92M4.33 5.29h1.92M8.17 5.29h1.91M12 5.29h1.92M15.83 5.29h1.92M19.67 5.29h1.91M.5 19.67h9.58M.5 15.83h1.92M4.33 15.83h1.92M8.17 15.83h1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.75,
    cy: 17.75,
    r: 4.79,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.63 17.75h-2.88v-2.87"
  }));
};

const SvgTimerMovie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 1.46h23M.5 5.29h1.92M4.33 5.29h1.92M8.17 5.29h1.91M12 5.29h1.92M15.83 5.29h1.92M19.67 5.29h1.91M.5 19.67h13.42M.5 15.83h1.92M4.33 15.83h1.92M8.17 15.83h1.91M12 15.83h1.92M21.58 22.54h-5.75v-1.76a4.2 4.2 0 0 1 2.88-4 4.2 4.2 0 0 1 2.87 4Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.83 11h5.75v1.8a4.2 4.2 0 0 1-2.87 4 4.2 4.2 0 0 1-2.88-4ZM13.92 11.04h9.58M13.92 22.54h9.58",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTimer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 12.95,
    r: 9.55,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.11,
    cy: 3.89,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17.73 19.64-1.96-1.96M6.32 8.23 4.36 6.27M6.32 17.68l-1.96 1.96M17.73 6.27l-1.96 1.96M8.18 15.82l5.73-5.73"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 11.05,
    cy: 12.95,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTinCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36z"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 12,
    rx: 3.82,
    ry: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 1.5h19.1M2.45 22.5h19.1M4.36 6.27h15.27v11.45H4.36z"
  }));
};

const SvgTinder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 2.16s8 3.58 8 10.73-4.47 9-8.95 9a8 8 0 0 1-8-8 9.68 9.68 0 0 1 3.53-7.26 5.91 5.91 0 0 0 1.79 3.58A8 8 0 0 0 12 2.16Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToastBreadLoaf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.82 8.26a2.76 2.76 0 0 1-.94 2.09v8.27A1.88 1.88 0 0 1 12 20.5H4.47a1.89 1.89 0 0 1-1.88-1.88v-8.27a2.76 2.76 0 0 1-.94-2.09A3.76 3.76 0 0 1 5.41 4.5h5.65a3.61 3.61 0 0 1 .94.12 3.75 3.75 0 0 1 2.82 3.64Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.35 8.26a2.76 2.76 0 0 1-.94 2.09v8.27a1.89 1.89 0 0 1-1.88 1.88H12a1.88 1.88 0 0 0 1.88-1.88v-8.27a2.76 2.76 0 0 0 .94-2.09A3.75 3.75 0 0 0 12 4.62a3.61 3.61 0 0 0-.94-.12h7.53a3.76 3.76 0 0 1 3.76 3.76ZM5.41 16.74h1.88M9.18 12.97h1.88M5.41 9.21h1.88",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToastBread = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.17 1.5H8.83a6.38 6.38 0 0 0-6.38 6.37v.45a2.73 2.73 0 0 0 1.91 2.59v9.6a2 2 0 0 0 2 2h11.3a2 2 0 0 0 2-2v-9.6a2.73 2.73 0 0 0 1.91-2.59v-.45a6.38 6.38 0 0 0-6.4-6.37ZM8.18 16.77h1.91M10.09 12.95H12M13.91 5.32h1.91M14.86 9.14h1.91M14.86 15.82h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToiletBathroom = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 11h11.46v1a5.65 5.65 0 0 1-5.65 5.65h-.16A5.65 5.65 0 0 1 6.27 12v-1ZM19.64 11.05H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.9 16.97.92 5.53H8.18l.92-5.53"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 7.23,
    y: 1.5,
    width: 9.55,
    height: 9.55,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 4.36h1.91M12.95 4.36h1.91M.55 22.5h22.9"
  }));
};

const SvgToiletPaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 6.27,
    cy: 9.14,
    rx: 4.77,
    ry: 7.64,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 6.27,
    cy: 9.14,
    rx: 0.95,
    ry: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 16.77h11.46c2.63 0 4.77-3.41 4.77-7.63S20.36 1.5 17.73 1.5H6.27",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 16.77v5.73H1.5V10.09"
  }));
};

const SvgToilet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 3.43,
    y: 1.5,
    width: 6.68,
    height: 10.5,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.34 12v10.5h9.55l-1-3.82A6.68 6.68 0 0 0 20.61 12H5.34ZM10.11 9.14h11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTongue = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a6.68 6.68 0 0 1-6.68-6.68v-5.73a1.91 1.91 0 0 1 1.91-1.91h2.86A1.91 1.91 0 0 1 12 10.09a1.91 1.91 0 0 1 1.91-1.91h2.86a1.91 1.91 0 0 1 1.91 1.91v5.73A6.68 6.68 0 0 1 12 22.5ZM12 18.68v-8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 10.09A3.82 3.82 0 0 1 1.5 6.27 4.78 4.78 0 0 1 6.27 1.5h11.46a4.78 4.78 0 0 1 4.77 4.77 3.82 3.82 0 0 1-3.82 3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToolNail = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.29 1.5v1a3.82 3.82 0 0 1 3.81 3.76v12.38L12 21.5l1.9-2.86V6.26a3.82 3.82 0 0 1 3.81-3.81v-1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToolbox = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h21V22.5h-21zM3.89 1.5a2.39 2.39 0 0 1 2.38 2.39v5.25H1.5V3.89A2.39 2.39 0 0 1 3.89 1.5ZM20.11 1.5a2.39 2.39 0 0 1 2.39 2.39v5.25h-4.77V3.89a2.39 2.39 0 0 1 2.38-2.39ZM4.36 5.32h15.28"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 8.18,
    y: 12.95,
    width: 7.64,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTools = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.08 17.6H6.4v2.33a2.33 2.33 0 0 1-2.33 2.33 2.33 2.33 0 0 1-2.33-2.33 2.33 2.33 0 0 1 2.34-2.33ZM17.59 9.2l-2.82.03.05-2.79 4.16-4.17 2.77 2.77-4.16 4.16zM14.77 9.23 6.4 17.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgToothBrushPaste = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(180 16.315 3.375)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.92 1.46h4.79v3.83h-4.79z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.54h8.62v-1.91l-.84-13.54a1.92 1.92 0 0 0-1.91-1.8h-3.11a1.92 1.92 0 0 0-1.91 1.8L12 20.62ZM3.38.5v8.63l2.87 6.7v7.67",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 1.46h4.79v6.71H3.38z"
  }));
};

const SvgTooth = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 8.18A6.68 6.68 0 0 1 12 2.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 8.18A6.69 6.69 0 0 0 9.78 5.31M22.5 8.18V9.6a17.35 17.35 0 0 1-1.32 6.63 17.27 17.27 0 0 1-3.75 5.61 2.25 2.25 0 0 1-3.82-1.25L13 16.54a1 1 0 0 0-2 0l-.62 4.05a2.25 2.25 0 0 1-3.82 1.25A17.27 17.27 0 0 1 1.5 9.6V8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTopTower = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 23.5V12.96h15.34V23.5"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.33 12.96h3.83v4.79H4.33zM15.83 12.96h3.83v4.79h-3.83zM6.25 9.13h11.5v3.83H6.25zM8.17 5.29h7.67v3.83H8.17zM12 .5v4.79M8.17 20.63v2.87M12 20.63v2.87M15.83 20.63v2.87"
  }));
};

const SvgTopVerticalLayout = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(90 11.975 5.805)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.66-4.75h8.63v21.1H7.66z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 17.25 16.35)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.02 11.08h12.47v10.55H11.02z"
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 6.7 16.35)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.47 11.08h12.47v10.55H.47z"
  })));
};

const SvgTorch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m22.5 18.68-7.64-3.82V9.14l7.64-3.82v13.36zM22.5 3.41v17.18M3.41 9.14h11.45v5.73H3.41A1.91 1.91 0 0 1 1.5 13v-2a1.91 1.91 0 0 1 1.91-1.86ZM11.05 7.23v1.91"
  }));
};

const SvgTornadoWeather = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 12,
    cy: 4.39,
    rx: 10.5,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.59 6.65c-.78.45-1.23 1-1.23 1.55 0 1.16 1.81 2.15 4.42 2.6a19 19 0 0 0 3.22.27 13.93 13.93 0 0 0 6.32-1.26c.82-.46 1.31-1 1.31-1.61s-.45-1.1-1.23-1.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.32 9.81c1.38.52 2.26 1.32 2.26 2.21 0 1.3-1.86 2.39-4.41 2.74a11.51 11.51 0 0 1-1.79.13 12.37 12.37 0 0 1-3.25-.42c-1.77-.51-3-1.42-3-2.45a1.7 1.7 0 0 1 .6-1.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.18 14.76a1.44 1.44 0 0 1 .58 1.08c0 1.05-1.5 1.91-3.34 1.91s-3.34-.86-3.34-1.91a1.67 1.67 0 0 1 1-1.37M13.91 23.48c0-2.48-1.91-2.74-1.91-4.09s.33-1.64 1.91-1.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTornado = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 2.43H23.5M1.5 6.26h17.22M3.41 10.09h11.48M6.28 13.91H16.8M10.11 17.74h5.74M12.98 21.57h1.91"
  }));
};

const SvgTouchGesture = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m10.12 22.31-5-5a2 2 0 0 1-.58-1.41 2 2 0 0 1 .58-1.4 2 2 0 0 1 1.41-.59 2 2 0 0 1 1.4.59l1.3 1.29V6.48a1.94 1.94 0 0 1 1.71-2 1.89 1.89 0 0 1 2 1.86V12l5 .71a1.87 1.87 0 0 1 1.61 1.85 16.9 16.9 0 0 1-1.79 7.58l-.09.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12.94 10.67a4.55 4.55 0 0 0 1.44-1 4.69 4.69 0 1 0-6.64 0 4.59 4.59 0 0 0 1.45 1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTowelRack = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 6.25V4.34a1.92 1.92 0 0 0-1.91-1.91h9.54a1.92 1.92 0 0 1 1.91 1.91v1.91M1.5.52v5.73h7.64M22.5.52v5.73h-3.82M9.14 6.25v16.23h9.54V6.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 4.34v10.5H5.32V4.34a1.91 1.91 0 0 1 3.82 0ZM10.09 18.66h8.59",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTowel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.39 14.86h18.3c2.74-6.68-2.76-5.34 0-13.36H3.39a1.92 1.92 0 0 0-1.91 1.91v11.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16 14.86c2.71-6.68-2.8-5.34 0-13.36M12.14 14.86c2.75-6.68-2.76-5.34 0-13.36M3.39 18.68h16.22a1.91 1.91 0 0 1 1.91 1.91 1.9 1.9 0 0 1-1.91 1.91H.52M3.39 14.86a1.84 1.84 0 0 0-1.39.57 1.87 1.87 0 0 0-.56 1.34v-1.91M19.61 14.86H3.39M1.48 16.77a1.92 1.92 0 0 0 1.91 1.91h16.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTowerBridge = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 23.45V11.04h5.73v12.41M16.77 23.45V11.04h5.73v12.41M7.23 14.86h9.54M7.23 20.59 12 14.86M16.77 20.59 12 14.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 7.23h3.82v3.82H2.45zM17.73 7.23h3.82v3.82h-3.82zM3.41 6.27h1.91v.95H3.41zM18.68 6.27h1.91v.95h-1.91zM4.36.55v5.72M19.64.55v5.72"
  }));
};

const SvgTowerEiffel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.37A29.14 29.14 0 0 1 5.3 22.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.37a29.14 29.14 0 0 0 6.7 19.13M10.09 4.33h3.82M7.22 14.85h9.56",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 18.67h3.83a3.83 3.83 0 0 1 3.83 3.83H6.26a3.83 3.83 0 0 1 3.83-3.83ZM12 .5v3.83M2.43 22.5h19.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTowerLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.92 17.75v5.75M10.08 23.5v-5.75M5.29 23.5v-2.56a6.87 6.87 0 0 1 6.71-7 6.87 6.87 0 0 1 6.71 7v2.56"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.25 17.33v-2.45a5.74 5.74 0 0 1 9.81-4.07 5.69 5.69 0 0 1 1.69 4.07v2.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.17 10.6V9.12a3.83 3.83 0 1 1 7.66 0v1.48M12 .5v4.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 4.33h1.92v.96h-1.92z"
  }));
};

const SvgTowersLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.52 22.5h22.96M19.65 8.15v.96l-.95.95 2.87 6.7v5.74h-6.7V2.41h.96l3.82 5.74zM23.48 16.76h-8.61M14.87.5v1.91M4.35 8.15v.96l.95.95-2.86 6.7v5.74h6.69V2.41h-.96L4.35 8.15zM.52 16.76h8.61M9.13.5v1.91"
  }));
};

const SvgTractor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.24,
    cy: 17.74,
    r: 4.78,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.63,
    cy: 19.65,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.02 19.65h5.74M22.5 19.65V12l-9.56-2.87-.96-7.65H3.37v7.65l-1.91 1.91v6.7M14.85 1.48H.5M3.37 9.13h10.52"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 5.3h-1a1.92 1.92 0 0 0-1.91 1.92V11",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrainLocomotive = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11 8.18h8.59A2.86 2.86 0 0 1 22.5 11a2.86 2.86 0 0 1-2.86 2.86H11V8.18Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5H1.5v12.41h9.54V8.18L9.14 1.5zM1.5 20.59v-6.68h19.09l1.91 4.77v.96h-3.82M12.95 19.64H6.27"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 4.36h3.82v3.82h-3.82zM12 1.5H1.5M4.36 8.18h6.69"
  }));
};

const SvgTrainTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.17 1.5h7.65a3.83 3.83 0 0 1 3.83 3.83v9.57a1.91 1.91 0 0 1-1.91 1.91H6.26a1.91 1.91 0 0 1-1.91-1.91V5.33A3.83 3.83 0 0 1 8.17 1.5ZM8.17 16.8 5.3 23.5M15.83 16.8l2.87 6.7M6.26 20.63h11.48M19.65 11.07H4.35M7.22 13.93h1.91M14.87 13.93h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrainTransportation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.35 21.58a10.5 10.5 0 1 0-8.7 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 6.3h5.73a1.91 1.91 0 0 1 1.9 1.9v6.68H7.23V8.2a1.91 1.91 0 0 1 1.91-1.9ZM7.23 23.48l1.91-8.59M16.77 23.48l-1.91-8.59M15.5 17.75h-7M8.18 21.57h7.64M7.23 12.02h2.86M13.91 12.02h2.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrainTravel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 6.25h13.42a8.62 8.62 0 0 1 8.62 8.62 2.88 2.88 0 0 1-2.87 2.87H.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 12.96h-8.62V6.25M10.08 9.13v3.83H6.25V9.13M6.25 9.13v3.83H2.42V9.13M2.42 12.96H.5M17.75 17.75l1.92 3.83M13.92 17.75l1.91 3.83M10.08 17.75 12 21.58M6.25 17.75l1.92 3.83M2.42 17.75l1.91 3.83M.5 21.58h23M8.17 2.42l1.91 3.83M3.38 2.42h7.66"
  }));
};

const SvgTrainTunnel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.15 5.3v2.87H1.5V5.3a3.83 3.83 0 0 1 7.65 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.54 16.78a1.93 1.93 0 0 1-1.91 1.92H1.5V8.17h12.43a8.59 8.59 0 0 1 8.61 8.61Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 22.52h-22V18.7M22.33 14.87h-6.48A2.86 2.86 0 0 1 13 12V8.17h.95a8.61 8.61 0 0 1 8.38 6.7ZM9.15 11.04v2.87M5.33 11.04v2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.24,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 14.89,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.72,
    cy: 20.61,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrain = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.17 5.33h7.65A2.87 2.87 0 0 1 18.7 8.2v9.57H5.3V8.2a2.87 2.87 0 0 1 2.87-2.87ZM6.26 23.5l1.91-5.74M15.83 17.76l1.91 5.74M7.22 21.59h10.52M12 12.02V5.33M8.17 14.89h1.92M13.91 14.89h1.92M5.3 12.02h13.4M10.09 5.33V1.5M13.91 5.33V1.5M17.74 2.46l-.96-.96H7.22l-.96.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 1.5h3.83a2.87 2.87 0 0 1 2.87 2.87v4.78A4.78 4.78 0 0 1 12 13.93a4.78 4.78 0 0 1-4.78-4.78V4.37a2.87 2.87 0 0 1 2.87-2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 5.33h9.57a2.87 2.87 0 0 1-2.88 2.87h-3.82a2.87 2.87 0 0 1-2.87-2.87ZM3.39 23.5v-1A8.62 8.62 0 0 1 12 13.93a8.62 8.62 0 0 1 8.61 8.61v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 20.63,
    r: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 23.5v-2.87M7.22 13.94 12 19.67l4.78-5.73"
  }));
};

const SvgTramTransport = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 2a16.49 16.49 0 0 0-6.16 1.3A1.82 1.82 0 0 0 4.72 5v11.61a1.81 1.81 0 0 0 1.82 1.82h11a1.82 1.82 0 0 0 1.83-1.82V5a1.82 1.82 0 0 0-1.17-1.7A16.49 16.49 0 0 0 12 2Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.72 7.48h14.61v5.48H4.72z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 7.46,
    cy: 15.7,
    r: 0.91,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.59,
    cy: 15.7,
    r: 0.91,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.2 4.74h3.65M7.91 18.43 4.72 23M16.59 18.43 19.78 23M18.41 21.17H6.54"
  }));
};

const SvgTransferCloud = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M18.7 9.11h-1V7.2A5.75 5.75 0 0 0 12 1.44h-.21A5.75 5.75 0 0 0 7 4.41l-.13.26a6.5 6.5 0 0 0-.62 2.53A4.78 4.78 0 0 0 1.44 12a1.27 1.27 0 0 0 0 .2 4.8 4.8 0 0 0 4.78 4.6H18.7a3.83 3.83 0 0 0 2.72-1.13 3.9 3.9 0 0 0 1.11-2.45 2.26 2.26 0 0 0 0-.26 3.84 3.84 0 0 0-3.83-3.85ZM11.99 16.79v6.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.32 22.54h1.91a1.92 1.92 0 0 0 1.92-1.92v-3.83M15.83 16.79v3.83a1.91 1.91 0 0 0 1.91 1.92h1.92",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgTransportTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 19.64,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 19.64h2.86v-5.73L21 7.71a1.9 1.9 0 0 0-1.9-1.44h-3.28v13.37M8.18 19.64h7.64v-4.78H1.5v4.78h2.86M1.5 2.45h14.32v12.41H1.5z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 12h1.91l1.91 1.91h2.86"
  }));
};

const SvgTrashCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 22.5H5.32L4.36 9.14h15.28l-.96 13.36zM15.31 1.5H8.69A3.81 3.81 0 0 0 4.9 4.84l-.54 4.3h15.28l-.54-4.3a3.81 3.81 0 0 0-3.79-3.34Z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 1.5h5.73v3.82H9.14zM21.55 9.14H2.45M10.09 18.68h3.82"
  }));
};

const SvgTrash = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.88 22.5H7.12a1.9 1.9 0 0 1-1.9-1.8L4.36 5.32h15.28l-.86 15.38a1.9 1.9 0 0 1-1.9 1.8ZM2.45 5.32h19.1M10.09 1.5h3.82a1.91 1.91 0 0 1 1.91 1.91v1.91H8.18V3.41a1.91 1.91 0 0 1 1.91-1.91ZM12 8.18v11.46M15.82 8.18v11.46M8.18 8.18v11.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTravelBus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 20.59H1.5v-9.54a1.9 1.9 0 0 1 1.91-1.91h15.8a1.91 1.91 0 0 1 1.79 1.3l1.47 4.42v5.73h-2.83M15.82 20.59H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 14.86H4.36M12 12v2.86M16.77 12v2.86M7.23 12v2.86M6.11 1.5H16a2.7 2.7 0 0 1 2.7 2.7v1.12H3.41V4.2a2.7 2.7 0 0 1 2.7-2.7ZM7.23 1.5v3.82M11.05 1.5v3.82M14.86 1.5v3.82M1.5 5.32h19.09M4.36 9.14V5.32M17.73 9.14V5.32"
  }));
};

const SvgTravelCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.39 20.59H7.7M3.89 20.59H1.5v-6.68l.69-4.13a1.92 1.92 0 0 1 1.88-1.6h11.32a1.91 1.91 0 0 1 1.81 1.31l1.48 4.42 3.82 1.91v4.77h-4.3"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.3,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.8,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.68 13.91H4.36M12.95 10.09v3.82M7.23 10.09v3.82M5.32 1.5h8.59a2.86 2.86 0 0 1 2.86 2.86v1H2.45v-1A2.86 2.86 0 0 1 5.32 1.5ZM5.32 5.32v2.86M13.91 5.32v2.86"
  }));
};

const SvgTravelLuggage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 7.24A5.74 5.74 0 0 1 17.74 13v6.7a1.91 1.91 0 0 1-1.91 1.91H8.17a1.91 1.91 0 0 1-1.91-1.91V13A5.74 5.74 0 0 1 12 7.24ZM9.13 23.5v-1.91M14.87 23.5v-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.13 8.2V1.5h5.74v6.7M7.22 1.5h9.56M9.13 12.98h5.74M12.96 15.85v-2.87"
  }));
};

const SvgTreadmillRunning = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.16,
    cy: 3.41,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m3.43 9.14 1.91-2.87h7.64l1.91-2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.21 6.27-1.92 8.59H1.52M7.25 11.04l4.77 2.87v5.73"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.52,
    y: 18.68,
    width: 21,
    height: 3.82,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.7 9.14v9.54M23.48 5.32l-1.91 3.82h-5.73"
  }));
};

const SvgTreadmill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 15.8a6.68 6.68 0 0 1 6.68 6.68H1.5V15.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 22.48h13.36a1.93 1.93 0 0 0 1.91-1.91 1.92 1.92 0 0 0-1.91-1.91H6.99M7.26 7.58l-2.9.58V3.39L9.14 5.3a2.33 2.33 0 0 1-1.88 2.28ZM16.77 5.3H9.14M3.41.52l.95 2.87M4.36 7.2l-1.91 8.6",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTreeCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.43h21V7.2h-21zM1.5 7.2h21v15.27h-21zM6.27.52v3.82M17.73.52v3.82M12 .52v3.82M12 16.75v2.86"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 16.59h-3.82l1.91-2.7 1.91 2.7z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 14.84h-3.82L12 11.98l1.91 2.86zM12.96 11.98h-1.92l.96-.96.96.96z"
  }));
};

const SvgTreeLeafNature = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.65 8.67a1.43 1.43 0 0 0-1.43-1.43 1.43 1.43 0 0 1-1.44-1.44 4.3 4.3 0 0 0-4.3-4.3h-1a4.3 4.3 0 0 0-4.3 4.3 1.43 1.43 0 0 1-1.4 1.44 1.43 1.43 0 0 0-1.43 1.43 2 2 0 0 0 1.36 1.89l.37.13a1.66 1.66 0 0 1 1.14 1.58 1.66 1.66 0 0 1-1.67 1.66 1.47 1.47 0 0 0-1.36 2 4.42 4.42 0 0 0 4.11 2.79h7.4a4.42 4.42 0 0 0 4.11-2.78 1.47 1.47 0 0 0-1.36-2 1.66 1.66 0 0 1-1.67-1.66 1.66 1.66 0 0 1 1.14-1.58l.37-.13a2 2 0 0 0 1.36-1.9ZM12 6.28V23.5M9.13 8.2 12 10.11M9.13 13.93 12 15.85M12 12.98l2.87-2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTreeLight = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 12.93c0 4.23-2.57 9.57-5.74 9.57s-5.74-5.34-5.74-9.57S8.83 7.2 12 7.2s5.74 1.51 5.74 5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 8.23V3.37h7.66v4.86M12 .5v2.87M16.22 18.99l-9.18-1.72M17.48 15.39 6.27 13.3M17.64 11.61l-10.61-2"
  }));
};

const SvgTreeSnowglobe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 18.68h17.18v3.82H3.41z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a7.64 7.64 0 0 1 7.64 7.64v9.55H4.36V9.14A7.64 7.64 0 0 1 12 1.5ZM12 14.86v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 14.86H9.14L12 8.18l2.86 6.68zM9.14 5.32h1.91M14.86 6.27h1.91M6.27 10.09h1.91M15.82 11.05h1.91"
  }));
};

const SvgTree = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 5.32V22.5M15.82 22.5H8.18M9.14 10.09 12 12"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 6.68,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 7.23 12 10.09"
  }));
};

const SvgTriangleExclamation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.13 3.41h-.26a1.48 1.48 0 0 0-1.26.7L1.73 18.32a1.48 1.48 0 0 0-.23.79A1.48 1.48 0 0 0 3 20.59h18a1.48 1.48 0 0 0 1.48-1.48 1.48 1.48 0 0 0-.23-.79L13.39 4.11a1.48 1.48 0 0 0-1.26-.7ZM12 8.18v5.73M12 15.82v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTrimPathfinder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.11 8.17H22.5v14.39H8.11zM14.83 1.45h1.92M14.83 5.29h1.92M4.28 15.84H6.2M.44 15.84h1.92M.44 12h1.92M.44 8.17h1.92M.44 4.33h1.92M.44 1.45h1.92M3.32 1.45h1.92M7.16 1.45h1.91M10.99 1.45h1.92"
  })));
};

const SvgTropicalHoliday = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.45 22.5H.55M19.75 9.15l2.59-2.6-.68-.67a2.84 2.84 0 0 0-4.05 0 2.86 2.86 0 0 0 0 4.05"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m13.79 9.15-2.58-2.6.68-.67a2.86 2.86 0 0 1 4 4.05M16.77 12v10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 13h2.86v-1a2.86 2.86 0 0 0-2.86-2.86A2.86 2.86 0 0 0 16.77 12v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13h-2.86v-1a2.86 2.86 0 0 1 2.86-2.86A2.86 2.86 0 0 1 16.77 12v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTty = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 13.89h3.82M3.41 13.89h3.82M16.77 13.89h3.82M10.09 17.7h3.82M10.09 21.52h3.82M3.41 17.7h3.82M16.77 17.7h3.82M22.5 7c0-3.16-4.69-5.53-10.5-5.53S1.5 3.85 1.5 7v3.06h6.68V7.2a1.91 1.91 0 0 1 1.91-1.9h3.82a1.91 1.91 0 0 1 1.91 1.9v2.87h6.68Z"
  }));
};

const SvgTumblr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.21 1.79h4.65v5.57h4.64v3.71h-4.64v4.25a2.25 2.25 0 0 0 2.25 2.25 2.21 2.21 0 0 0 1-.24l1.38-.69v3.72l-1.35.9a5.74 5.74 0 0 1-3.16.95 5.7 5.7 0 0 1-5.7-5.7v-5.44H5.5V7.36A4.91 4.91 0 0 0 9.21 2.6Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTurkeyDinner = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.92 12.85a12.37 12.37 0 0 1 4.58 9.63H7.7a6.21 6.21 0 1 1 0-12.41h2.39a12.31 12.31 0 0 1 3.51.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m17.73 9.11.95 1-.46 1.85a7.36 7.36 0 0 1-1.92 3.4 2.71 2.71 0 0 1-3.82 0 2.69 2.69 0 0 1 0-3.82 7.24 7.24 0 0 1 3.39-1.92ZM21.55 6.25 18.2 9.59M20.59 5.3l1.91 1.9M5.32.52c0 1.12-1 1.12-1 2.23s1 1.11 1 2.23-1 1.11-1 2.22M11.05 1.48c0 1.11-1 1.11-1 2.22s1 1.12 1 2.23-1 1.11-1 2.23M16.77.52c0 1.12-.95 1.12-.95 2.23s.95 1.11.95 2.23-.95 1.11-.95 2.22",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTurkeyLeg = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 16.88,
    cy: 7.12,
    rx: 4.29,
    ry: 6.68,
    transform: "rotate(-45 16.879 7.119)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 16.88,
    cy: 7.12,
    rx: 0.48,
    ry: 0.95,
    transform: "rotate(-45 16.879 7.119)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m21.61 11.84-1.69 1.69a6.66 6.66 0 0 1-5.76 1.87 2.45 2.45 0 0 0-2.16.65l-.18.18a2.87 2.87 0 0 1-4.16-.11 3 3 0 0 1 .23-4.05L8 12a2.45 2.45 0 0 0 .6-2.16 6.66 6.66 0 0 1 1.87-5.76l1.69-1.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m9.8 17.07-.96.93a1.92 1.92 0 0 0-.53 1.89 2 2 0 0 1-.51 2 2 2 0 0 1-3.36-.85 2.21 2.21 0 0 0-1.5-1.5 2 2 0 0 1-.85-3.36 2 2 0 0 1 2-.51A1.92 1.92 0 0 0 6 15.16l1-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTurkey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.26 16.8h1.44a3.82 3.82 0 0 0 1.95-7.1 3.82 3.82 0 0 0-5-5.63 3.81 3.81 0 0 0-7.2 0 3.82 3.82 0 0 0-5.1 5.63 3.82 3.82 0 0 0 1.95 7.1h1.44",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.49 10.59a4.79 4.79 0 0 1 3.25 4.3c0 2.64-2.57 4.78-5.74 4.78s-5.74-2.14-5.74-4.78a4.79 4.79 0 0 1 3.25-4.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.15,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 23.5v-3.83M13.91 23.5v-3.83M12 14.89v-2.87"
  }));
};

const SvgTurnip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.77 17c-1.45 3-5 5.24-9.12 5.44h-1.3c-4.16-.2-7.67-2.4-9.12-5.44 3.21-1.37 5.06 1.39 9.27 1.66h1c4.21-.23 6.06-2.99 9.27-1.66Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.91a7.09 7.09 0 0 1-.73 3.09c-1.45 3-5 5.24-9.12 5.44h-1.3c-4.16-.2-7.67-2.4-9.12-5.44a7.09 7.09 0 0 1-.73-3.13C1.5 5.32 12 1.5 12 1.5s10.5 3.82 10.5 12.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTv = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 21.55v-4.78M7.23 21.55h9.54M1.5 2.45h21v15.27h-21z"
  }));
};

const SvgTwitch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 1.49H22.5V13.9l-5.73 5.73H12l-2.39 2.38H7.23v-2.38H1.5V4.35l1.91-2.86z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 4.35h14.32v8.59l-3.82 3.82h-4.78l-.95.96v-.96H5.32V4.35zM11.05 7.22v4.77M15.82 7.22v4.77"
  }));
};

const SvgTwitter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.5 17c-2.73-.52-4.33-1.56-5-3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.5 10c-1.15-1.92-1.7-5.38-1-6 3.1 2.5 6.12 4.09 9 4 0 0 0-5 4-5a4.38 4.38 0 0 1 3 1h3l-1 3a13.47 13.47 0 0 1-4 11c-5 5-13 4-16 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.5 14a7.57 7.57 0 0 1-3-5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTwoFingerPoint = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 9.13h2.87L8.52 4A2 2 0 0 1 10 3.39a2 2 0 0 1 2 2 2 2 0 0 1-.59 1.43l-1.34 1.35h9.46a2 2 0 0 1 2 1.75 1.91 1.91 0 0 1-1.9 2.08h-6.69M.5 18.7h2.87l.17.08a17.34 17.34 0 0 0 7.74 1.83 1.81 1.81 0 0 0 1.8-1.61l.27-3.13h7.24a1.92 1.92 0 0 0 1.85-2.39 2 2 0 0 0-2-1.44h-7.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTwoFinger = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.26 23.32v-1.88L5.6 18.78a3.79 3.79 0 0 1-1.1-2.66v-4.43a2.48 2.48 0 0 1 1.29-2.23 2.34 2.34 0 0 1 2.47.22M12 11.09V4.5a1.84 1.84 0 0 0-.56-1.33A1.82 1.82 0 0 0 10 2.63a2 2 0 0 0-1.72 2v11.16",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.62 23.32V20.5l.08-.17a17 17 0 0 0 1.8-7.61A1.77 1.77 0 0 0 18.88 11l-3.09-.27V3.56a1.88 1.88 0 0 0-2.34-1.82A2 2 0 0 0 12 3.66v7.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgTwoLine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 9.13h23M.5 14.88h13.42"
  }));
};

const SvgTypewriter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 19.64h5.72M4.36 12h15.28v8.59a1.91 1.91 0 0 1-1.91 1.91H6.27a1.91 1.91 0 0 1-1.91-1.91V12ZM1.5 12h21M22.5 10.09v3.82M1.5 10.09v3.82M6.27 1.5h11.45V12H6.27zM14.86 5.32ZM14.86 9.14ZM7.23 15.82h1.91M11.05 15.82h1.9M14.86 15.82h1.91"
  }));
};

const SvgUfo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.91a1.93 1.93 0 0 1-1.91 1.91H3.41a1.92 1.92 0 0 1-1.91-1.91A1.91 1.91 0 0 1 3.41 12h17.18a1.92 1.92 0 0 1 1.91 1.91ZM12 3.41A7.64 7.64 0 0 1 19.64 11v1H4.36v-1A7.64 7.64 0 0 1 12 3.41ZM15.82 15.82v.95a3.85 3.85 0 0 1-.82 2.41 3.81 3.81 0 0 1-5.92 0 3.85 3.85 0 0 1-.86-2.41v-.95ZM15 19.18a3.89 3.89 0 0 0 1.81.46 3.82 3.82 0 0 0 3.82-3.82M3.41 15.82a3.82 3.82 0 0 0 3.82 3.82A3.89 3.89 0 0 0 9 19.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUmbrellaProtection = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 14.37A2.4 2.4 0 0 1 4.83 12a2.39 2.39 0 0 1 2.39 2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 14.37A2.39 2.39 0 0 1 9.61 12 2.39 2.39 0 0 1 12 14.37M12 14.37A2.39 2.39 0 0 1 14.39 12a2.39 2.39 0 0 1 2.39 2.39M16.78 14.37A2.39 2.39 0 0 1 19.17 12a2.4 2.4 0 0 1 2.4 2.39",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 13.89v-1A9.57 9.57 0 0 1 12 3.37a9.57 9.57 0 0 1 9.57 9.56v1M12 .5v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.89v6.7a1.92 1.92 0 0 1-1.91 1.91 1.92 1.92 0 0 1-1.92-1.91v-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUmbrellaSafety = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "umbrella insurance"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 20.59a1.93 1.93 0 0 1-1.91 1.91A1.92 1.92 0 0 1 12 20.59V13M12 1.5v1.91M12 3.41h0A8.59 8.59 0 0 1 20.59 12v1h0H3.41h0v-1A8.59 8.59 0 0 1 12 3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  })));
};

const SvgUmbrella = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.25 9.64a8.08 8.08 0 0 1 .34 2.36H1.5a9.91 9.91 0 0 1 9.55-9.55 9.26 9.26 0 0 1 6.16 2.45M11.05 12v8.59A1.91 1.91 0 0 0 13 22.48a1.91 1.91 0 0 0 1.91-1.91M11.05.52v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 6.85a2.87 2.87 0 0 1-5.73 0c0-2.87 2.87-5 2.87-5s2.86 2.15 2.86 5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUnderline = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5V12A6.68 6.68 0 0 1 12 18.68 6.68 6.68 0 0 1 5.32 12V1.5M3.41 22.5h17.18M3.41 1.5h3.82M16.77 1.5h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUnlockKeyhole = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 10.09h13.36V22.5H5.32zM16.77 10.09H7.23V6.27A4.77 4.77 0 0 1 12 1.5a4.77 4.77 0 0 1 4.77 4.77"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-3.82"
  }));
};

const SvgUnlocked = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 11.05h19.09V22.5H2.45zM18.68 11.05H5.32V8.18A6.68 6.68 0 0 1 12 1.5a6.68 6.68 0 0 1 6.68 6.68"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 15.82,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 19.64v-2.87"
  }));
};

const SvgUpArrowFromBracket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 15.84v6.68h-21v-6.68M12 3.43v16.23M5.32 9.16 12 2.48l6.68 6.68"
  }));
};

const SvgUpDownMove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13V6.27a1.87 1.87 0 0 0-.56-1.34 1.9 1.9 0 0 0-1.52-.56 2 2 0 0 0-1.74 2v9.44L8.77 14.5a2 2 0 0 0-1.43-.59 2 2 0 0 0-2 2 2 2 0 0 0 .59 1.43l5.14 5.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13V5.42a2 2 0 0 1 1.44-1.95 1.92 1.92 0 0 1 2.38 1.85v7.22l3.12.27a1.8 1.8 0 0 1 1.65 1.8 17.25 17.25 0 0 1-1.82 7.72l-.09.17M7.23 9.14 4.36 12 1.5 9.14M1.5 4.36 4.36 1.5l2.87 2.86M4.36 2.45V12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUpMove = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13V6.3a1.91 1.91 0 0 0-2.08-1.9 2 2 0 0 0-1.74 2v9.44l-1.32-1.32a2 2 0 0 0-1.43-.59 2 2 0 0 0-1.43.59A2.07 2.07 0 0 0 5.32 16a2 2 0 0 0 .59 1.43l5.14 5.13",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 13V5.45a2 2 0 0 1 1.44-2 1.92 1.92 0 0 1 2.38 1.85v7.23l3.12.27a1.79 1.79 0 0 1 1.65 1.79 17.25 17.25 0 0 1-1.82 7.72l-.09.17M1.5 5.34l2.86-2.86 2.87 2.86M4.36 12.02V2.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUpOrientation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.21 13.94h11.51v5.75H6.21zM3.33 4.35h17.26v5.75H3.33zM.45 13.94h23.02M.45 4.35h23.02"
  })));
};

const SvgUpstairs = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 18.68h9.55v3.82H1.5zM5.32 14.86h9.55v3.82H5.32z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M9.14 11.05h9.55v3.82H9.14z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 11.04V22.5H11.04v-3.82h3.82v-3.82h3.82v-3.82h3.82zM6.27 1.5h4.77v4.77M11.05 1.5 1.5 11.05"
  }));
};

const SvgUpwardEscalator = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m6.27 16.76 8.59-8.59h4.78A2.86 2.86 0 0 1 22.5 11a2.86 2.86 0 0 1-2.86 2.87h-2.87v2.86h-2.86v2.86h-2.86v2.87H4.36a2.86 2.86 0 0 1-2.86-2.84 2.86 2.86 0 0 1 2.86-2.86ZM19.16 1.01l2.38 2.39-2.38 2.38",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 3.4H11.04l-8.58 8.59"
  }));
};

const SvgUrinal = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.21.5v23M16.79 17.75A4.8 4.8 0 0 1 12 13V8.65a2.39 2.39 0 0 0-2.4-2.4 2.39 2.39 0 0 0-2.39 2.4v9.1A4.78 4.78 0 0 0 12 22.54a4.78 4.78 0 0 0 4.79-4.79ZM9.12 2.5A1.91 1.91 0 0 1 11 4.41v1.84"
  }));
};

const SvgUsbCable = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.32h5.73v2.86a1.91 1.91 0 0 1-1.91 1.91H3.41A1.91 1.91 0 0 1 1.5 8.18V5.32ZM2.45 1.5h3.82v3.82H2.45z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 15.82h5.73v4.77a1.91 1.91 0 0 1-1.91 1.91h-1.91a1.91 1.91 0 0 1-1.91-1.91v-4.77Z",
    transform: "rotate(180 19.635 19.16)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 10.09v8.59a3.82 3.82 0 0 0 3.82 3.82A3.82 3.82 0 0 0 12 18.68V5.32a3.82 3.82 0 0 1 3.82-3.82 3.82 3.82 0 0 1 3.82 3.82v10.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUsbPlug = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 9.14h11.46v6.68a2.86 2.86 0 0 1-2.86 2.86H9.14a2.86 2.86 0 0 1-2.86-2.86V9.14h-.01ZM10.09 18.68h3.82v3.82h-3.82zM7.23 1.5h9.55v7.64H7.23zM10.09 4.36v1.91M13.91 4.36v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUsbPort = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 5.32,
    y: 8.18,
    width: 13.36,
    height: 7.64,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 12h7.64"
  }));
};

const SvgUsbStick = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 7.23h9.55v10.5A4.77 4.77 0 0 1 12 22.5a4.77 4.77 0 0 1-4.77-4.77V7.23ZM8.18 1.5h7.64v5.73H8.18zM7.23 11.05h9.54M12 1.5v1.91M12 5.32v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 8,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11,
    r: 3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.94 18.29a5 5 0 0 0-9.88 0M6 1 3 4h9M18 23l3-3h-9",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.1,
    r: 1.9,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 12a2.85 2.85 0 0 1 2.85 2.85v1h-5.7v-1A2.85 2.85 0 0 1 12 12Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgUserChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 14.39,
    cy: 10.52,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.39 12a2.39 2.39 0 0 1 2.39 2.39v.48H12v-.48A2.39 2.39 0 0 1 14.39 12Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgUserCheck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 5.8,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 19.64.7-3.47a7.56 7.56 0 0 1 7.41-6.08 7.48 7.48 0 0 1 4.6 1.57",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 14.86 16.3 18.2l-1.91-1.9"
  }));
};

const SvgUserClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.91a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 13.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.16,
    r: 1.91,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.07a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 10.07Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgUserFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77zM12 13.91a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 13.91Z"
  }));
};

const SvgUserFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.86a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 14.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserGear = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m22.53 9.23-2.87-5-.5.29a2.87 2.87 0 0 1-4.3-2.48V1.5H9.14v.58a2.87 2.87 0 0 1-4.3 2.48l-.5-.29-2.87 5 .53.25a2.86 2.86 0 0 1 0 5l-.51.29 2.87 5 .5-.29A2.87 2.87 0 0 1 9.16 22v.58h5.72V22a2.87 2.87 0 0 1 4.3-2.48l.5.29 2.87-5-.55-.33a2.86 2.86 0 0 1 0-5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 19.23v-1.5a4.77 4.77 0 1 1 9.54 0v1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserHierarchy = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 23.48A2.87 2.87 0 0 1 12 20.61a2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 23.48a2.87 2.87 0 0 1 2.87-2.87 2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 18.7,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 23.48a2.87 2.87 0 0 1 2.86-2.87 2.87 2.87 0 0 1 2.87 2.87M4.36 13.93v-3.82h15.28v3.82M12 13.93V7.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.39,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserKey = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12.02,
    cy: 7.24,
    r: 5.74,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.46 23.5v-1.91a9.55 9.55 0 0 1 7-9.21M16.8 14.89l-1 1.91H9.15l-1.91 1.92 1.91 1.91h6.7l1 1.91h2.87a2.86 2.86 0 0 0 2.87-2.87v-1.91a2.87 2.87 0 0 0-2.87-2.87ZM12.02 18.72v1.91M19.67 17.76v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.16,
    r: 1.91,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 10.07a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 10.07Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgUserMinus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 5.8,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 19.64.7-3.47a7.56 7.56 0 0 1 7.41-6.08 7.43 7.43 0 0 1 4.59 1.57",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 16.77h5.73"
  }));
};

const SvgUserPlus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 5.8,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 19.64.7-3.47a7.56 7.56 0 0 1 7.41-6.08 7.43 7.43 0 0 1 4.59 1.57",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 16.77h5.73M16.77 13.91v5.73"
  }));
};

const SvgUserTarget = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 9.58,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 .5v4.79M12 18.71v4.79M23.5 12h-4.79M5.29 12H.5"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.04,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.21 19.67v-1A4.78 4.78 0 0 1 12 13.92a4.78 4.78 0 0 1 4.79 4.79v1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUserXmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 5.8,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 19.64.7-3.47a7.56 7.56 0 0 1 7.41-6.08 7.48 7.48 0 0 1 4.6 1.57",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.39 14.39 4.77 4.77M19.16 14.39l-4.77 4.77"
  }));
};

const SvgUser = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 7.23v1.91l5.73 1.91V22.5h1.91l.91-5.81a1 1 0 0 1 2 0l.89 5.81h1.91V11.05l5.73-1.91V7.23Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 4.36,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUsersArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 11.05,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 15.82A2.87 2.87 0 0 1 19.64 13a2.87 2.87 0 0 1 2.86 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 11.05,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 15.82A2.87 2.87 0 0 1 4.36 13a2.87 2.87 0 0 1 2.87 2.87M10.09 2.46 7.23 5.32h11.45M13.91 21.55l2.86-2.87H5.32",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUsers = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 9.61,
    cy: 7.73,
    r: 4.3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 21.57.69-3.46A7.58 7.58 0 0 1 9.61 12 7.56 7.56 0 0 1 17 18.11l.7 3.46M12 11.3a4.3 4.3 0 1 0 0-7.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m22.5 21.57-.7-3.47a7.55 7.55 0 0 0-9.8-5.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgUterus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 9.16A1.91 1.91 0 0 1 1.5 7.25v-1a2.86 2.86 0 0 1 2.86-2.82A2.86 2.86 0 0 1 7.23 6.3 2.8 2.8 0 0 0 9 8.91a8.08 8.08 0 0 0 6 0 2.8 2.8 0 0 0 1.77-2.61 2.86 2.86 0 0 1 2.87-2.87A2.86 2.86 0 0 1 22.5 6.3v1a1.91 1.91 0 0 1-1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 6.3v4.4a7.59 7.59 0 0 0 1.3 4.3A7.37 7.37 0 0 0 11 17.16l1 .59 1.13-.65a7.3 7.3 0 0 0 1.75-1.38 7.6 7.6 0 0 0 1.89-5V6.3M12 21.57v-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 10.11,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 10.11,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVaccine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m17 1 6 6M19.78 4.22l-2.83 2.83M14.83 9.17l2.12 2.12M12.71 11.29l2.12 2.12M12 2l10 10M14.5 4.5l-8.49 8.49-.8 3.3 2.5 2.5 3.3-.8L19.5 9.5l-5-5zM1.64 22.36l4.82-4.82M10.59 13.41l2.12 2.13"
  }));
};

const SvgVanCar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 20.59H8.18M19.64 20.59h2.86v-3.4a1.92 1.92 0 0 0-1.31-1.81l-1.55-.52-3-3.69a2.85 2.85 0 0 0-2.24-1.08h-9a2.85 2.85 0 0 0-2.71 2L1.5 15.82v4.77h2.86M6.27 14.86h13.37M12.95 12v2.86M7.23 12v2.86M1.5 6.27h15.27M7.23 1.5H11a3.82 3.82 0 0 1 3.82 3.82v1H3.41v-1A3.82 3.82 0 0 1 7.23 1.5ZM4.36 6.27v3.82M13.91 6.27v3.82M7.23 1.5v4.77M11.05 1.5v4.77"
  }));
};

const SvgVanTransportation = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.36 17.73H1.5V6.27a1.92 1.92 0 0 1 1.91-1.91h14a1.91 1.91 0 0 1 1.85 1.45l1.3 5.24 1.94 1.15v5.53h-2.86M15.82 17.73H8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 17.73,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 11.05h5.73M15.82 11.05h4.77M6.27 7.23V12M20.59 14.86h1.91M10.09 8.18h4.77v9.55h-4.77z"
  }));
};

const SvgVanTruck = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 2.45h14.32"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.66,
    cy: 19.16,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.2,
    cy: 19.16,
    r: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 18.68h-4.77M7.23 18.68H4.36v-7.63l1.43-3.58a1.92 1.92 0 0 1 1.78-1.2h8.09a2.86 2.86 0 0 1 2.72 2L19.64 12l2.86 1v5.73h-1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.14 6.27.95 5.73h9.55M13.91 6.27l.95 5.73M1.5 11.05v5.72M8.18 2.45v3.82M14.86 2.45v3.82"
  }));
};

const SvgVan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.24,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.76,
    cy: 17.8,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.85 17.8h-6.7M4.33 17.8H1.46v-4.2a11.37 11.37 0 0 1 1.91-6.32h10.1a2.85 2.85 0 0 1 2.24 1.08l3 3.71h1a2.86 2.86 0 0 1 2.87 2.86v2.87h-3.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.28 7.28.96 4.78h12.43M.5 7.28h2.87M11.02 7.28l.96 4.79"
  }));
};

const SvgVault = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.48,
    y: 1.5,
    width: 21.04,
    height: 19.13,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.35 23.5v-2.87M19.65 23.5v-2.87"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.09,
    cy: 11.07,
    r: 4.78,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.74 9.15h1.91M17.74 12.98h1.91M17.74 16.8h1.91M10.09 4.37v6.7M4.35 15.85l5.74-4.78M15.83 15.85l-5.74-4.78"
  }));
};

const SvgVerticalCenter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.25 13.94h11.51v5.75H6.25zM3.38 4.34h17.26v5.75H3.38zM23.52 16.81h-5.76M6.25 16.81H.5M23.52 7.22h-2.88M3.38 7.22H.5"
  })));
};

const SvgVerticalLayout = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.43 1.49h13.43v21.1H1.43zM14.86 1.49h7.67v21.1h-7.67z"
  })));
};

const SvgVerticalLineChart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5.5v22h22M18.72 10.07v9.56M12.98 2.41v17.22M7.24 6.24v13.39"
  }));
};

const SvgVerticalSlidersDots = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 5.32,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.68,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.59,
    cy: 12,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 23.45V7.23M3.41 3.41V.55M12 23.45v-2.86M12 16.77V.55M20.59 23.45v-9.54M20.59 10.09V.55"
  }));
};

const SvgVerticalSlidersLines = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.38 23.5V7.21M3.38 4.33V.5M12 23.5v-3.83M12 16.79V.5M20.63 23.5v-9.58M20.63 11.04V.5M.5 4.33h5.75M9.13 16.79h5.75M17.75 11.04h5.75"
  }));
};

const SvgVespaFront = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.13 2.45h2.64a2.86 2.86 0 0 1 2.87 2.87M4.36 5.32a2.86 2.86 0 0 1 2.87-2.87h2.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 4.36a2.72 2.72 0 0 1-.43 1.5 2.84 2.84 0 0 1-4.86 0 2.72 2.72 0 0 1-.43-1.5 2.86 2.86 0 1 1 5.72 0ZM13.91 16.77v3.82a1.91 1.91 0 1 1-3.82 0v-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 11.05v4.77a2.86 2.86 0 0 1-2.87 2.86h-.95v-1.91h-3.82v1.91h-.95a2.86 2.86 0 0 1-2.87-2.86v-4.77a5.73 5.73 0 0 1 3.3-5.19 2.84 2.84 0 0 0 4.86 0A5.59 5.59 0 0 1 16.05 7a5.67 5.67 0 0 1 1.68 4.05Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13a2.86 2.86 0 0 1 2.86 2.86v1H9.14v-1A2.86 2.86 0 0 1 12 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVespa = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.47 15.09a2.72 2.72 0 0 0-1.11-.23 2.87 2.87 0 1 0 2.87 2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.64,
    cy: 17.73,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 17.73V8.18h1.91l.16.16a9.24 9.24 0 0 1 2.71 6.52h-1.91M18.68 4.36h1.91v3.82h-1.91a1.91 1.91 0 0 1-1.91-1.91 1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 3.41h.95a1.9 1.9 0 0 1 1.91 1.91v2.86M1.5 7.23l1.91 1.91M10.09 17.73V12l.56-.56a1.37 1.37 0 0 0 .4-1 1.35 1.35 0 0 0-1.35-1.3H3.41l-.33.47a9.52 9.52 0 0 0-1.58 5.25h3.82l.15.23 1.76 2.64h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVialStand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.3 22.5h1.92M6.26 19.63v-1.91M2.43 1.46h7.66M1.48 11c4.78-1.89 4.78 1.93 9.52 0"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11 11a4.78 4.78 0 0 0-2.83-4.36V1.46H4.35v5.18A4.78 4.78 0 0 0 1.48 11c0 3.83 4.78 6.7 4.78 6.7S11 14.85 11 11ZM8.17 5.28h12.44M16.6 18.67h2.27a3.65 3.65 0 0 1 3.65 3.65v.18H13v-.18a3.65 3.65 0 0 1 3.6-3.65ZM17.74.5v18.17",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVialsStand = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.43 3.37h3.83V15.8a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.92-1.91V3.37ZM.52 3.37h7.65M17.74 3.37h3.83V15.8a1.91 1.91 0 0 1-1.91 1.91 1.91 1.91 0 0 1-1.91-1.91V3.37h-.01ZM15.83 3.37h7.65M17.74 7.2H6.26M2.43 11.02h3.83M17.74 11.02h3.83M12 .5v18.17M10.09 18.67h3.83a3.83 3.83 0 0 1 3.83 3.83H6.26a3.83 3.83 0 0 1 3.83-3.83ZM11.04 6.24h1.91v1.91h-1.91z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgViber = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.63 5.4a3.62 3.62 0 0 0-3.06-3 45.84 45.84 0 0 0-13.13 0 3.64 3.64 0 0 0-3.07 3 30.62 30.62 0 0 0 0 9.46 3.64 3.64 0 0 0 3.06 3q1 .14 2 .24v3l4.12-2.74a45.91 45.91 0 0 0 7-.47 3.62 3.62 0 0 0 3.07-3 30.62 30.62 0 0 0 .01-9.49Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.39 11.76 15.65 14s-3 3-6.78-.75-.76-6.78-.76-6.78l2.26 2.26v.07a2.24 2.24 0 0 0 .42 2.56 2.22 2.22 0 0 0 2.56.42ZM12 7.4a2.73 2.73 0 0 1 2.73 2.73M12 4.66a5.47 5.47 0 0 1 5.47 5.47",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVideoCamera = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 10.09h15.27v11.45H1.5zM16.77 14.86l4.78-4.77h.95v11.46h-.95l-4.78-4.78v-1.91z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 6.27,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 6.27,
    r: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVideoChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 7.2h5.73v6.68H7.23zM12.96 10.07v.95l2.86 2.87h.95V7.21h-.95l-2.86 2.86z"
  }));
};

const SvgVideoClip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 1.5h21.04v15.3H1.48zM.52 21.59h9.57M10.09 19.67v3.83M23.48 21.59H12.96"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.83 9.15-7.66 3.83V5.33l7.66 3.82z"
  }));
};

const SvgVideoMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 7.2h5.73v6.68H7.23zM12.96 10.07v.95l2.86 2.87h.95V7.21h-.95l-2.86 2.86z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVideoMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 17.18,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 18.68h7.64v3.82H8.18zM3.41 22.5h17.18M4.36 14.86h15.28M14.86 8.18l-5.72 2.86V5.32l5.72 2.86z"
  }));
};

const SvgVideoPlayerWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.79 14.93-7.68 3.59v-7.19l7.68 3.6z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.4 1.5h21.1v21.1H1.4z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 7.25H1.4V1.5h21.1v5.75zM4.28 4.38H6.2M8.11 4.38h1.92M11.95 4.38h1.92"
  })));
};

const SvgVideoRecorder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 9.14h15.27v11.45H1.5zM16.77 16.77l4.78 3.82h.95V9.14h-.95l-4.78 3.82v3.81z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 6.27,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 6.27,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgViewArrow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.18 3.21A10.75 10.75 0 0 1 12 22.75M5.82 20.79A10.75 10.75 0 0 1 12 1.25",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.84 7.12-.98-3.91h3.91M5.16 16.89l.98 3.9H2.23M18.84 12A7.52 7.52 0 0 1 12 15.91 7.52 7.52 0 0 1 5.16 12 7.52 7.52 0 0 1 12 8.09 7.52 7.52 0 0 1 18.84 12Z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgViewMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.5h1.91a1.9 1.9 0 0 1 1.91 1.91v13.36a1.9 1.9 0 0 1-1.91 1.91H3.41a1.9 1.9 0 0 1-1.91-1.91V3.41A1.9 1.9 0 0 1 3.41 1.5h15.27ZM12 22.5v-3.82M16.77 22.5H7.23M1.5 14.86h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 8.51a5.5 5.5 0 0 1-9.54 0 5.5 5.5 0 0 1 9.54 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 8.51a5.5 5.5 0 0 1-9.54 0 5.5 5.5 0 0 1 9.54 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.51,
    r: 0.52,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgViewPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a6.68 6.68 0 0 1 6.68 6.68V11H5.32V8.18A6.68 6.68 0 0 1 12 1.5ZM9.14 16.77h1.91M5.32 16.77h1.91M21.73 20A5.06 5.06 0 0 1 13 20a5.07 5.07 0 0 1 8.77 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21.73 20A5.06 5.06 0 0 1 13 20a5.07 5.07 0 0 1 8.77 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.25,
    cy: 19.96,
    r: 0.48,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M21.55 15.82v-4.78H2.46V22.5h8.59"
  }));
};

const SvgViewVr = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.14 17.6a34.11 34.11 0 0 1 5.86-.48 34.11 34.11 0 0 1 5.86.48M22.75 20.05V4.42M1.25 20.05V4.42",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.25 20.05c0 1 2 1.94 4.89 2.46V6.88C3.2 6.35 1.25 5.45 1.25 4.42 1.25 2.8 6.06 1.49 12 1.49S22.75 2.8 22.75 4.42c0 1-1.95 1.93-4.89 2.46v15.63c2.94-.52 4.89-1.42 4.89-2.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.62 9.79a3.91 3.91 0 0 1-7.24 0 3.91 3.91 0 0 1 7.24 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgViewWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.55 22.5h22.9M2.45 1.5h19.09v21H2.45zM2.45 5.32h19.1M17.73 5.32v4.77"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.73,
    cy: 11.05,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.46 17.85 4.83-4.84 9.48 9.49"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12 18.68 3.82-3.82 5.73 5.73"
  }));
};

const SvgVimeo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 6.27c0 4.78-7.64 15.28-11.45 15.28S5.32 9.14 5.32 9.14l-1.91.95L1.5 8.18s2.86-3.82 6.68-4.77 2.87 11.45 4.82 10.5 2.87-3.82 2.87-4.77-2.87-1-2.87-1 1.91-5.73 5.73-5.73a3.5 3.5 0 0 1 3.77 3.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVintageBike = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 3.41,
    cy: 20.59,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 16.77,
    cy: 16.77,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 16.77V8.18h-2.86a10.5 10.5 0 0 0-10.5 10.5M19.64 1.5h-2.87v6.68M6.27 5.32v5.73M9.14 5.32H4.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 11h3.9a2 2 0 0 1 2 2v7.81a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.06H3.21a2 2 0 0 1-2-2V13a2 2 0 0 1 2-2h13.68ZM4.18 14.93h1.96M4.18 18.84h1.96M12 1.25A9.77 9.77 0 0 1 21.77 11H2.23A9.77 9.77 0 0 1 12 1.25Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3 7.3a9.71 9.71 0 0 1 6.1-2.14h5.86A9.71 9.71 0 0 1 21 7.3",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualRealityDimension = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.67 9.6v8.63L12 14.4V5.77l7.67 3.83zM12 5.77v8.63l-7.67 3.83V9.6L12 5.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.67 18.23 12 22.06l-7.67-3.83L12 14.4l7.67 3.83zM.5 20.15l7.67-3.84M23.5 20.15l-7.67-3.84M12 1.94v3.83"
  }));
};

const SvgVirtualRealityEye = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.79 12a9.52 9.52 0 0 1-17.58 0 9.52 9.52 0 0 1 17.58 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 2.23v5.86M12 15.91v5.86M.27 12h7.82M15.91 12h7.82"
  }));
};

const SvgVirtualRealityGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.75 8.58v6.84a2 2 0 0 1-2 2h-5.82l-1.41-2.11a1.83 1.83 0 0 0-1.52-.87 1.83 1.83 0 0 0-1.52.82l-1.41 2.11H3.21a2 2 0 0 1-2-2V8.58a2 2 0 0 1 2-1.95h17.58a2 2 0 0 1 1.96 1.95ZM4.18 10.05h1.96M4.18 13.95h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualRealityImage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.75 21.28a31.76 31.76 0 0 0-10.75-2 31.76 31.76 0 0 0-10.75 2V4.67A31.76 31.76 0 0 1 12 2.72a31.76 31.76 0 0 1 10.75 1.95Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.25 17.37 4.89-4.88 3.91 3.91 5.86-5.87 6.84 6.84"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.05,
    cy: 8.58,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualRealityPlay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.98 12-1.96.98v-1.96l1.96.98z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 7.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.73 6.45c.6-.52 1.17-1 1.74-1.46C19 2.17 21.8.69 22.55 1.45S21.83 5 19 8.53M8.53 19C5 21.83 2.2 23.31 1.45 22.55S2.17 19 5 15.47c.73-.9 1.53-1.84 2.41-2.81M5 8.53C2.17 5 .69 2.2 1.45 1.45S5 2.17 8.53 5c.57.45 1.14.94 1.74 1.46M16.6 12.66c.88 1 1.69 1.92 2.41 2.81 2.82 3.53 4.3 6.33 3.54 7.08S19 21.83 15.47 19",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualRealityView = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.18 6.2C2.37 5.67 1.25 5 1.25 4.18c0-1.18 2.39-2.13 5.86-2.61v5.22M19.82 6.2c1.81-.53 2.93-1.24 2.93-2 0-1.14-2.39-2.13-5.86-2.61v5.2M4.18 17.8c-1.81.53-2.93 1.24-2.93 2 0 1.2 2.39 2.2 5.86 2.63v-5.22M19.82 17.8c1.81.53 2.93 1.24 2.93 2 0 1.14-2.39 2.13-5.86 2.61v-5.2M1.25 19.82V4.18M7.11 4.18v2.61a35 35 0 0 0 4.89.32 35 35 0 0 0 4.89-.32V4.18M7.11 19.82v-2.61a35 35 0 0 1 4.89-.32 35 35 0 0 1 4.89.32v2.61M22.75 19.82V4.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 6.79v10.42a35 35 0 0 0-4.89-.32 35 35 0 0 0-4.89.32V6.79a35 35 0 0 0 4.89.32 35 35 0 0 0 4.89-.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualReality = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.53 19C5 21.83 2.2 23.31 1.45 22.55S2.17 19 5 15.47A69 69 0 0 1 10 10c.68-.69 1.36-1.34 2-2 1.2-1.11 2.37-2.13 3.47-3C19 2.17 21.8.69 22.55 1.45S21.83 5 19 8.53",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.47 19c3.53 2.82 6.33 4.3 7.08 3.54S21.83 19 19 15.47c-.88-1.1-1.9-2.27-3-3.47-.63-.67-1.28-1.35-2-2s-1.36-1.34-2-2c-1.2-1.11-2.37-2.13-3.47-3C5 2.17 2.2.69 1.45 1.45S2.17 5 5 8.53",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 7.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVirtualVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 9.07h3.9a2 2 0 0 1 2 1.95v7.82a2 2 0 0 1-2 1.95h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.12H3.21a2 2 0 0 1-2-1.95V11a2 2 0 0 1 2-1.95h13.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.86,
    cy: 14.93,
    r: 1.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.18 12.98h1.96M4.18 16.89h1.96M21.77 9.07H2.23l2.93-5.86a14.14 14.14 0 0 0 6.84 2 14.14 14.14 0 0 0 6.84-1.95Z"
  }));
};

const SvgVirusMedical = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.17,
    cy: 15.83,
    r: 4.79,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 15.83h2.88M12.96 15.83h2.87M8.17 8.17v2.87M8.17 20.63v2.87M2.75 21.25l2.03-2.03M11.55 12.45l2.04-2.04M2.75 10.41l2.03 2.04M11.55 19.22l2.04 2.03M21.58 4.33a1.93 1.93 0 0 1-1.91 1.92 1.84 1.84 0 0 1-1.35-.57 1.84 1.84 0 0 1-.57-1.35 1.93 1.93 0 0 1 1.92-1.91 1.91 1.91 0 0 1 1.91 1.91ZM19.67 2.42V.5M19.67 8.17V6.25M17.75 4.33h-1.92M23.5 4.33h-1.92M18.32 2.98l-1.37-1.36M22.38 7.05l-1.36-1.37M18.32 5.68l-1.37 1.37M22.38 1.62l-1.36 1.36M1.46 4.33h5.75M4.33 1.46v5.75M16.79 18.71h5.75M19.67 15.83v5.75M6.25 14.88h1.92M7.21 17.75h1.92"
  }));
};

const SvgVirus = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.26 13.23 21.47 12l-2.21-1.23a7.37 7.37 0 0 0-6-6L12 2.53l-1.23 2.21a7.37 7.37 0 0 0-6 6L2.53 12l2.21 1.23a7.37 7.37 0 0 0 6 6L12 21.47l1.23-2.21a7.37 7.37 0 0 0 6.03-6.03ZM20.52 20.52 17.2 17.2M6.8 6.8 3.48 3.48M6.8 17.2l-3.32 3.32M20.52 3.48 17.2 6.8M1.5 16.35l1.75-.73M20.75 8.38l1.75-.73M22.5 16.35l-1.75-.73M3.25 8.38 1.5 7.65M7.65 1.5l.73 1.75M15.62 20.75l.73 1.75M7.65 22.5l.73-1.75M15.62 3.25l.73-1.75",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.84,
    r: 1.89,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.21,
    cy: 10.11,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.89,
    cy: 9.16,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVision = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1 7V1h6M17 1h6v6M1 17v6h6M17 23h6v-6M22 12a11.54 11.54 0 0 1-20 0 11.54 11.54 0 0 1 20 0Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22 12a11.54 11.54 0 0 1-20 0 11.54 11.54 0 0 1 20 0Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 3,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVk = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 7.25c0 2.86 2.86 10.5 10.5 10.5h1.91v-2.86h1a6.34 6.34 0 0 1 2.85 2.85h4.74v-.94c-1-1.5-2.55-2.55-3.82-3.82a9.79 9.79 0 0 0 2.57-4.53l.3-1.2h-3.82l-.1.3A11.3 11.3 0 0 1 14.86 12h-.95V7.25H9.14v.95l.95 1V13a6 6 0 0 1-3.82-5.75Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVoiceEnvelope = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 5.36,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 5.36,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 7.27h7.64M20.59 7.27h1.91v15.28h-21V7.27h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 7.27 12 17.77l10.5-10.5M9.14 14.91 1.5 22.55M22.5 22.55l-7.64-7.64"
  }));
};

const SvgVoiceFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 13.91,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 15.82h7.64"
  }));
};

const SvgVoiceFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 8.18,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 16.77h7.64M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgVolume = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 7.23h5.73v9.55H4.36zM19.64 1.5v21h-2.09l-7.46-5.73V7.23l7.46-5.73h2.09z"
  }));
};

const SvgVrArrows = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.14 17.84a34.11 34.11 0 0 1 5.86-.48 34.11 34.11 0 0 1 5.86.48M22.75 20.3v-9.78M1.25 20.3v-9.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.25 20.3c0 1 2 1.93 4.89 2.46V13c-2.94-.53-4.89-1.43-4.89-2.47C1.25 8.9 6.06 7.59 12 7.59s10.75 1.31 10.75 2.93c0 1-1.95 1.94-4.89 2.47v9.77c2.94-.53 4.89-1.43 4.89-2.46M19.33 1.24l2.44 2.45-2.44 2.44M4.67 6.13 2.23 3.69l2.44-2.45M5.16 3.68h1.95M9.07 3.68h1.95M12.98 3.68h1.95M16.89 3.68h1.95",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVrGlassesScience = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.48 22.5v-6.67a7.84 7.84 0 0 0 2.25-3.37M4.64 6.07a8.23 8.23 0 0 1 6.45-4.52M3.78 15.2v1.6a3 3 0 0 0 3 3 3 3 0 0 0 1.32-.31l1.2-.6v3.61"
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 17.93,
    cy: 5.61,
    rx: 1.84,
    ry: 5.51,
    transform: "rotate(-45 17.93 5.603)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 17.93,
    cy: 5.61,
    rx: 5.51,
    ry: 1.84,
    transform: "rotate(-45 17.93 5.603)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.17 11.54H8.35L4.7 14.28H1.96V6.07h8.21v5.47z"
  }));
};

const SvgVrGlassesSettings = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.86 7.74h2.93a2 2 0 0 1 2 1.95v7.82a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.8 1.8 0 0 0-3 0l-1.44 2.08H3.21a2 2 0 0 1-2-2V9.69a2 2 0 0 1 2-1.95h2.93M4.18 11.65h1.96M4.18 15.56h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.74,
    r: 2.93,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 2.85v1.96M12 10.67v1.96M7.77 5.3l1.69.97M14.54 9.21l1.69.97M16.23 5.3l-1.69.97M9.46 9.21l-1.69.97"
  }));
};

const SvgVrGlassesWifi = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.84 7.6h1.95a2 2 0 0 1 2 2v7.81a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.04H3.21a2 2 0 0 1-2-2V9.56a2 2 0 0 1 2-2h2M4.18 11.51h1.96M4.18 15.42h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.6,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.07 10.53a4.14 4.14 0 0 1 0-5.86M14.93 4.67a4.14 4.14 0 0 1 0 5.86",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.75 13v7.81a2 2 0 0 1-2 2h-5.82l-1.41-2.12a1.82 1.82 0 0 0-1.52-.87 1.82 1.82 0 0 0-1.52.81l-1.41 2.12H3.21a2 2 0 0 1-2-2V13a2 2 0 0 1 2-2h17.58a2 2 0 0 1 1.96 2ZM12 1.25A9.77 9.77 0 0 1 21.77 11H2.23A9.77 9.77 0 0 1 12 1.25ZM12 2.23v8.79",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.14,
    cy: 16.89,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.86,
    cy: 16.89,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgVrGoggles = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 20.59v-7.64M1.5 20.59v-7.64M19.64 22.5h-5.73l-.07-.26a1.92 1.92 0 0 0-3.68 0l-.07.26H4.36a1.91 1.91 0 0 1-1.91-1.91V13a1.91 1.91 0 0 1 1.91-1.9h15.28a1.91 1.91 0 0 1 1.91 1.9v7.64a1.91 1.91 0 0 1-1.91 1.86ZM5.32 14.86h1.91M5.32 18.68h1.91M3.41 1.5h2.86v2.86H3.41M3.41 4.36h2.86v2.87H3.41M10.09 4.36h2.86v2.86h-2.86z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 5.79V1.5h3.82M16.77 1.5h2.86v5.73h-2.86z"
  }));
};

const SvgVrSplit = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.6 17.81a28.35 28.35 0 0 0-3.73-.41M10.13 17.4a28.35 28.35 0 0 0-3.73.41M22.26 20.15V8.96M1.74 20.15V8.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.26 20.15c0 1-1.86 1.85-4.66 2.35V11.31c2.8-.5 4.66-1.36 4.66-2.35 0-1.37-3.62-2.51-8.39-2.75M10.13 6.21C5.36 6.45 1.74 7.59 1.74 9c0 1 1.86 1.85 4.66 2.35V22.5c-2.8-.5-4.66-1.36-4.66-2.35M12 1.5v1.87M12 5.23V7.1M12 8.96v1.87M12 12.69v1.87M12 20.15v1.87M12 16.42v1.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWalkieTalkie = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M18.7 13.21V4.33H5.3v8.88l.96 2.31v6.98h11.48v-6.98l.96-2.31zM8.17 8.15h7.66M8.17 11.98h7.66M7.22.5v3.83M16.78 2.41v1.92M9.13 16.76h1.91"
  }));
};

const SvgWall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 17.75h7.67v3.83H.5M8.17 17.75h7.67v3.83H8.17zM4.33 13.92H12v3.83H4.33zM12 13.92h7.67v3.83H12zM4.33 6.25H12v3.83H4.33zM12 6.25h7.67v3.83H12z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 21.58h-7.67v-3.83h7.67M.5 10.08h7.67v3.84H.5M8.17 10.08h7.67v3.83H8.17z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 13.92h-7.67v-3.84h7.67M.5 2.42h7.67v3.83H.5M8.17 2.42h7.67v3.83H8.17z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.5 6.25h-7.67V2.42h7.67"
  }));
};

const SvgWallet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 1.5v5.73H4.36a2.87 2.87 0 0 1 0-5.73ZM18.68 13h3.82v3.82h0-3.82a1.91 1.91 0 0 1-1.91-1.91v0A1.91 1.91 0 0 1 18.68 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 7.23V22.5H3.41a1.92 1.92 0 0 1-1.91-1.91V4.36a2.86 2.86 0 0 0 2.86 2.87Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }));
};

const SvgWardrobeMirror = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.43 1.5H12v20.09H2.43zM12 1.5h9.57v20.09H12zM4.35 23.5v-1.91M19.65 23.5v-1.91M8.17 11.07v1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.78 18.72a1.91 1.91 0 0 0-1.91-1.92V6.28a1.9 1.9 0 0 0 1.91-1.91 1.91 1.91 0 0 0 1.92 1.91V16.8a1.92 1.92 0 0 0-1.92 1.92Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWarning = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.35 1.5h-8.7L1.5 7.65v8.7l6.15 6.15h8.7l6.15-6.15v-8.7L16.35 1.5zM12 6.27v7.64M12 15.82v1.91"
  }));
};

const SvgWashingMachine = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 1.5h11.46a2.86 2.86 0 0 1 2.86 2.86V22.5H3.41V4.36A2.86 2.86 0 0 1 6.27 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 4.77,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 5.32h4.78M15.82 5.32h1.91M12.95 5.32h1.91M7.23 13.91c4.77-2.86 5.72 1.91 9.54 0"
  }));
};

const SvgWashingtonBuilding = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M3.41 7.23V5.32L12 1.5l8.59 3.82v1.91M1.5 7.23h21M.55 22.5h22.9M1.5 19.64h21M21.55 22.5H2.45M3.41 10.09h3.82M3.41 16.77h3.82M5.32 10.09v6.68M10.09 10.09h3.82M10.09 16.77h3.82M12 10.09v6.68M16.77 10.09h3.82M16.77 16.77h3.82M18.68 10.09v6.68"
  }));
};

const SvgWashingtonMonument = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 22.5H9.14l.95-19.09L12 1.5l1.91 1.91.95 19.09zM3.41 22.5h17.18"
  }));
};

const SvgWaterBoiler = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.89 22.5H7.11a1.81 1.81 0 0 1-1.81-1.8v-.23l1-14.23h11.44l1 14.23v.23a1.81 1.81 0 0 1-1.85 1.8Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 2.41h5.74a2.87 2.87 0 0 1 2.87 2.87v1H6.26v-1a2.87 2.87 0 0 1 2.87-2.87ZM18.34 15.8h1.31a1.92 1.92 0 0 0 1.92-1.91V9.11a1.92 1.92 0 0 0-1.92-1.91H17.8M6.26 6.24H2.44v.96l3.33 6.91M12 .5v1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 10.09,
    y: 10.07,
    width: 3.83,
    height: 8.61,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.08 14.7a2.08 2.08 0 0 1-4.16 0c0-1.78 2.08-3.86 2.08-3.86s2.08 2.08 2.08 3.86Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 4.36V1.5H9.14v2.86a4.2 4.2 0 0 0-2.87 4V22.5h11.46V8.34a4.2 4.2 0 0 0-2.87-4ZM7.23 1.5h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterCan = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.84 22.5H8.07a1.8 1.8 0 0 1-1.8-1.8 1.64 1.64 0 0 1 0-.22L8.18 5.32h9.55l1.89 15.16a1.64 1.64 0 0 1 0 .22 1.8 1.8 0 0 1-1.78 1.8ZM11 1.5h3.82a1.91 1.91 0 0 1 1.91 1.91v1.91H9.14V3.41A1.91 1.91 0 0 1 11 1.5ZM6.27 5.32h13.37",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.09 8.18h.59a3.82 3.82 0 0 1 2.7 6.52A3.86 3.86 0 0 1 19 15.8M7.01 14.68 1.5 10.09V8.18l6.11 1.75M15 14.7a2.08 2.08 0 0 1-4.15 0c0-1.78 2.07-3.86 2.07-3.86S15 12.92 15 14.7Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterContainer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 1.5h15.27v21H4.36z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.08 12.79a2.08 2.08 0 0 1-4.16 0C9.92 11 12 8.93 12 8.93s2.08 2.07 2.08 3.86ZM2.45 1.5h19.1M4.36 5.32h15.28M4.36 18.68h15.28M2.45 22.5h19.1M2.45 12h4.78M16.77 12h4.78",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterDrop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.1 19.59a6.34 6.34 0 0 1-4.54 1.91H12V4.23l5.47 6.58a6.56 6.56 0 0 1-.37 8.78ZM12 2.5v17.27h-.56a6.36 6.36 0 0 1-4.54-1.91 6.55 6.55 0 0 1-.37-8.78ZM12 12.86l3.89-3.88M12 18.91l6.48-6.48",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M17.73 22.5H6.27l-2.86-21h17.18l-2.86 21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.68 8.18C12 10.09 12 5.32 4.32 8.18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterHeater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.29 1.46h13.42v17.25H5.29zM5.29 14.87h13.42"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.92 9.13a1.92 1.92 0 0 1-3.84 0c0-1.92 1.92-3.84 1.92-3.84s1.92 1.92 1.92 3.84ZM9.13 18.71v1.91a1.92 1.92 0 0 1-1.92 1.92H.5M14.87 18.71v1.91a1.93 1.93 0 0 0 1.92 1.92h6.71",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterLightbulb = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 9.14a7.64 7.64 0 1 0-13.15 5.27 6.2 6.2 0 0 1 1.69 4.27h7.64a6.07 6.07 0 0 1 1.67-4.24 7.59 7.59 0 0 0 2.15-5.3ZM8.18 18.68h7.64v1.91a1.91 1.91 0 0 1-1.91 1.91h-3.82a1.91 1.91 0 0 1-1.91-1.91v-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.67 11.24a2.67 2.67 0 0 1-5.34 0c0-2.29 2.67-5 2.67-5s2.67 2.76 2.67 5ZM.55 9.14h1.9M3.41 1.5h1.91M3.41 16.77h1.91M23.45 9.14h-1.9M20.59 16.77h-1.91M20.59 1.5h-1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterLiquid = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.71 14.88a6.71 6.71 0 0 1-13.42 0C5.29 9.12 12 2.42 12 2.42s6.71 6.7 6.71 12.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 17.75a2.88 2.88 0 0 1-2.88-2.87M21.58 14.88h1.92M19.67 21.58h1.91M19.67 8.17h1.91M.5 14.88h1.92M2.42 21.58h1.91M2.42 8.17h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterRecycle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M16.84 2.52a10.49 10.49 0 0 1 2.69 1.95 10.64 10.64 0 0 1-5.78 18M7.16 21.48a10.49 10.49 0 0 1-2.69-1.95 10.64 10.64 0 0 1 5.78-18",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M16.84 6.19V2.32h3.87M7.16 17.81v3.87H3.29M15.73 13.11a3.73 3.73 0 0 1-7.46 0C8.27 9.92 12 6.19 12 6.19s3.73 3.73 3.73 6.92Z"
  }));
};

const SvgWaterScooter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M17.73 19.64H3.41L1.5 15.82v-1h21a4.78 4.78 0 0 1-4.77 4.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.05 14.86H1.5v-.95l1.28-.85a3.57 3.57 0 0 0 1.58-3h3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 4.36h2.86l6.68 9.55v.95H8.18"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m10 13.08 2.13-2.15a2.91 2.91 0 0 1 2-.84h5.5M1.5 10.09h3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaterTap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 10.11,
    y: 5.32,
    width: 7.64,
    height: 7.64,
    rx: 2.2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.48 7.23h-5.73v3.81h5.73M10.11 7.23h-.95A5.73 5.73 0 0 0 3.43 13v1.91h3.82V13a1.9 1.9 0 0 1 1.91-1.9h.95ZM1.52 14.86h7.64M9.16 1.5h9.54M13.93 5.32V1.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8 19.83a2.67 2.67 0 0 1-5.34 0c0-2.29 2.67-5 2.67-5S8 17.54 8 19.83Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWater = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M.5 3.4c1.92 0 1.92.95 3.83.95s1.92-.95 3.83-.95 1.92.95 3.83.95 1.92-.95 3.83-.95 1.92.95 3.84.95 1.92-.95 3.84-.95M.5 9.15c1.92 0 1.92.95 3.83.95s1.92-.95 3.83-.95 1.92.95 3.83.95 1.92-.95 3.83-.95 1.92.95 3.84.95 1.92-.95 3.84-.95M.5 14.9c1.92 0 1.92.95 3.83.95s1.92-.95 3.83-.95 1.92.95 3.83.95 1.92-.95 3.83-.95 1.92.95 3.84.95 1.92-.95 3.84-.95M.5 20.65c1.92 0 1.92 1 3.83 1s1.92-1 3.83-1 1.92 1 3.83 1 1.92-1 3.83-1 1.92 1 3.84 1 1.92-1 3.84-1",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWaveform = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.83 8.33v7.34M7.42 4.67v14.66M21.17 8.33v7.34M16.58 4.67v14.66M12 1v22"
  }));
};

const SvgWe = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.63 8.31c-.43.69.85 7.49 2.56 7.49s1.7-2.49 2.56-2.49.85 2.49 2.55 2.49 3.17-6.47 2.56-7.49C11 6.89 2.48 6.9 1.63 8.31ZM17.71 12c-.95.95 0 2.85 2.85 1.9s2.85 2.85-1.9 2.85c-3.81 0-4.76-3.8-4.76-4.75a4.41 4.41 0 0 1 4.76-4.75c2.85 0 4.26 2 3.8 3.8-.95 3.8-4.75.95-4.75.95Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWebcam = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 8.59,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.09,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.64 22.5H4.36M15.82 17.79v4.71H8.18v-4.71M11.05 4.36h1.9"
  }));
};

const SvgWebsiteAd = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v5.73h-21zM1.5 7.23h21V22.5h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 12H11v3.82H9.14a1.91 1.91 0 0 1-1.91-1.91A1.91 1.91 0 0 1 9.14 12ZM11.04 12l4.78-1.91v7.64l-4.78-1.91V12zM11.05 20.59l-1.91-4.77M4.36 4.36h1.91M8.18 4.36h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWebsiteClip = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v5.73h-21zM1.5 7.23h21V22.5h-21zM4.36 4.36h1.91M8.18 4.36h1.91M4.36 18.68H12M12 16.77v3.82M13.91 18.68h5.73"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.96 12.48-2.87 1.43v-2.87l2.87 1.44z"
  }));
};

const SvgWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.46 1.5h21.1v21.1H1.46z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.56 7.25H1.46V1.5h21.1v5.75zM4.34 4.38h1.91M8.17 4.38h1.92M12.01 4.38h1.92"
  })));
};

const SvgWechat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.23 15.79h-.09a8.74 8.74 0 0 1-3-.54l-.81.54v-.9A6.58 6.58 0 0 1 1.5 9.11c0-3.69 3.42-6.68 7.64-6.68s7.63 3 7.63 6.68v.07",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 14.84a5.5 5.5 0 0 1-2.86 4.69v1l-.88-.53a7.63 7.63 0 0 1-2.94.58c-3.7 0-6.68-2.57-6.68-5.73s3-5.73 6.68-5.73 6.68 2.56 6.68 5.72Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.27,
    cy: 7.2,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 7.2,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12.95,
    cy: 13.89,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 18.68,
    cy: 13.89,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgWeddingCake = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.06.5a1.28 1.28 0 0 0-1.06.57 1.28 1.28 0 0 0-2.34.71C9.66 3.69 12 4.33 12 4.33s2.34-.64 2.34-2.55A1.28 1.28 0 0 0 13.06.5Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M23.48 22.5H.52M3.39 15.8h17.22v6.7H3.39z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.26 10.07h11.48v5.74H6.26zM9.13 6.24h5.74v3.83H9.13z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m3.39 15.8.86 1.51a3.83 3.83 0 0 0 6.44.33L12 15.8M20.61 15.8l-.86 1.51a3.83 3.83 0 0 1-6.44.33L12 15.8M6.26 8.15v1.92M3.39 13.89v1.91M17.74 8.15v1.92M20.61 13.89v1.91M13.91 13.89v1.91M10.09 13.89v1.91M12 3.37v2.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWeightLifting = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 7.3,
    width: 3.82,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 18.68,
    y: 7.3,
    width: 3.82,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 4.43v18.14M18.68 4.43v18.14M5.32 11.11h13.36M8.18 17.8h7.64M12 22.57V17.8M3.41 22.57h3.82M10.09 22.57h3.82M16.77 22.57h3.82"
  }));
};

const SvgWeightLoss = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.44 23.48A14.69 14.69 0 0 1 4 16.9c.34-.74.71-1.43 1-2.12a10.16 10.16 0 0 0 1.27-4.69A29.68 29.68 0 0 0 4.35.52M21.57 23.48A14.62 14.62 0 0 0 20.09 17c-.36-.76-.73-1.47-1.07-2.17a10.16 10.16 0 0 1-1.28-4.69A29.54 29.54 0 0 1 19.66.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m20.09 17-6.38 5a2.75 2.75 0 0 1-1.7.58 2.77 2.77 0 0 1-1.72-.6L4 16.9c.34-.74.71-1.43 1-2.12a28.24 28.24 0 0 0 14 0c.36.7.73 1.41 1.09 2.22ZM12 8.17v1.92M1.09 7.78l2.31 2.31-2.31 2.31M23.09 12.4l-2.31-2.31 2.31-2.31",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWeightScale = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 4.36a4.77 4.77 0 0 1 4.77 4.77H7.23A4.77 4.77 0 0 1 12 4.36ZM12 6.27v2.87M8 19.64a2.09 2.09 0 0 1-2-1.69l-.58-2.88a2 2 0 0 1 0-.41v-.56a2.1 2.1 0 0 1 2-2.1H8a2.1 2.1 0 0 1 2.1 2.1v3.44a2.1 2.1 0 0 1-2.1 2.1ZM16 19.64a2.09 2.09 0 0 0 2-1.69l.58-2.88a2 2 0 0 0 0-.41v-.56a2.1 2.1 0 0 0-2.1-2.1H16a2.1 2.1 0 0 0-2.1 2.1v3.44a2.1 2.1 0 0 0 2.1 2.1Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWeightScales = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.5,
    width: 21,
    height: 21,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 7.23c4.17-3.82 9.19-3.82 13.36 0l-1.91 2.86a11.51 11.51 0 0 0-9.54 0ZM12 6.27v2.87M12 12.95v6.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWeightsChair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.17 15.83h7.67a1.92 1.92 0 0 1 1.92 1.92v1.92H6.25v-1.92a1.92 1.92 0 0 1 1.92-1.92ZM8.17 23.5v-3.83M15.83 23.5v-3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.17 3.38h7.67v12.46H8.17zM12 .5v6.71"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.42 9.13 1.91-1.92h15.34l1.91 1.92"
  }));
};

const SvgWeightsGym = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 2.42,
    y: 6.25,
    width: 3.83,
    height: 11.5,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 17.75,
    y: 6.25,
    width: 3.83,
    height: 11.5,
    rx: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M.5 12h1.92M6.25 12h11.5M21.58 12h1.92"
  }));
};

const SvgWhatsapp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.5 1.5a10 10 0 0 0-8.82 14.7L2.5 21.5l5.3-1.18A10 10 0 1 0 12.5 1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m14.88 12.93 2.86 2.86s-3.81 3.81-8.57-1-1-8.57-1-8.57l2.86 2.86-.05.1a2.78 2.78 0 0 0 .53 3.23 2.78 2.78 0 0 0 3.23.53Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWheatHarvest = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M10.06 3.1h2.7a4 4 0 0 1 4 4v1.4h-2.7a4 4 0 0 1-4-4V3.1Z",
    transform: "rotate(45 13.43 5.793)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.88 7.87h2.7v1.35a4 4 0 0 1-4 4h-2.7v-1.3a4 4 0 0 1 4-4Z",
    transform: "rotate(-135 18.202 10.567)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.24 6.91h2.7a4 4 0 0 1 4 4v1.35h-2.7a4 4 0 0 1-4-4V6.91Z",
    transform: "rotate(45 9.61 9.61)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.06 11.69h2.7V13a4 4 0 0 1-4 4H11v-1.26a4 4 0 0 1 4.06-4.05Z",
    transform: "rotate(-135 14.388 14.385)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.42 10.73h2.7a4 4 0 0 1 4 4v1.35H6.47a4 4 0 0 1-4-4v-1.35h-.05Z",
    transform: "rotate(45 5.793 13.44)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.24 15.5h2.7v1.35a4 4 0 0 1-4 4H7.19v-1.3a4 4 0 0 1 4.05-4.05Z",
    transform: "rotate(-135 10.569 18.204)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 1.5h1.68a4 4 0 0 1 4 4v1.73h-1.63a4 4 0 0 1-4-4V1.5h-.05Z",
    transform: "rotate(90 19.635 4.365)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m1.5 22.5 4.77-4.77"
  }));
};

const SvgWheat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.17 3.55h1.89a3.78 3.78 0 0 1 3.78 3.78v1.89h-1.9a3.78 3.78 0 0 1-3.77-3.78V3.55Z",
    transform: "rotate(45 12.006 6.383)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 8.27h1.89A3.78 3.78 0 0 1 17.66 12v1.89h-1.88A3.78 3.78 0 0 1 12 10.16V8.27Z",
    transform: "rotate(90 14.835 11.105)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.34 8.27h1.88A3.78 3.78 0 0 1 12 12v1.89h-1.89a3.78 3.78 0 0 1-3.78-3.78V8.27h.01Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13.94h1.89a3.78 3.78 0 0 1 3.78 3.78v1.88h-1.89A3.78 3.78 0 0 1 12 15.83v-1.89Z",
    transform: "rotate(90 14.83 16.77)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.34 13.94h1.88A3.78 3.78 0 0 1 12 17.71v1.89h-1.89a3.78 3.78 0 0 1-3.78-3.78v-1.88h.01ZM12 23.38V10.16",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWheelbarrowWheel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.81 14.91h6.86V7.26H1.5V12a2.86 2.86 0 0 0 2.87 2.87h3M23.5 14.91h-5.74M21.59 18.74v-3.83",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 10.11,
    cy: 15.87,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWheelbarrow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.24 7.26H22.5v1L21.06 10a7.94 7.94 0 0 1-6.21 3h-6.7",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 4.39h2.71a2.87 2.87 0 0 1 2.73 2l3.82 11.44a1.33 1.33 0 0 0 1.26.91 1.33 1.33 0 0 0 1.26-.91L13.89 13h1.91l3.83 5.74",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 19.63,
    cy: 18.74,
    r: 2.87,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWheelchair = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 7.21,
    cy: 16.79,
    r: 5.75,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 17.75,
    cy: 20.63,
    r: 1.92,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M.5 1.46h1.92a2.88 2.88 0 0 1 2.87 2.87v5.75M15.83 9.13v5.75h-2.87M5.29 11.38V6.25h12.46",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m19.67 20.63-.96-5.75h-5.75M23.5 20.63h-3.83"
  }));
};

const SvgWhiteHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M19 11H5.05A7 7 0 0 1 19 11Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.32 11H9.68c0-3.83 1-6.95 2.32-6.95s2.32 3.14 2.32 6.95ZM12 .5v3.83M22.52 14.85H1.48M23.48 22.5H.52M12 22.5v-7.65M15.83 22.5v-7.65M19.65 22.5v-7.65M4.35 22.5v-7.65M8.17 22.5v-7.65M3.39 11.02h17.22v3.83H3.39z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWhiteboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.42 4.33h19.17v15.33H2.42zM.5 19.67h23"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.43 15.83h1.93a2.39 2.39 0 0 1 2.39 2.39v1.44H11v-1.44a2.39 2.39 0 0 1 2.43-2.39Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiCall = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.43 7.9a2.68 2.68 0 0 1 2.67 2.67M13.43 4.7a5.87 5.87 0 0 1 5.87 5.87",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.43 1.5a9.07 9.07 0 0 1 9.07 9.07M18.75 21.38c-2.43 2.42-8 .79-12.46-3.67S.2 7.68 2.62 5.25l2.66-2.66 5.13 5.13-1.92 1.94a2.07 2.07 0 0 0 0 2.92l2.93 2.93a2.07 2.07 0 0 0 2.92 0l1.94-1.92 5.13 5.13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.93,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 10.91a4.2 4.2 0 0 1 5.94 0M6.8 8.68a7.36 7.36 0 0 1 10.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 14.75a4.2 4.2 0 0 1 5.94 0M6.8 12.53a7.34 7.34 0 0 1 10.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiDrawingTablet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 1.48,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 9.11,
    r: 1.43,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 5.3h1.91M4.36 12.93h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m1.5 21.05 2.86-.48a1 1 0 0 1 .32 1.91c0 .09-3-.47-3.18-.48a.48.48 0 0 1 0-.95Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'round',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.5 21.52H4.36"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 13.91,
    cy: 12.93,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.52 10.55a3.38 3.38 0 0 1 4.78 0M9.14 8.16a6.74 6.74 0 0 1 9.54 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 15.71a4.2 4.2 0 0 1 5.94 0M6.8 13.48a7.36 7.36 0 0 1 10.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgWifiFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.68,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.75 16.39a4.61 4.61 0 0 1 6.5 0M6.32 14a8 8 0 0 1 11.36 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiHouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20 8.5v14H4v-14"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m23 10.5-11-9-11 9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 18.5,
    r: 1,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.17 15.67a4 4 0 0 1 5.66 0M7.05 13.55a7 7 0 0 1 9.9 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiInternet = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 19,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.29 14.06a6.66 6.66 0 0 1 9.42 0M4.14 10.92a11.12 11.12 0 0 1 15.72 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1 7.78a15.55 15.55 0 0 1 22 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.93,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9 10.91a4.2 4.2 0 0 1 5.94 0M6.8 8.68a7.36 7.36 0 0 1 10.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiModem = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 14.86,
    width: 21,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.27 18.68ZM10.09 18.68ZM19.64 18.68H12M4.36 3.41v11.45",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 9.14,
    cy: 11.05,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 7.23A4.76 4.76 0 0 1 13 12M8.18 3.41A8.59 8.59 0 0 1 16.77 12",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifiMonitor = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 21.55v-4.78M7.23 21.55h9.54"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 2.45,
    width: 21,
    height: 15.27,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.3 12a3.82 3.82 0 0 1 5.4 0M6.75 9.4a7.42 7.42 0 0 1 10.5 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgWifiVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M15.91 10.53h4.88a2 2 0 0 1 2 2v7.82a2 2 0 0 1-2 2h-5.86l-1.42-2.12a1.81 1.81 0 0 0-3 0l-1.44 2.03H3.21a2 2 0 0 1-2-2v-7.77a2 2 0 0 1 2-2h4.88M4.18 14.44h1.96M4.18 18.35h1.96",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.53,
    r: 0.98,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.55 7.08a4.87 4.87 0 0 1 6.9 0M5.78 4.32a8.79 8.79 0 0 1 12.44 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWifi = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 19,
    r: 2,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.76 14.76a6 6 0 0 1 8.48 0M4.22 11.22a11 11 0 0 1 15.56 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1 7.62a15.57 15.57 0 0 1 22 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWindStrength = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5.55v22.9M22.5 12.96l-14.32 1.9h-.95V3.41h.95L22.5 5.32v7.64zM18.68 5.32v7.63M14.86 4.36v9.55M11.05 4.36v9.55"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 3.41 2.46 9.14l4.77 5.72"
  }));
};

const SvgWindmil = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 15.82V9.14a2.86 2.86 0 1 0-5.72 0v6.68L7.23 22.5h9.54ZM12 18.68v3.82M12 9.14v1.91M1.5 22.5h21M19.64 9.14h-4.78M9.14 9.14H4.36M17.73 9.14h1.91v.95h-1.91zM12 6.27V1.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    transform: "rotate(-90 12.475 2.455)",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.52 1.98h1.91v.95h-1.91z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 8.18h1.91v.95H4.36zM9.14 15.82h5.72"
  }));
};

const SvgWindmill = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.13 10.11a2.92 2.92 0 0 0 .48 1.6l-2.2 1.46-3.06-3.06v-6.7A1.92 1.92 0 0 1 6.26 1.5l2.68 4 1.46 2.2a2.88 2.88 0 0 0-1.27 2.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.06 14.7 12 17.76H5.3a1.92 1.92 0 0 1-1.91-1.91l4-2.68 2.2-1.46a2.89 2.89 0 0 0 4 .79Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.65 10.11v6.69a1.92 1.92 0 0 1-1.91 1.92l-2.68-4-1.46-2.22a2.89 2.89 0 0 0 .79-4l2.2-1.46Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m20.61 4.37-4 2.68-2.2 1.46a2.89 2.89 0 0 0-4-.79l-1.47-2.2L12 2.46h6.7a1.92 1.92 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.87 10.11a2.85 2.85 0 1 1-.48-1.6 2.9 2.9 0 0 1 .48 1.6ZM12 23.5v-5.74",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWindowCurtains = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m1.76 10-.26.07V1.5h6.68A8.86 8.86 0 0 1 1.76 10ZM8.18 22.5H1.5V10.09A13.27 13.27 0 0 1 8.18 21.6ZM22.24 10l.26.07V1.5h-6.68a8.86 8.86 0 0 0 6.42 8.5ZM15.82 22.5h6.68V10.09a13.27 13.27 0 0 0-6.68 11.51Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21zM4.36 12h15.28M12 1.5v21"
  }));
};

const SvgWindowPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.86 19.64H1.5V1.5h19.09v11.46M1.5 7.23h19.09M4.36 4.36h1.91M8.18 4.36h1.91M16.77 18.68h5.73v3.82h-5.73z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M19.64 14.86a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.91a1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWindowSeat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.47 13.91H8.08l-1-5.67a2.35 2.35 0 0 0-2.32-2A2.35 2.35 0 0 0 2.49 9l1.45 8.72h7.64a1.91 1.91 0 0 0 1.88-2.23 2 2 0 0 0-1.99-1.58ZM.55 22.5h22.9M8.18 17.73v4.77",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 13.91,
    y: 1.5,
    width: 7.64,
    height: 11.45,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 5.32h7.64"
  }));
};

const SvgWindowShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.04 19.64H1.5V1.5h19.09v7.64M1.5 7.23h19.09M4.36 4.36h1.91M8.18 4.36h1.91"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWindow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 18.68h21v3.82h-21zM2.45 1.5h19.09v17.18H2.45z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 5.32h11.45v13.36H6.27zM6.27 12h11.46M12 5.32v13.36"
  }));
};

const SvgWineBottleGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 9.14V1.5H4.36v7.64a6.42 6.42 0 0 0-2.86 5.35v8h9.55v-8a6.43 6.43 0 0 0-2.87-5.35ZM2.45 1.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Ellipse, {
    cx: 6.27,
    cy: 16.3,
    rx: 1.91,
    ry: 2.39,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 8.18h7.64v5.73a3.82 3.82 0 0 1-3.82 3.82 3.82 3.82 0 0 1-3.82-3.82V8.18ZM18.68 22.5v-4.77M21.55 22.5h-5.73M14.86 12.95h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWineBottleHeart = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.28 13.91a1.51 1.51 0 0 0-1.28.69 1.51 1.51 0 0 0-1.28-.69 1.54 1.54 0 0 0-1.53 1.53c0 2.3 2.81 3.07 2.81 3.07s2.81-.77 2.81-3.07a1.54 1.54 0 0 0-1.53-1.53Z",
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 9.14V1.5h-3.82v7.64a6.42 6.42 0 0 0-2.86 5.35v8h9.54v-8a6.42 6.42 0 0 0-2.86-5.35ZM8.18 1.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWineBottle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M13.91 9.14V1.5h-3.82v7.64a6.42 6.42 0 0 0-2.86 5.35v8h9.54v-8a6.42 6.42 0 0 0-2.86-5.35ZM8.18 1.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 17.73,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M7.23 17.73h3.82M12.95 17.73h3.82M8.4 10.8l3.6 2.16 3.6-2.16"
  }));
};

const SvgWineGlass = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 1.5h13.36v6.68A6.68 6.68 0 0 1 12 14.86a6.68 6.68 0 0 1-6.68-6.68V1.5ZM12 22.5v-7.64M16.77 22.5H7.23",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M5.32 7.23c6.68-2.87 6.68 2.86 13.36 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWineGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M2.45 1.5h7.64v8.73a3.68 3.68 0 0 1-3.68 3.68h-.28a3.68 3.68 0 0 1-3.68-3.68V1.5ZM13.91 1.5h7.64v8.73a3.68 3.68 0 0 1-3.68 3.68h-.28a3.68 3.68 0 0 1-3.68-3.68V1.5ZM6.27 22.5v-8.59M17.73 22.5v-8.59M2.45 7.23h7.64M13.91 7.23h7.64M2.45 22.5h7.64M13.91 22.5h7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterCalendar = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 2.43h21V7.2h-21zM1.5 7.2h21v15.27h-21zM6.27.52v3.82M17.73.52v3.82M12 .52v3.82M12 11.98v5.72"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 10.07 12 11.98l-1.91-1.91M10.09 19.61 12 17.7l1.91 1.91M14.86 14.84H9.14M16.77 16.75l-1.91-1.91 1.91-1.91M7.23 12.93l1.91 1.91-1.91 1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.84,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterCold = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.39v17.22M14.39 1 12 3.39 9.61 1M14.87 5.3 12 8.17 9.13 5.3M9.61 23 12 20.61 14.39 23M9.13 18.7 12 15.83l2.87 2.87M4.54 7.7l14.92 8.6M3.67 4.43l.87 3.27-3.26.87M7.64 6.17l1.05 3.92-3.92 1.05M20.33 19.57l-.88-3.27 3.27-.87M16.36 17.83l-1.05-3.92 3.92-1.05M19.46 7.7 4.54 16.3M20.33 4.43l-.88 3.27 3.27.87M16.36 6.17l-1.05 3.92 3.92 1.05M3.67 19.57l.87-3.27-3.26-.87M7.64 17.83l1.05-3.92-3.92-1.05M.52 12h1.91M21.57 12h1.91M6.26 21.94l.96-1.66M16.78 3.72l.96-1.66M17.74 21.94l-.96-1.66M7.22 3.72l-.96-1.66"
  }));
};

const SvgWinterFreeze = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 23.5v-8.18M12 8.68V.5M15.83 2.42 12 6.25 8.17 2.42M8.17 21.58 12 17.75l3.83 3.83M21.96 17.75l-4.98-2.87-2.1-1.22M9.13 10.34 7.02 9.13 2.04 6.25"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m5.62 3.89 1.4 5.24-5.24 1.4M18.38 20.11l-1.4-5.23 5.24-1.41M2.04 17.75l4.98-2.87 2.11-1.22M14.88 10.34l2.1-1.21 4.98-2.88"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.38 3.89-1.4 5.24 5.24 1.4M5.62 20.11l1.4-5.23-5.24-1.41M14.88 10.34v3.32L12 15.32l-2.87-1.66v-3.32L12 8.68l2.88 1.66z"
  }));
};

const SvgWinterHatFashion = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 15.82,
    width: 21,
    height: 6.68,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.32a8.59 8.59 0 0 1 8.59 8.59v1.91H3.41v-1.91A8.59 8.59 0 0 1 12 5.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 5.32a8.59 8.59 0 0 1 8.59 8.59v1.91H3.41v-1.91A8.59 8.59 0 0 1 12 5.32Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.53 5.7a2.86 2.86 0 1 0-5.06 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterJacket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 1.5h1A2.86 2.86 0 0 1 12 4.36v1H8.18V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5h1v3.82H12v-1a2.86 2.86 0 0 1 2.86-2.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.89 5.32H8.11A5.59 5.59 0 0 0 3.24 8a13 13 0 0 0-1.74 6.54v6.05h3.82a1.9 1.9 0 0 0 1.91 1.91h9.54a1.9 1.9 0 0 0 1.91-1.91h3.82v-6.05A13 13 0 0 0 20.76 8a5.59 5.59 0 0 0-4.87-2.68ZM5.32 11.05v9.54M18.68 11.05v9.54M12 5.32V22.5M9.14 17.73H5.32M18.68 17.73h-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterJumper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 1.5H9.14A7.64 7.64 0 0 0 1.5 9.14v11.45h3.82v1.91h13.36v-1.91h3.82V9.14a7.64 7.64 0 0 0-7.64-7.64ZM5.32 7.23v13.36M18.68 7.23v13.36",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 1.5c0 2.11 1.28 3.82 2.86 3.82s2.86-1.71 2.86-3.82M12 11.05v5.72M13.91 9.14 12 11.04l-1.91-1.9M10.09 18.68 12 16.77l1.91 1.91M14.86 13.91H9.14M16.77 15.82l-1.91-1.91L16.77 12M7.23 12l1.91 1.91-1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m18.68 6.97 3.82 3.12V22.5h-21V10.09l3.82-3.12"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 10.09 12 18.68l10.5-8.59"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M5.32 13.21V1.5h13.36v11.71M12 7.23v3.82"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.91 5.32 12 7.23l-1.91-1.91M10.09 12.96 12 11.04l1.91 1.92M13.91 9.14h-3.82M15.82 11.04l-1.91-1.9 1.91-1.91M8.18 7.23l1.91 1.91-1.91 1.9"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 9.14,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterScarf = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.48,
    y: 1.5,
    width: 21.04,
    height: 7.65,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13 9.15h7.65v9.57a1.91 1.91 0 0 1-1.91 1.91h-3.87A1.91 1.91 0 0 1 13 18.72V9.15ZM16.78 23.5v-2.87M12.96 23.5v-4.78M20.61 23.5v-4.78M3.39 4.37 5.3 6.28M7.22 4.37l1.91 1.91M11.04 4.37l1.92 1.91M14.87 4.37l1.91 1.91M18.7 4.37l1.91 1.91M15.83 15.85l1.91 1.91M15.83 12.02l1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterShoppingBag = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 6.27h17.18v14.32a1.91 1.91 0 0 1-1.91 1.91H5.32a1.91 1.91 0 0 1-1.91-1.91V6.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M8.18 9.14V5.32A3.82 3.82 0 0 1 12 1.5a3.82 3.82 0 0 1 3.82 3.82v3.82M12 12v5.73M13.91 10.09 12 12l-1.91-1.91M10.09 19.64 12 17.73l1.91 1.91M14.86 14.86H9.14M16.77 16.77l-1.91-1.91 1.91-1.9M7.23 12.96l1.91 1.9-1.91 1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 14.86,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterShovel = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.02 5.32v9.54M10.11 22.5a8.07 8.07 0 0 0 0-7.64M13.93 22.5a8.13 8.13 0 0 0 0-7.64"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M17.75 14.86a8.13 8.13 0 0 1 0 7.64H6.3a8.13 8.13 0 0 0 0-7.64ZM14.89 4.36l-2.87.96-2.86-.96V1.5h5.73v2.86z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterSleigh = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.11 9.13a4.78 4.78 0 0 0-4.78-4.78H1.46v5.74a5.74 5.74 0 0 0 5.74 5.74h8.6A4.79 4.79 0 0 0 20.59 11H11a1.91 1.91 0 0 1-1.89-1.87ZM.5 19.65h18.17a3.82 3.82 0 0 0 3.83-3.82M5.28 15.83v3.82M14.85 15.83v3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterSnowCap = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M11.8 5.32A10.73 10.73 0 0 0 1.5 16.17v4.32a2 2 0 0 0 1.59 2 1.91 1.91 0 0 0 2.23-1.88v-.1a2.75 2.75 0 0 1 2.76-2.76h7.84a2.75 2.75 0 0 1 2.76 2.76 2 2 0 0 0 1.59 2 1.9 1.9 0 0 0 2.23-1.88v-4.81a10.5 10.5 0 0 0-10.7-10.5ZM9.14 13.91h1.91M5.32 13.91h1.91M12.95 13.91h1.91M16.77 13.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.78 5.47a2.34 2.34 0 0 0 .61-1.58 2.39 2.39 0 0 0-4.78 0 2.34 2.34 0 0 0 .61 1.58M20.59 13.91h1.91M1.5 13.91h1.91",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWinterSnow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 3.41v17.18"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 2.45,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 21.55,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.39 5.79 12 8.18 9.61 5.79M9.61 18.2 12 15.82l2.39 2.38M4.56 7.7l14.88 8.6"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.73,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.73,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.27,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m7.82 6.83.87 3.26-3.26.87M16.18 17.17l-.87-3.26 3.26-.87M19.44 7.7 4.56 16.3"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.27,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 20.27,
    cy: 7.23,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 3.73,
    cy: 16.77,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.18 6.83-.87 3.26 3.26.87M7.82 17.17l.87-3.26-3.26-.87M23.45 12ZM2.45 12ZM17.73 2.08l-.48.83-.48.82.48-.82ZM7.23 20.27l-.48.82-.48.83.48-.83ZM6.27 2.08l.48.83.48.82-.48-.82ZM16.77 20.27l.48.82.48.83-.48-.83Z"
  }));
};

const SvgWinterSnowflake = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12 20v-5M12 9V4M15 1l-3 3-3-3M9 23l3-3 3 3M10 18h4M10 6h4M18.93 16l-1.73-1-2.6-1.5M9.4 10.5 6.8 9 5.07 8M3.97 3.9 5.07 8 .97 9.1M20.03 20.1l-1.1-4.1 4.1-1.1M16.2 16.73l2-3.46M5.8 10.73l2-3.46M5.07 16l1.73-1 2.6-1.5M14.6 10.5 17.2 9l1.73-1M20.03 3.9 18.93 8l4.1 1.1M3.97 20.1l1.1-4.1-4.1-1.1M7.8 16.73l-2-3.46M18.2 10.73l-2-3.46"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15 12a3 3 0 1 1-.4-1.5A3 3 0 0 1 15 12Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWirelessKeyboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 9.14,
    width: 21,
    height: 13.36,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 18.68h7.64M5.32 15.82h1.91M9.14 15.82h1.91M12.95 15.82h1.91M16.77 15.82h1.91M5.32 12.95h1.91M9.14 12.95h1.91M12.95 12.95h1.91M16.77 12.95h1.91M9.3 6.22a3.82 3.82 0 0 1 5.4 0M6.75 3.67a7.44 7.44 0 0 1 10.5 0"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 8.18,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }));
};

const SvgWirelessMouse = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M9.09 8.18h3.82A3.82 3.82 0 0 1 16.73 12v4.77A5.73 5.73 0 0 1 11 22.5a5.73 5.73 0 0 1-5.73-5.73V12a3.82 3.82 0 0 1 3.82-3.82ZM11 11.05v2.86M6.28 3.46a6.67 6.67 0 0 1 9.44 0M8.3 5.48a3.82 3.82 0 0 1 5.4 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWirelessPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M8.18 16.77h7.64v5.73H8.18z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 13a1.91 1.91 0 0 1 1.91 1.91v1.91h-3.82v-1.96A1.91 1.91 0 0 1 12 13ZM8.63 10.53a4.77 4.77 0 0 1 6.74 0M5.93 7.83a8.59 8.59 0 0 1 12.14 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M3.23 5.13a12.41 12.41 0 0 1 17.54 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWirelessRouter = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 13.95,
    width: 21,
    height: 7.64,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 23.5v-1.91M19.64 23.5v-1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 5.32,
    cy: 17.77,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 17.77H12M13.91 17.77h1.91M17.73 17.77h1.91"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 10.14,
    r: 0.95,
    style: {
      fill: `${props.color? props.color: "#000"}`
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.3 7.44a3.82 3.82 0 0 1 5.4 0M6.6 4.74a7.62 7.62 0 0 1 10.8 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWirelessSmartwatch = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m2.74 6.39.64-4.89h7.64l.64 4.89M2.74 17.61l.64 4.89h7.64l.64-4.89M14.84 12h-1.91M16.58 9.3a3.82 3.82 0 0 1 0 5.4M19.13 6.75a7.42 7.42 0 0 1 0 10.5"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 1.47,
    y: 6.27,
    width: 11.45,
    height: 11.45,
    rx: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.06 12A2.86 2.86 0 1 1 7.2 9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWishBone = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 .5v3.83a9.15 9.15 0 0 0-5.4 10.06l.19 1A9.32 9.32 0 0 1 6.47 20l-1.18 3.5M12 4.33a9.15 9.15 0 0 1 5.4 10.06l-.19 1a9.32 9.32 0 0 0 .32 4.61l1.18 3.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWithdrawDollarSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "withdrawl dollar"
  }, /*#__PURE__*/React.createElement(Path, {
    d: "M10.09 16.77h2.39a1.43 1.43 0 0 0 1.43-1.43h0a1.43 1.43 0 0 0-1.43-1.43h-1a1.43 1.43 0 0 1-1.43-1.43h0a1.43 1.43 0 0 1 1.43-1.43h2.39M12 9.14v1.91M12 16.77v1.91M22.5 1.5v9.54h-4.77V6.27H6.27v4.77H1.5V1.5h21zM6.27 6.27h11.46",
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      strokeLinecap: 'square',
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M6.27 6.27h11.45V22.5H6.27z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M4.36 6.27h15.28"
  })));
};

const SvgWomanVrGlasses = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M6.84 5.15A5.46 5.46 0 0 1 12 1.5a5.39 5.39 0 0 1 3.87 1.61 5.26 5.26 0 0 1 1.29 2M17.48 5.15v4.57h-4.57a1 1 0 0 0-1.82 0H6.52V5.15ZM17.4 9.72a5.48 5.48 0 0 1-10.8 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2 22.5c0-4.5 4.45-8.22 10-8.22S22 18 22 22.5",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m6.52 8.8-2.74 2.74a3.64 3.64 0 0 0 3.63 3.66M17.48 8.8l2.74 2.74a3.64 3.64 0 0 1-3.63 3.63M4.7 6.98h1.82M17.48 6.98h1.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWoodLog = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 6.82,
    cy: 17.18,
    r: 5.32,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 6.82,
    cy: 17.18,
    r: 2.35,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.94 10.59 10.59 20.94a5.32 5.32 0 0 0-7.53-7.53L13.41 3.06a5.32 5.32 0 0 1 7.53 7.53ZM9.35 12.41l3.44-3.44M21.94 4.36l-3.76 3.76M13.73 13.18l3.33-3.33M15.76 5.41l3.3-3.29",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWordpress = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m4.36 7.23 4.78 12.41L12 9.14M7.23 7.23H2.45M13.91 7.23H9.14"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m16.77 4.36.38.38a5.23 5.23 0 0 1 1.53 3.7 5.31 5.31 0 0 1-.18 1.37l-2.68 9.83-4.77-12.41",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWorkoutDay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.48 3.37h21.04v4.78H1.48zM1.48 8.15h21.04V22.5H1.48zM3.39 14.85H5.3M5.3 11.98v5.74M18.7 11.98v5.74M15.83 11.02v7.65M8.17 11.02v7.65M8.17 14.85h7.66M18.7 14.85h1.91M12 .5v4.78M6.26.5v4.78M17.74.5v4.78"
  }));
};

const SvgWorkoutList = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.15 22.5H3.41v-21h17.18v21h-6.44zM6.27 11.05h1.91M10.09 11.05h7.64M6.27 14.86h1.91M10.09 14.86h7.64M6.27 18.68h1.91M10.09 18.68h7.64M7.23 6.27h9.54M9.14 4.36v3.82M14.86 4.36v3.82"
  }));
};

const SvgWorkoutTop = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 13.91v8.59h-21v-8.59a6.42 6.42 0 0 0 2.86-5.35V1.5h3.82v5.56a3.93 3.93 0 0 0 3.45 4 3.83 3.83 0 0 0 4.19-3.8V1.5h3.82v7.06a6.42 6.42 0 0 0 2.86 5.35ZM8.18 1.5l7.64 7.64M15.82 1.5 8.18 9.14M1.5 18.68h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWorldLandmark = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m6.26 4.33 1.91 1.91v2.87l1.92 1.91M17.74 4.33l-1.91 1.91v2.87l-1.92 1.91M9.13 2.41v1.92M12 .5v1.91M14.87 2.41v1.92"
  }), /*#__PURE__*/React.createElement(Rect, {
    x: 11.04,
    y: 7.2,
    width: 1.91,
    height: 2.87,
    rx: 0.96,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M10.09 11.02h3.82l.96 11.48H9.13l.96-11.48zM4.35 22.5h15.3"
  }));
};

const SvgWreathBell = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 5.73,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 6.27a2.86 2.86 0 0 1 2.86 2.86V12H9.14V9.14A2.86 2.86 0 0 1 12 6.27Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12.95,
    r: 0.95,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 2.65c-.08 1.24-1 1.3-1 2.67s1 1.43 1 2.86a2.23 2.23 0 0 1-.22 1l-.09.15M17.08 14.66l-.09.15a2.23 2.23 0 0 0-.22 1c0 1.43 1 1.43 1 2.86s-.87 1.43-.95 2.67",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.22 2.65c-.08 1.24-1 1.3-1 2.67s1 1.43 1 2.86a2.23 2.23 0 0 1-.22 1l-.09.15M17.08 14.66l-.09.15a2.23 2.23 0 0 0-.22 1c0 1.43 1 1.43 1 2.86s-.87 1.43-.95 2.67M1.51 11.46c1 .69.66 1.48 1.84 2.16s1.72-.11 3 .6a2.18 2.18 0 0 1 .76.7l.08.15M16.85 8.93l.08.15a2.18 2.18 0 0 0 .76.7c1.24.71 1.72-.11 3 .6s.81 1.47 1.84 2.16",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.51 11.46c1 .69.66 1.48 1.84 2.16s1.72-.11 3 .6a2.18 2.18 0 0 1 .76.7l.08.15M16.85 8.93l.08.15a2.18 2.18 0 0 0 .76.7c1.24.71 1.72-.11 3 .6s.81 1.47 1.84 2.16M6.29 20.82c1.11-.56 1.6.16 2.79-.52s.76-1.54 2-2.26a2.23 2.23 0 0 1 1-.31h.16M11.77 6.27h.16a2.23 2.23 0 0 0 1-.31c1.24-.72.76-1.54 2-2.26s1.68 0 2.79-.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.29 20.82c1.11-.56 1.6.16 2.79-.52s.76-1.54 2-2.26a2.23 2.23 0 0 1 1-.31h.16M11.77 6.27h.16a2.23 2.23 0 0 0 1-.31c1.24-.72.76-1.54 2-2.26s1.68 0 2.79-.52",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWreathBow = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M18.4 8.18a8.59 8.59 0 1 1-12.8 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 13.91,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 4.55v1.54a1.78 1.78 0 0 1-.12.7 2.09 2.09 0 0 1-2 1.39h-1.51a2.09 2.09 0 0 1-2-1.39 1.78 1.78 0 0 1-.12-.7V4.55a1.89 1.89 0 0 1 .2-.9 2.09 2.09 0 0 1 1.89-1.2h1.54a2.09 2.09 0 0 1 1.89 1.2 1.89 1.89 0 0 1 .23.9Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M20.59 3.68V6a2.17 2.17 0 0 1-2.18 2.17h-.2a2.21 2.21 0 0 1-.92-.2l-2.55-1.18a1.78 1.78 0 0 0 .12-.7V4.55a1.89 1.89 0 0 0-.2-.9l2.5-1.76a2.18 2.18 0 0 1 3.43 1.79ZM9.14 6.09a1.78 1.78 0 0 0 .12.7L6.71 8a2.21 2.21 0 0 1-.92.2h-.2A2.17 2.17 0 0 1 3.41 6V3.68a2.18 2.18 0 0 1 3.43-1.79l2.5 1.76a1.89 1.89 0 0 0-.2.9Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWreath = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M5.51 18a9.55 9.55 0 1 1 13 0",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 11.05,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M11.05 4.36h1.9M18.68 10.09V12M5.32 10.09V12M16.05 5.65 17.4 7M7.95 5.65 6.6 7M9.71 21.35l-1 .72a2.12 2.12 0 0 1-1.28.43 2.15 2.15 0 0 1-2.15-2.15v-1.43a2.15 2.15 0 0 1 2.15-2.15 2.19 2.19 0 0 1 1.28.43l1 .72M14.29 17.92l1-.72a2.19 2.19 0 0 1 1.28-.43 2.15 2.15 0 0 1 2.15 2.15v1.43a2.15 2.15 0 0 1-2.15 2.15 2.12 2.12 0 0 1-1.28-.43l-1-.72"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWrenchClamp = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M19.63 9.15h-7.65v3.83h1.91l5.74-1.92V9.15z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M13.89 1.5H8.15v18.17h3.83V5.33h7.65V3.41L13.89 1.5zM3.37 5.33h2.9l1.88-.96M3.37 9.15h2.96l1.82.96M10.07 23.5v-3.83"
  }));
};

const SvgWrench = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m21.94 4.76-3.82 3.82-2-.68-.68-2 3.82-3.82a5.71 5.71 0 0 0-7.93 6.81L1.5 18.68l3.82 3.82 9.81-9.81a5.71 5.71 0 0 0 6.81-7.93Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWriteBook = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 18.68h6.68A3.82 3.82 0 0 1 12 22.5H1.5v-3.82ZM15.82 18.68h6.68v3.82H12a3.82 3.82 0 0 1 3.82-3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 6.27h6.68A3.82 3.82 0 0 1 12 10.09V22.5H1.5V6.27ZM19.64 6.27h2.86V22.5H12V10.09a3.82 3.82 0 0 1 3.82-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "m19.64 13-1.91 1.91L15.82 13V3.41a1.9 1.9 0 0 1 1.91-1.91 1.91 1.91 0 0 1 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgWritePaper = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m5.32 14.86-1.91 2.87-1.91-2.87V3.41A1.9 1.9 0 0 1 3.41 1.5a1.91 1.91 0 0 1 1.91 1.91ZM20.59 22.5H8.18a1.92 1.92 0 0 1-1.91-1.91v-1.91h12.41v1.91a1.92 1.92 0 0 0 1.91 1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 1.5v19.09a1.91 1.91 0 0 1-3.82 0v-1.91h-8.59V1.5ZM12.95 6.27h6.69M12.95 10.09h6.69M12.95 13.91h6.69",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXRay = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M1.5 1.5h21v21h-21z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M9.14 14.86H12v1.91a1.91 1.91 0 0 1-1.91 1.91h-1a1.91 1.91 0 0 1-1.91-1.91 1.91 1.91 0 0 1 1.91-1.91Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 14.86h2.86a1.91 1.91 0 0 1 1.91 1.91 1.91 1.91 0 0 1-1.91 1.91h-1A1.91 1.91 0 0 1 12 16.77v-1.91ZM12 4.36v10.5M7.23 6.27h9.54M6.27 9.14h11.46M7.23 12h9.54",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkChat = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.5 12a9.5 9.5 0 1 0-9.5 9.5h9.5l-2.66-2.92A9.43 9.43 0 0 0 21.5 12ZM9.07 9.11l5.55 5.78M14.85 9.11 9.3 14.89",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkChats = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m12.44 9.57 4.58 4.77M17.21 9.57l-4.58 4.77M22.5 10.05v10.5l-2.86-2.87h-8.59a3.81 3.81 0 0 1-3.7-2.86 3.77 3.77 0 0 1-.12-1v-3.77a3.82 3.82 0 0 1 3.82-3.82h7.63a3.82 3.82 0 0 1 3.82 3.82Z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.77 5.27v1h-5.72a3.82 3.82 0 0 0-3.82 3.82v2.86H4.36L1.5 15.77V5.27a3.82 3.82 0 0 1 3.82-3.82H13a3.82 3.82 0 0 1 3.77 3.82Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m16.77 7.23-9.54 9.54M7.23 7.23l9.54 9.54"
  }));
};

const SvgXmarkClipboard = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 15.82 12 13l-2.86-2.91L12 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 10.09 12 13l-2.86 2.82L12 13Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M15.82 2.46h4.77V22.5H3.41V2.46h4.77"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M15.82 1.5v1.91a1.92 1.92 0 0 1-1.91 1.91h-3.82a1.92 1.92 0 0 1-1.91-1.91V1.5Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkComment = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 6.25-7.64 7.64M8.18 6.25l7.64 7.64M18.68 1.48H5.32A3.82 3.82 0 0 0 1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h3.82L12 21.52l2.86-2.86h3.82a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82Z"
  }));
};

const SvgXmarkFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 16.77 12 13.91l-2.86-2.86L12 13.91ZM14.86 11.05 12 13.91l-2.86 2.86L12 13.91ZM20.59 6.27V22.5H3.41v-21h12.41l4.77 4.77z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M20.59 6.27v.96h-5.73V1.5h.96l4.77 4.77z"
  }));
};

const SvgXmarkFolder = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m8.18 11.05 7.64 7.63M15.82 11.05l-7.64 7.63M12 3.41 10.09 1.5H1.5v19.09a1.9 1.9 0 0 0 1.91 1.91h17.18a1.9 1.9 0 0 0 1.91-1.91V3.41ZM1.5 7.23h21"
  }));
};

const SvgXmarkMessage = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m14.86 7.2-5.72 5.73M9.14 7.2l5.72 5.73M1.5 5.3v9.54a3.82 3.82 0 0 0 3.82 3.82h1.91v2.86L13 18.66h5.73a3.82 3.82 0 0 0 3.82-3.82V5.3a3.82 3.82 0 0 0-3.82-3.82H5.32A3.82 3.82 0 0 0 1.5 5.3Z"
  }));
};

const SvgXmarkPadlock = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M2.45 11.05h19.09V22.5H2.45zM12 1.5a6.68 6.68 0 0 1 6.68 6.68V11H5.32V8.18A6.68 6.68 0 0 1 12 1.5ZM14.86 13.91l-5.72 5.73M9.14 13.91l5.72 5.73"
  }));
};

const SvgXmarkPapertray = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M14.85 5.28 9.1 11.03M9.1 5.28l5.75 5.75M22.53 14.87v7.67H1.43v-7.67L5.26 1.44h13.43l3.84 13.43z"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M2.39 14.87h5.75a3.84 3.84 0 1 0 7.67 0h5.76",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22.53 14.87h-6.72a3.84 3.84 0 0 1-7.67 0H1.43",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  })));
};

const SvgXmarkShieldServer = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Ellipse, {
    cx: 9.14,
    cy: 4.36,
    rx: 7.64,
    ry: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M1.5 9.14c0 1 1.36 1.87 3.41 2.38a17.84 17.84 0 0 0 4.23.48 17 17 0 0 0 1.91-.1M1.5 13.91c0 1.58 3.42 2.86 7.64 2.86.66 0 1.31 0 1.92-.09M1.5 4.36v14.32M16.77 9.14V4.36M1.5 18.68c0 1.59 3.42 2.87 7.64 2.87a17.71 17.71 0 0 0 3.56-.34M17.74 22.48h-.06A6.58 6.58 0 0 1 13 16.2v-3.78l4.73-1.37 4.82 1.37v3.75a6.56 6.56 0 0 1-4.81 6.31ZM19.64 14.86l-3.82 3.82M15.82 14.86l3.82 3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkShield = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12 22.5a11.87 11.87 0 0 1-9.55-11.64V3.41L12 1.5l9.55 1.91v7.45A11.87 11.87 0 0 1 12 22.5ZM15.82 8.18l-7.64 7.64M8.18 8.18l7.64 7.64",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkTestTube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M14.86 10.09V1.5H9.14v8.59l-6.29 9a2.19 2.19 0 0 0-.4 1.25 2.18 2.18 0 0 0 2.18 2.16h14.74a2.18 2.18 0 0 0 2.18-2.18 2.19 2.19 0 0 0-.4-1.25ZM7.23 1.5h9.54M14.86 13.91l-5.72 5.73M9.14 13.91l5.72 5.73",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkTicket = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 17.73v-2.87A2.86 2.86 0 0 1 19.64 12a2.87 2.87 0 0 1 2.86-2.86V4.36h-21v4.78a2.82 2.82 0 0 1 2 .84 2.85 2.85 0 0 1 0 4 2.82 2.82 0 0 1-2 .84v4.78h21ZM9.14 14.86l5.72-5.72M14.86 14.86 9.14 9.14",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgXmarkWebsite = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "roll brush"
  }, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m9.11 12.05 5.76 5.75M14.87 12.05 9.11 17.8M1.44 1.5h21.1v21.1H1.44z"
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M22.54 7.25H1.44V1.5h21.1v5.75zM4.32 4.38h1.91M8.15 4.38h1.92M11.99 4.38h1.92"
  })));
};

const SvgYahoo = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "M12.96 7.23 9.14 17.41 7.23 22.5H3.41l1.91-5.09L1.5 7.23h3.82l1.91 5.08 1.91-5.08h3.82zM22.5 1.5l-3.58 9.54H15.1l3.58-9.54h3.82z"
  }), /*#__PURE__*/React.createElement(Circle, {
    cx: 15.82,
    cy: 14.86,
    r: 1.91,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgYenSignCircle = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(G, {
    "data-name": "yen coin"
  }, /*#__PURE__*/React.createElement(Circle, {
    cx: 12,
    cy: 12,
    r: 10.5,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M15.82 7.23 12 12 8.18 7.23M12 18.68V12M9.14 12.95h5.72M9.14 15.82h5.72"
  })));
};

const SvgYenSign = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeLinecap: 'square',
      strokeMiterlimit: 10
    },
    d: "M12 22.5v-9.55M7.23 12.95h9.54M7.23 16.77h9.54M5.32 1.5v1.91L12 12.96l6.68-9.55V1.5"
  }));
};

const SvgYogaMatt = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Circle, {
    cx: 4.36,
    cy: 19.64,
    r: 2.86,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.23 4.36a2.87 2.87 0 0 0-5.73 0M7.23 7.23H22.5V22.5H4.36M7.23 19.64V4.36M1.5 4.36v15.28M18.68 10.09v9.55",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgYoutube = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Rect, {
    x: 1.5,
    y: 3.41,
    width: 21,
    height: 17.18,
    rx: 3.82,
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    },
    d: "m15.82 12-7.64 3.82V8.18L15.82 12z"
  }));
};

const SvgZeplin = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5 10.09a5.67 5.67 0 0 1-1.68 4.05 5.59 5.59 0 0 1-3.4 1.64 4.63 4.63 0 0 1-.65 0H14.4a19.48 19.48 0 0 1-6-1l-.44-.14a19.53 19.53 0 0 1-6.2-3.49l-.22-.18V9.14L1.72 9A20 20 0 0 1 14.4 4.36h2.37a5.74 5.74 0 0 1 5.73 5.73Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M7.92 5.46A19.73 19.73 0 0 0 1.72 9l-.22.19V3.41h1ZM7.92 14.72l-5.47 2h-1v-5.67l.22.18a19.53 19.53 0 0 0 6.25 3.49ZM17.42 15.78l-1.6 4.81h-5.73l-1.91-5.73h.18a19.48 19.48 0 0 0 6 1h2.37a4.63 4.63 0 0 0 .69-.08ZM1.5 10.09h21",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgZipFile = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M3.41 22.5h17.18V5.32L16.77 1.5H3.41Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M12 1.5a1.91 1.91 0 0 1 1.91 1.91v3.82h-3.82V3.41A1.91 1.91 0 0 1 12 1.5ZM12 11.05ZM13.91 13ZM12 14.86ZM13.91 16.77ZM13.91 20.59ZM12 18.68Z",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgZoomIn = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "m13 22.5-5.18-5.14a2 2 0 0 1-.59-1.43 2 2 0 0 1 2-2 2 2 0 0 1 1.43.59l1.34 1.3V6.38a2 2 0 0 1 1.74-2 1.87 1.87 0 0 1 1.51.56 1.83 1.83 0 0 1 .57 1.34V12l5 .72a1.91 1.91 0 0 1 1.64 1.89 17.18 17.18 0 0 1-1.82 7.71l-.09.18M5.32 10.09H1.5V6.27M6.27 1.5h3.82v3.82M5.32 6.27 1.5 10.09M6.27 5.32l3.82-3.82",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

const SvgZoomOut = _ref => {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(Svg, _extends({
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: props.size == null ? 24 : props.size,
    height: props.size == null ? 24 : props.size,
    replaceAttrValues: true,
    "stroke-width": fontWidth[props.weight] ? fontWidth[props.weight] : fontWidth.medium,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement(Path, {
    d: "M12.87 22 8 17.13a1.91 1.91 0 0 1-.57-1.37 1.94 1.94 0 0 1 3.31-1.37L12 15.65v-9a1.89 1.89 0 0 1 1.62-1.95 1.84 1.84 0 0 1 2 1.82V12l4.82.69A1.83 1.83 0 0 1 22 14.5a16.54 16.54 0 0 1-1.74 7.37l-.09.17M10.13 5.61H6.48V1.96M1 7.43h3.65v3.66M4.65 7.43 1 11.09M6.48 5.61l3.65-3.65",
    style: {
      fill: 'none',
      stroke: `${props.color? props.color: "#000"}`,
      strokeMiterlimit: 10
    }
  }));
};

export { SvgAbacus as Abacus, SvgAccount as Account, SvgAccountArrows as AccountArrows, SvgAccountWebsite as AccountWebsite, SvgAcorn as Acorn, SvgAddChat as AddChat, SvgAddChats as AddChats, SvgAddComment as AddComment, SvgAddComments as AddComments, SvgAddFolder as AddFolder, SvgAddMessage as AddMessage, SvgAddMessages as AddMessages, SvgAdult18 as Adult18, SvgAeroplane as Aeroplane, SvgAirConditioner as AirConditioner, SvgAirline as Airline, SvgAirlineTicket as AirlineTicket, SvgAirplane as Airplane, SvgAirpods as Airpods, SvgAlarmClock as AlarmClock, SvgAlertFolder as AlertFolder, SvgAlignCenter as AlignCenter, SvgAlignDown as AlignDown, SvgAlignIndentRight as AlignIndentRight, SvgAlignJustifyDown as AlignJustifyDown, SvgAlignJustifyUp as AlignJustifyUp, SvgAlignLeft as AlignLeft, SvgAlignLeftIndent as AlignLeftIndent, SvgAlignRight as AlignRight, SvgAmbulance as Ambulance, SvgAmbulanceMedical as AmbulanceMedical, SvgAnchor as Anchor, SvgAnchorTransform as AnchorTransform, SvgAndroid as Android, SvgAngel as Angel, SvgAngelHeart as AngelHeart, SvgAntlers as Antlers, SvgApartmentBuilding as ApartmentBuilding, SvgApartmentBuildings as ApartmentBuildings, SvgApartmentsBuilding as ApartmentsBuilding, SvgArcTriomph as ArcTriomph, SvgArchiveMusic as ArchiveMusic, SvgArmchair as Armchair, SvgArrow360 as Arrow360, SvgArrowDown as ArrowDown, SvgArrowDownChart as ArrowDownChart, SvgArrowDownChartDecrease as ArrowDownChartDecrease, SvgArrowDownCloud as ArrowDownCloud, SvgArrowDownEnvelope as ArrowDownEnvelope, SvgArrowDownFolder as ArrowDownFolder, SvgArrowDownGraph as ArrowDownGraph, SvgArrowDownHome as ArrowDownHome, SvgArrowDownLineChat as ArrowDownLineChat, SvgArrowDownLineMessage as ArrowDownLineMessage, SvgArrowDownPage as ArrowDownPage, SvgArrowDownPapertray as ArrowDownPapertray, SvgArrowDownShield as ArrowDownShield, SvgArrowDownShoppingCart as ArrowDownShoppingCart, SvgArrowDownToBracket as ArrowDownToBracket, SvgArrowDownToSquare as ArrowDownToSquare, SvgArrowDownTrolley as ArrowDownTrolley, SvgArrowLeftChat as ArrowLeftChat, SvgArrowLeftMessage as ArrowLeftMessage, SvgArrowReturn as ArrowReturn, SvgArrowRightChat as ArrowRightChat, SvgArrowRightMessage as ArrowRightMessage, SvgArrowUp as ArrowUp, SvgArrowUpBill as ArrowUpBill, SvgArrowUpChart as ArrowUpChart, SvgArrowUpCloud as ArrowUpCloud, SvgArrowUpDownHouse as ArrowUpDownHouse, SvgArrowUpEnvelope as ArrowUpEnvelope, SvgArrowUpFromSquare as ArrowUpFromSquare, SvgArrowUpGraph as ArrowUpGraph, SvgArrowUpGraphIncrease as ArrowUpGraphIncrease, SvgArrowUpHouse as ArrowUpHouse, SvgArrowUpLineChat as ArrowUpLineChat, SvgArrowUpLineMessage as ArrowUpLineMessage, SvgArrowUpPackage as ArrowUpPackage, SvgArrowUpPapertray as ArrowUpPapertray, SvgArrowUpShield as ArrowUpShield, SvgArrowUpShoppingCart as ArrowUpShoppingCart, SvgArrowUpTrolley as ArrowUpTrolley, SvgArrows360 as Arrows360, SvgArrowsHouse as ArrowsHouse, SvgArrowsRecycle as ArrowsRecycle, SvgArrowsUser as ArrowsUser, SvgArtboard as Artboard, SvgArtboardDuplicate as ArtboardDuplicate, SvgArtboards as Artboards, SvgAsiaGate as AsiaGate, SvgAsianBuilding as AsianBuilding, SvgAsianGate as AsianGate, SvgAsianPagoda as AsianPagoda, SvgAudioAlbum as AudioAlbum, SvgAudioCassette as AudioCassette, SvgAudioCd as AudioCd, SvgAudioChat as AudioChat, SvgAudioHeadphones as AudioHeadphones, SvgAudioMessage as AudioMessage, SvgAudioMicrophone as AudioMicrophone, SvgAudioPlayer as AudioPlayer, SvgAudioSpeaker as AudioSpeaker, SvgAudioWave as AudioWave, SvgAudioWebsite as AudioWebsite, SvgAvocado as Avocado, SvgAxe as Axe, SvgB as B, SvgBack as Back, SvgBackVr as BackVr, SvgBackpack as Backpack, SvgBackpackLuggage as BackpackLuggage, SvgBackward as Backward, SvgBacon as Bacon, SvgBacteria as Bacteria, SvgBacteriaOrganism as BacteriaOrganism, SvgBacteriaView as BacteriaView, SvgBag as Bag, SvgBaggage as Baggage, SvgBaggageTrolley as BaggageTrolley, SvgBalanceBall as BalanceBall, SvgBalanceBeam as BalanceBeam, SvgBalanceBeams as BalanceBeams, SvgBalanceRings as BalanceRings, SvgBalcony as Balcony, SvgBalconyWindow as BalconyWindow, SvgBall as Ball, SvgBallOrnament as BallOrnament, SvgBanana as Banana, SvgBandage as Bandage, SvgBandages as Bandages, SvgBarChart as BarChart, SvgBarChartMagnifyingGlass as BarChartMagnifyingGlass, SvgBarGraph as BarGraph, SvgBarStools as BarStools, SvgBarbeque as Barbeque, SvgBarbequeGrill as BarbequeGrill, SvgBarcode as Barcode, SvgBarn as Barn, SvgBarrel as Barrel, SvgBasket as Basket, SvgBathrobe as Bathrobe, SvgBathtub as Bathtub, SvgBathtubShower as BathtubShower, SvgBeachBall as BeachBall, SvgBeachHoliday as BeachHoliday, SvgBeachLounge as BeachLounge, SvgBed as Bed, SvgBedFurniture as BedFurniture, SvgBedSleep as BedSleep, SvgBeer as Beer, SvgBeerFoamDrink as BeerFoamDrink, SvgBehance as Behance, SvgBell as Bell, SvgBellBow as BellBow, SvgBellCheck as BellCheck, SvgBellDash as BellDash, SvgBellDots as BellDots, SvgBellMinus as BellMinus, SvgBellMobile as BellMobile, SvgBellPlus as BellPlus, SvgBellReminder as BellReminder, SvgBellXmark as BellXmark, SvgBerries as Berries, SvgBerriesOrganicLeaf as BerriesOrganicLeaf, SvgBible as Bible, SvgBibleBook as BibleBook, SvgBigBen as BigBen, SvgBike as Bike, SvgBikeBicycle as BikeBicycle, SvgBikini as Bikini, SvgBillboard as Billboard, SvgBinoculars as Binoculars, SvgBirdFountain as BirdFountain, SvgBitcoin as Bitcoin, SvgBitcoinCircle as BitcoinCircle, SvgBlankFolder as BlankFolder, SvgBlock as Block, SvgBlockChat as BlockChat, SvgBlockClipboard as BlockClipboard, SvgBlockEnvelope as BlockEnvelope, SvgBlockFile as BlockFile, SvgBlockFolder as BlockFolder, SvgBlockMessage as BlockMessage, SvgBlockProhibited as BlockProhibited, SvgBlockShield as BlockShield, SvgBlockWebsite as BlockWebsite, SvgBlogWebsite as BlogWebsite, SvgBlogger as Blogger, SvgBloodDrip as BloodDrip, SvgBloodPressure as BloodPressure, SvgBlueprint as Blueprint, SvgBlueprintPaper as BlueprintPaper, SvgBoiledEgg as BoiledEgg, SvgBold as Bold, SvgBolt as Bolt, SvgBomb as Bomb, SvgBone as Bone, SvgBoneJoint as BoneJoint, SvgBook as Book, SvgBookmarkEnvelope as BookmarkEnvelope, SvgBookmarkStar as BookmarkStar, SvgBookshelf as Bookshelf, SvgBookshelfBooks as BookshelfBooks, SvgBookshelfLibrary as BookshelfLibrary, SvgBoot as Boot, SvgBootShoeFootwear as BootShoeFootwear, SvgBottleGlass as BottleGlass, SvgBottleSpoon as BottleSpoon, SvgBowArrowHeart as BowArrowHeart, SvgBoxFiling as BoxFiling, SvgBrain as Brain, SvgBrandenburgGate as BrandenburgGate, SvgBreadLoaf as BreadLoaf, SvgBreasts as Breasts, SvgBridge as Bridge, SvgBridgeTower as BridgeTower, SvgBroadcast as Broadcast, SvgBrokenFile as BrokenFile, SvgBrokenFolder as BrokenFolder, SvgBrokenHeart as BrokenHeart, SvgBrush as Brush, SvgBrushTool as BrushTool, SvgBugClipboard as BugClipboard, SvgBugCloud as BugCloud, SvgBugEnvelope as BugEnvelope, SvgBugFile as BugFile, SvgBugInsect as BugInsect, SvgBugLaptop as BugLaptop, SvgBugMonitor as BugMonitor, SvgBuildWall as BuildWall, SvgBuilding as Building, SvgBuildingAsian as BuildingAsian, SvgBuildingChurch as BuildingChurch, SvgBuildingChurchReligion as BuildingChurchReligion, SvgBuildingColumn as BuildingColumn, SvgBuildingConstruction as BuildingConstruction, SvgBulldozer as Bulldozer, SvgBulletTrain as BulletTrain, SvgBullhorn as Bullhorn, SvgBullhornMegaphone as BullhornMegaphone, SvgBunkbeds as Bunkbeds, SvgBurjElArab as BurjElArab, SvgBus as Bus, SvgBusFront as BusFront, SvgBusTransportation as BusTransportation, SvgBusVehicle as BusVehicle, SvgBusinessBriefcase as BusinessBriefcase, SvgBusinessMan as BusinessMan, SvgBusinessSuitcase as BusinessSuitcase, SvgBusinessWoman as BusinessWoman, SvgButt as Butt, SvgCabin as Cabin, SvgCable as Cable, SvgCableCharge as CableCharge, SvgCableUsb as CableUsb, SvgCakeSlice as CakeSlice, SvgCalculator as Calculator, SvgCalendar as Calendar, SvgCalendarBell as CalendarBell, SvgCalendarDate as CalendarDate, SvgCalendarDots as CalendarDots, SvgCalendarHome as CalendarHome, SvgCalendarSchedule as CalendarSchedule, SvgCall as Call, SvgCallArrowDownLeft as CallArrowDownLeft, SvgCallArrowUpRight as CallArrowUpRight, SvgCallDots as CallDots, SvgCallSlash as CallSlash, SvgCallXmark as CallXmark, SvgCallerId as CallerId, SvgCamcorder as Camcorder, SvgCamcorderBack as CamcorderBack, SvgCamera as Camera, SvgCameraArrow as CameraArrow, SvgCameraDevice as CameraDevice, SvgCameraFilm as CameraFilm, SvgCameraLens as CameraLens, SvgCameraPhoto as CameraPhoto, SvgCameraPhotography as CameraPhotography, SvgCameraStand as CameraStand, SvgCameraWheels as CameraWheels, SvgCampTent as CampTent, SvgCamper as Camper, SvgCamperVehicle as CamperVehicle, SvgCampfire as Campfire, SvgCampingTent as CampingTent, SvgCandle as Candle, SvgCandleHolder as CandleHolder, SvgCandleLight as CandleLight, SvgCandleLines as CandleLines, SvgCandleStick as CandleStick, SvgCandles as Candles, SvgCandy as Candy, SvgCandyCane as CandyCane, SvgCapsuleMedicine as CapsuleMedicine, SvgCar as Car, SvgCarFront as CarFront, SvgCarGarage as CarGarage, SvgCarKey as CarKey, SvgCarTransport as CarTransport, SvgCarVehicle as CarVehicle, SvgCaravan as Caravan, SvgCaravanWheels as CaravanWheels, SvgCardiogram as Cardiogram, SvgCargoTransport as CargoTransport, SvgCarrot as Carrot, SvgCarrotTurnipVegetable as CarrotTurnipVegetable, SvgCart as Cart, SvgCashBills as CashBills, SvgCashWithdraw as CashWithdraw, SvgCast as Cast, SvgCcComment as CcComment, SvgCcSquare as CcSquare, SvgCeilingLamp as CeilingLamp, SvgCeilingLight as CeilingLight, SvgCeilingLighting as CeilingLighting, SvgCelcius as Celcius, SvgCells as Cells, SvgCellsMonitor as CellsMonitor, SvgCementMixer as CementMixer, SvgCementSack as CementSack, SvgCementTruck as CementTruck, SvgChain as Chain, SvgChainLink as ChainLink, SvgChainsaw as Chainsaw, SvgChairDining as ChairDining, SvgChampagne as Champagne, SvgChargingCable as ChargingCable, SvgChartPieGraph as ChartPieGraph, SvgChartPieGraphCircle as ChartPieGraphCircle, SvgChatDots as ChatDots, SvgChatLines as ChatLines, SvgChats as Chats, SvgChatsDots as ChatsDots, SvgChatsLines as ChatsLines, SvgCheckChat as CheckChat, SvgCheckCircle as CheckCircle, SvgCheckClipboard as CheckClipboard, SvgCheckComment as CheckComment, SvgCheckFile as CheckFile, SvgCheckFolder as CheckFolder, SvgCheckListFile as CheckListFile, SvgCheckMessage as CheckMessage, SvgCheckMessages as CheckMessages, SvgCheckPadlock as CheckPadlock, SvgCheckPapertray as CheckPapertray, SvgCheckShield as CheckShield, SvgCheckTicket as CheckTicket, SvgCheckWebsite as CheckWebsite, SvgCheese as Cheese, SvgChemicalContainer as ChemicalContainer, SvgChemicalLab as ChemicalLab, SvgChemicalTestTube as ChemicalTestTube, SvgChemicalTube as ChemicalTube, SvgCheque as Cheque, SvgChessPiece as ChessPiece, SvgChickenLeg as ChickenLeg, SvgChimney as Chimney, SvgChipComputer as ChipComputer, SvgChipMemory as ChipMemory, SvgChocolate as Chocolate, SvgChopper as Chopper, SvgChristmasCard as ChristmasCard, SvgChristmasTree as ChristmasTree, SvgChurch as Church, SvgChurchBuilding as ChurchBuilding, SvgChurchLandmark as ChurchLandmark, SvgChurchReligion as ChurchReligion, SvgCinema as Cinema, SvgCinemaChair as CinemaChair, SvgCirclePieChart as CirclePieChart, SvgCirclesOverlap as CirclesOverlap, SvgClamp as Clamp, SvgClick as Click, SvgClickBait as ClickBait, SvgClickSelect as ClickSelect, SvgClickbaitWindow as ClickbaitWindow, SvgClimbingBars as ClimbingBars, SvgClip as Clip, SvgClipboard as Clipboard, SvgClipboardImage as ClipboardImage, SvgClipboardInfo as ClipboardInfo, SvgClipboardLineChart as ClipboardLineChart, SvgClipboardLinesDocument as ClipboardLinesDocument, SvgClipboardRefresh as ClipboardRefresh, SvgClipboardSearch as ClipboardSearch, SvgClipboardSettings as ClipboardSettings, SvgClipboardShare as ClipboardShare, SvgClipboardShield as ClipboardShield, SvgClipboardSound as ClipboardSound, SvgClipboardTestTube as ClipboardTestTube, SvgClipboardVideo as ClipboardVideo, SvgClipchart as Clipchart, SvgCloche as Cloche, SvgClocheCover as ClocheCover, SvgClocheFoodCover as ClocheFoodCover, SvgClocheFoodMeal as ClocheFoodMeal, SvgClock as Clock, SvgClockTime as ClockTime, SvgClosedBottle as ClosedBottle, SvgClosedTestTube as ClosedTestTube, SvgCloset as Closet, SvgClosets as Closets, SvgClothingHanger as ClothingHanger, SvgCloud as Cloud, SvgCloudArrows as CloudArrows, SvgCloudBlock as CloudBlock, SvgCloudDatabase as CloudDatabase, SvgCloudFolder as CloudFolder, SvgCloudLock as CloudLock, SvgCloudNetwork as CloudNetwork, SvgCloudSettings as CloudSettings, SvgCloudTransfer as CloudTransfer, SvgClouds as Clouds, SvgCloudy as Cloudy, SvgCloudyNight as CloudyNight, SvgCnTower as CnTower, SvgCoconutCocktail as CoconutCocktail, SvgCoding as Coding, SvgCodingFile as CodingFile, SvgCodingWebsite as CodingWebsite, SvgCoffeeDrink as CoffeeDrink, SvgCoffeeMaker as CoffeeMaker, SvgCoinExchange as CoinExchange, SvgCoinPurse as CoinPurse, SvgCoinStack as CoinStack, SvgCoins as Coins, SvgColdSnow as ColdSnow, SvgColdSnowflake as ColdSnowflake, SvgColdTemperature as ColdTemperature, SvgColdTemperatureThermometer as ColdTemperatureThermometer, SvgColdWinter as ColdWinter, SvgColor as Color, SvgColorSwatches as ColorSwatches, SvgColosseum as Colosseum, SvgColumnLayout as ColumnLayout, SvgComment as Comment, SvgCommentBlank as CommentBlank, SvgCommentCaptions as CommentCaptions, SvgCommentDots as CommentDots, SvgCompass as Compass, SvgCompassGeometry as CompassGeometry, SvgCompassPointers as CompassPointers, SvgCompassTool as CompassTool, SvgComputerChip as ComputerChip, SvgComputerMemory as ComputerMemory, SvgComputerMonitor as ComputerMonitor, SvgComputerScreen as ComputerScreen, SvgConcierge as Concierge, SvgCondom as Condom, SvgConnectedTestTubes as ConnectedTestTubes, SvgConnection as Connection, SvgConstructionCrane as ConstructionCrane, SvgConstructionHouse as ConstructionHouse, SvgConstructionSaw as ConstructionSaw, SvgConstructionTool as ConstructionTool, SvgConstructionTools as ConstructionTools, SvgConstructionTransport as ConstructionTransport, SvgConstructionTruck as ConstructionTruck, SvgConstructionWorker as ConstructionWorker, SvgContactMobile as ContactMobile, SvgContract as Contract, SvgController as Controller, SvgConversation as Conversation, SvgCookie as Cookie, SvgCookingStation as CookingStation, SvgCorn as Corn, SvgCornSeeds as CornSeeds, SvgCornStarch as CornStarch, SvgCornucopia as Cornucopia, SvgCouch as Couch, SvgCouchFurniture as CouchFurniture, SvgCount1 as Count1, SvgCountFinger as CountFinger, SvgCountdown2 as Countdown2, SvgCountdown3 as Countdown3, SvgCpu as Cpu, SvgCranePipe as CranePipe, SvgCraneTruck as CraneTruck, SvgCrankScrewdriver as CrankScrewdriver, SvgCreditCard as CreditCard, SvgCreditCardPadlock as CreditCardPadlock, SvgCreditCardShield as CreditCardShield, SvgCroissant as Croissant, SvgCrop as Crop, SvgCropPathfinder as CropPathfinder, SvgCross as Cross, SvgCrosshairs as Crosshairs, SvgCrosswinds as Crosswinds, SvgCruiseShip as CruiseShip, SvgCrutches as Crutches, SvgCubeBox3D as CubeBox3D, SvgCupMeasurement as CupMeasurement, SvgCupStraw as CupStraw, SvgCupboard as Cupboard, SvgCupboardDrawers as CupboardDrawers, SvgCupboardTwoDoors as CupboardTwoDoors, SvgCupcake as Cupcake, SvgCupcakePastry as CupcakePastry, SvgCurrencyExchange as CurrencyExchange, SvgCurved2D as Curved2D, SvgCurved3D as Curved3D, SvgCurved4D as Curved4D, SvgCurved4K as Curved4K, SvgCurvedHd as CurvedHd, SvgCurvedTestTube as CurvedTestTube, SvgCurvedTv as CurvedTv, SvgCustomerService as CustomerService, SvgCustomerServiceAgent as CustomerServiceAgent, SvgCutFilm as CutFilm, SvgCycling as Cycling, SvgDanger as Danger, SvgDashCloud as DashCloud, SvgDayCloudy as DayCloudy, SvgDeed as Deed, SvgDeer as Deer, SvgDeliveryTruck as DeliveryTruck, SvgDentalPlus as DentalPlus, SvgDesk as Desk, SvgDeskLamp as DeskLamp, SvgDeskLampLight as DeskLampLight, SvgDesktopComputer2D as DesktopComputer2D, SvgDesktopComputer3D as DesktopComputer3D, SvgDesktopComputer4D as DesktopComputer4D, SvgDesktopComputer4K as DesktopComputer4K, SvgDessert as Dessert, SvgDestinationRoute as DestinationRoute, SvgDevilHeart as DevilHeart, SvgDiagram as Diagram, SvgDial as Dial, SvgDialLow as DialLow, SvgDiamondRing as DiamondRing, SvgDietCalendar as DietCalendar, SvgDigitalThermometer as DigitalThermometer, SvgDimensionSquare as DimensionSquare, SvgDimensionalPerson as DimensionalPerson, SvgDimensionalView as DimensionalView, SvgDimensionalVr as DimensionalVr, SvgDiningChair as DiningChair, SvgDiningRoom as DiningRoom, SvgDiningRoomChair as DiningRoomChair, SvgDiningRoomTable as DiningRoomTable, SvgDiningTable as DiningTable, SvgDiningTablePlates as DiningTablePlates, SvgDirectionPost as DirectionPost, SvgDirectionsPost as DirectionsPost, SvgDiscountTag as DiscountTag, SvgDiskReader as DiskReader, SvgDna as Dna, SvgDnaGenetics as DnaGenetics, SvgDnaScience as DnaScience, SvgDocument as Document, SvgDocuments as Documents, SvgDollarBill as DollarBill, SvgDollarChat as DollarChat, SvgDollarClipboard as DollarClipboard, SvgDollarClipboardFile as DollarClipboardFile, SvgDollarFile as DollarFile, SvgDollarFolder as DollarFolder, SvgDollarMessage as DollarMessage, SvgDollarMonitor as DollarMonitor, SvgDollarPaper as DollarPaper, SvgDollarSign as DollarSign, SvgDollarSignCircle as DollarSignCircle, SvgDollarSignMoney as DollarSignMoney, SvgDollarSuitcase as DollarSuitcase, SvgDonut as Donut, SvgDoor as Door, SvgDoorLock as DoorLock, SvgDotsClipboard as DotsClipboard, SvgDotsComment as DotsComment, SvgDotsFile as DotsFile, SvgDotsFolder as DotsFolder, SvgDotsHorizontal as DotsHorizontal, SvgDotsVertical as DotsVertical, SvgDoubleBed as DoubleBed, SvgDoubleBedSleep as DoubleBedSleep, SvgDoubleClick as DoubleClick, SvgDoubleDeckerBus as DoubleDeckerBus, SvgDoubleDoors as DoubleDoors, SvgDoubleFinger as DoubleFinger, SvgDoubleParagraph as DoubleParagraph, SvgDoublePress as DoublePress, SvgDoubleTouch as DoubleTouch, SvgDoubleTouchFinger as DoubleTouchFinger, SvgDove as Dove, SvgDownMove as DownMove, SvgDownOrientation as DownOrientation, SvgDownstairs as Downstairs, SvgDownwardEscalator as DownwardEscalator, SvgDragDown as DragDown, SvgDragLeft as DragLeft, SvgDragRight as DragRight, SvgDragUp as DragUp, SvgDraw as Draw, SvgDrawLine as DrawLine, SvgDrawersCupboard as DrawersCupboard, SvgDrawersEndTable as DrawersEndTable, SvgDrawersTable as DrawersTable, SvgDrawingTablet as DrawingTablet, SvgDribble as Dribble, SvgDrillElectric as DrillElectric, SvgDrone as Drone, SvgDroneTech as DroneTech, SvgDropbox as Dropbox, SvgDropper as Dropper, SvgDrugs as Drugs, SvgDumbbell as Dumbbell, SvgDumbbellGym as DumbbellGym, SvgDuplicateWebsite as DuplicateWebsite, SvgDvd as Dvd, SvgEar as Ear, SvgEarDropsBottle as EarDropsBottle, SvgEarMuffs as EarMuffs, SvgEarphones as Earphones, SvgEarthStatue as EarthStatue, SvgEasterIsland as EasterIsland, SvgEcology as Ecology, SvgEducation as Education, SvgEgg as Egg, SvgEiffelTower as EiffelTower, SvgEiffelTowerParis as EiffelTowerParis, SvgElectricBatteryCharge as ElectricBatteryCharge, SvgElectricCar as ElectricCar, SvgElectricCharge as ElectricCharge, SvgElectricDrill as ElectricDrill, SvgElectricLightbulb as ElectricLightbulb, SvgElectricSander as ElectricSander, SvgElectricSaw as ElectricSaw, SvgElectricStorm as ElectricStorm, SvgElectricThought as ElectricThought, SvgElectricity as Electricity, SvgElectricityCable as ElectricityCable, SvgElectricityHome as ElectricityHome, SvgElectricityMagnifyingGlass as ElectricityMagnifyingGlass, SvgElectricitySocket as ElectricitySocket, SvgElectricitySocketCircle as ElectricitySocketCircle, SvgElectricitySquare as ElectricitySquare, SvgElementsHorizontal as ElementsHorizontal, SvgElementsVertical as ElementsVertical, SvgElevator as Elevator, SvgElevatorUpDown as ElevatorUpDown, SvgElf as Elf, SvgEmail as Email, SvgEmergencySiren as EmergencySiren, SvgEndTable as EndTable, SvgEndTableCupboard as EndTableCupboard, SvgEndTableDrawer as EndTableDrawer, SvgEndTableDrawers as EndTableDrawers, SvgEndTableLamp as EndTableLamp, SvgEnergyBottle as EnergyBottle, SvgEnergyCan as EnergyCan, SvgEnergyDrink as EnergyDrink, SvgEnergyPill as EnergyPill, SvgEngagementRing as EngagementRing, SvgEntrance as Entrance, SvgEnvelope as Envelope, SvgEnvelopeArrowRight as EnvelopeArrowRight, SvgEnvelopeCheck as EnvelopeCheck, SvgEnvelopeLine as EnvelopeLine, SvgEnvelopeLines as EnvelopeLines, SvgEnvelopeMinus as EnvelopeMinus, SvgEnvelopePaper as EnvelopePaper, SvgEnvelopePaperEmail as EnvelopePaperEmail, SvgEnvelopeQuestion as EnvelopeQuestion, SvgEnvelopeXmark as EnvelopeXmark, SvgEnvelopesLines as EnvelopesLines, SvgEraser as Eraser, SvgEthernetPort as EthernetPort, SvgEuroCircle as EuroCircle, SvgEuroSign as EuroSign, SvgEuropeanPlug as EuropeanPlug, SvgEuropeanSocket as EuropeanSocket, SvgEvenScale as EvenScale, SvgExclamationChat as ExclamationChat, SvgExclamationClipboard as ExclamationClipboard, SvgExclamationDocument as ExclamationDocument, SvgExclamationFile as ExclamationFile, SvgExclamationFolder as ExclamationFolder, SvgExclamationLaptop as ExclamationLaptop, SvgExclamationMessage as ExclamationMessage, SvgExclamationMessageAlert as ExclamationMessageAlert, SvgExclamationMobile as ExclamationMobile, SvgExclamationMonitor as ExclamationMonitor, SvgExclamationTriangle as ExclamationTriangle, SvgExclamationUsbStick as ExclamationUsbStick, SvgExclamationWebsite as ExclamationWebsite, SvgExerciseBike as ExerciseBike, SvgExit as Exit, SvgExitSign as ExitSign, SvgExtender as Extender, SvgEye as Eye, SvgEyeArrows as EyeArrows, SvgEyeDrops as EyeDrops, SvgEyeMinus as EyeMinus, SvgEyePlus as EyePlus, SvgEyedropper as Eyedropper, SvgEyedropperTool as EyedropperTool, SvgFaceMask as FaceMask, SvgFaceMaskPlus as FaceMaskPlus, SvgFacebook as Facebook, SvgFahrenheit as Fahrenheit, SvgFarmingTractor as FarmingTractor, SvgFastCar as FastCar, SvgFastEnvelope as FastEnvelope, SvgFastForward as FastForward, SvgFaucet as Faucet, SvgFavouriteGlasses as FavouriteGlasses, SvgFeatherInk as FeatherInk, SvgFeedly as Feedly, SvgFemale as Female, SvgFemaleGender as FemaleGender, SvgFemaleRelationship as FemaleRelationship, SvgFemaleRomance as FemaleRomance, SvgFence as Fence, SvgFile as File, SvgFileArrowUp as FileArrowUp, SvgFileAudio as FileAudio, SvgFileImage as FileImage, SvgFileInfo as FileInfo, SvgFileLine as FileLine, SvgFileRefresh as FileRefresh, SvgFileSearch as FileSearch, SvgFileSettings as FileSettings, SvgFileShare as FileShare, SvgFileShield as FileShield, SvgFileSound as FileSound, SvgFileVideo as FileVideo, SvgFilingCabinet as FilingCabinet, SvgFilmLight as FilmLight, SvgFilmMusic as FilmMusic, SvgFilmPlay as FilmPlay, SvgFilter as Filter, SvgFingerprint as Fingerprint, SvgFire as Fire, SvgFireAlarm as FireAlarm, SvgFireExtinguisher as FireExtinguisher, SvgFireTestTube as FireTestTube, SvgFireTower as FireTower, SvgFireTriangle as FireTriangle, SvgFireWood as FireWood, SvgFireplace as Fireplace, SvgFireplaceHeat as FireplaceHeat, SvgFireplaceHeating as FireplaceHeating, SvgFirewall as Firewall, SvgFirstAidBox as FirstAidBox, SvgFishHook as FishHook, SvgFist as Fist, SvgFitnessBall as FitnessBall, SvgFlag as Flag, SvgFlagMountain as FlagMountain, SvgFlame as Flame, SvgFlashlight as Flashlight, SvgFlatScrewdriver as FlatScrewdriver, SvgFlickr as Flickr, SvgFlightDate as FlightDate, SvgFlightDocument as FlightDocument, SvgFlippers as Flippers, SvgFloppyDisk as FloppyDisk, SvgFloppyDiskSave as FloppyDiskSave, SvgFloral as Floral, SvgFlourBag as FlourBag, SvgFlower as Flower, SvgFoldChair as FoldChair, SvgFoldableChair as FoldableChair, SvgFolder as Folder, SvgFolderArchive as FolderArchive, SvgFolderArrowDown as FolderArrowDown, SvgFolderArrowUp as FolderArrowUp, SvgFolderBlock as FolderBlock, SvgFolderBroken as FolderBroken, SvgFolderCheck as FolderCheck, SvgFolderDollar as FolderDollar, SvgFolderDots as FolderDots, SvgFolderGraph as FolderGraph, SvgFolderHeart as FolderHeart, SvgFolderImage as FolderImage, SvgFolderInfo as FolderInfo, SvgFolderLine as FolderLine, SvgFolderList as FolderList, SvgFolderLock as FolderLock, SvgFolderMinus as FolderMinus, SvgFolderMusic as FolderMusic, SvgFolderPadlock as FolderPadlock, SvgFolderPlay as FolderPlay, SvgFolderPlus as FolderPlus, SvgFolderQuestion as FolderQuestion, SvgFolderSearch as FolderSearch, SvgFolderSettings as FolderSettings, SvgFolderShareNetwork as FolderShareNetwork, SvgFolderSharePadlock as FolderSharePadlock, SvgFolderSharing as FolderSharing, SvgFolderShield as FolderShield, SvgFolderSound as FolderSound, SvgFolderStar as FolderStar, SvgFolderText as FolderText, SvgFolderTransfer as FolderTransfer, SvgFolderUp as FolderUp, SvgFolderUser as FolderUser, SvgFolderVideo as FolderVideo, SvgFolderVoice as FolderVoice, SvgFolderWifi as FolderWifi, SvgFolderXmark as FolderXmark, SvgFolders as Folders, SvgFoodStore as FoodStore, SvgFoot as Foot, SvgForbiddenCity as ForbiddenCity, SvgForklift as Forklift, SvgForkliftWarehouseVehicle as ForkliftWarehouseVehicle, SvgFormatFile as FormatFile, SvgFourFinger as FourFinger, SvgFrame360 as Frame360, SvgFreeze as Freeze, SvgFrenchFries as FrenchFries, SvgFreshBread as FreshBread, SvgFridge as Fridge, SvgFrog as Frog, SvgFrontDesk as FrontDesk, SvgFrontVrVisual as FrontVrVisual, SvgFunnel as Funnel, SvgFunnelSort as FunnelSort, SvgFurnace as Furnace, SvgGamePlan as GamePlan, SvgGamepad as Gamepad, SvgGasoline as Gasoline, SvgGateLandmark as GateLandmark, SvgGear as Gear, SvgGearWebsite as GearWebsite, SvgGeography as Geography, SvgGiftBox as GiftBox, SvgGiftSquare as GiftSquare, SvgGifts as Gifts, SvgGingerbreadMan as GingerbreadMan, SvgGlasses as Glasses, SvgGlasses3D as Glasses3D, SvgGlassesHelmet as GlassesHelmet, SvgGlassesMask as GlassesMask, SvgGlassesVirtualReality as GlassesVirtualReality, SvgGlassesVision as GlassesVision, SvgGlazedDonut as GlazedDonut, SvgGlobalMegaphone as GlobalMegaphone, SvgGlobalMonitor as GlobalMonitor, SvgGlobalPadlock as GlobalPadlock, SvgGlobalWarming as GlobalWarming, SvgGlobePlant as GlobePlant, SvgGlobeWarming as GlobeWarming, SvgGlove as Glove, SvgGloves as Gloves, SvgGoldenGateBridge as GoldenGateBridge, SvgGolfCart as GolfCart, SvgGondola as Gondola, SvgGoogleDrive as GoogleDrive, SvgGooglePlus as GooglePlus, SvgGovernmentBuilding as GovernmentBuilding, SvgGraduate as Graduate, SvgGraduation as Graduation, SvgGrapes as Grapes, SvgGraphChart as GraphChart, SvgGraphChat as GraphChat, SvgGraphDocument as GraphDocument, SvgGraphFile as GraphFile, SvgGraphLinesClipboard as GraphLinesClipboard, SvgGraphLinesFolder as GraphLinesFolder, SvgGraphMessage as GraphMessage, SvgGreatBuddha as GreatBuddha, SvgGreatWall as GreatWall, SvgGreekChurch as GreekChurch, SvgGreenBattery as GreenBattery, SvgGreenBook as GreenBook, SvgGreenCan as GreenCan, SvgGreenCar as GreenCar, SvgGreenCharge as GreenCharge, SvgGreenContainer as GreenContainer, SvgGreenFactory as GreenFactory, SvgGreenGas as GreenGas, SvgGreenHouse as GreenHouse, SvgGreenLightbulb as GreenLightbulb, SvgGreenTestTube as GreenTestTube, SvgGreenThought as GreenThought, SvgGreenWater as GreenWater, SvgGrid as Grid, SvgGripEquipment as GripEquipment, SvgGroupTeam as GroupTeam, SvgGym as Gym, SvgGymBag as GymBag, SvgGymWeights as GymWeights, SvgHail as Hail, SvgHairDryer as HairDryer, SvgHamburger as Hamburger, SvgHammer as Hammer, SvgHammerNail as HammerNail, SvgHammerTool as HammerTool, SvgHandHoldingGlobe as HandHoldingGlobe, SvgHandHoldingPlant as HandHoldingPlant, SvgHandHoldingSeedling as HandHoldingSeedling, SvgHandHoldingWater as HandHoldingWater, SvgHandKey as HandKey, SvgHangingFrame as HangingFrame, SvgHangingPresentation as HangingPresentation, SvgHangingSignDollar as HangingSignDollar, SvgHangout as Hangout, SvgHardDisk as HardDisk, SvgHardware as Hardware, SvgHat as Hat, SvgHatFashion as HatFashion, SvgHatSanta as HatSanta, SvgHdDesktop as HdDesktop, SvgHeadGear as HeadGear, SvgHeadphones as Headphones, SvgHeart as Heart, SvgHeartArrow as HeartArrow, SvgHeartBalloon as HeartBalloon, SvgHeartBed as HeartBed, SvgHeartBook as HeartBook, SvgHeartBow as HeartBow, SvgHeartBox as HeartBox, SvgHeartCalendar as HeartCalendar, SvgHeartCandle as HeartCandle, SvgHeartCandles as HeartCandles, SvgHeartCard as HeartCard, SvgHeartChat as HeartChat, SvgHeartChats as HeartChats, SvgHeartChemistry as HeartChemistry, SvgHeartClipboard as HeartClipboard, SvgHeartComment as HeartComment, SvgHeartCommentGroup as HeartCommentGroup, SvgHeartEarth as HeartEarth, SvgHeartEnvelope as HeartEnvelope, SvgHeartFile as HeartFile, SvgHeartFolder as HeartFolder, SvgHeartGlasses as HeartGlasses, SvgHeartHandGesture as HeartHandGesture, SvgHeartHome as HeartHome, SvgHeartKey as HeartKey, SvgHeartLockKey as HeartLockKey, SvgHeartLoveYou as HeartLoveYou, SvgHeartMail as HeartMail, SvgHeartMessage as HeartMessage, SvgHeartMobile as HeartMobile, SvgHeartMonitor as HeartMonitor, SvgHeartMug as HeartMug, SvgHeartMusic as HeartMusic, SvgHeartPadlock as HeartPadlock, SvgHeartPaper as HeartPaper, SvgHeartPen as HeartPen, SvgHeartPerfume as HeartPerfume, SvgHeartPin as HeartPin, SvgHeartPlant as HeartPlant, SvgHeartRate as HeartRate, SvgHeartRateClipboard as HeartRateClipboard, SvgHeartRoomService as HeartRoomService, SvgHeartShirt as HeartShirt, SvgHeartSuitcase as HeartSuitcase, SvgHeartTicket as HeartTicket, SvgHeartUnreadEnvelope as HeartUnreadEnvelope, SvgHeartVideo as HeartVideo, SvgHeartWater as HeartWater, SvgHeartrateMonitor as HeartrateMonitor, SvgHearts as Hearts, SvgHeatingFurnace as HeatingFurnace, SvgHeavyRain as HeavyRain, SvgHeavyWeights as HeavyWeights, SvgHelicopter as Helicopter, SvgHelicopterTravel as HelicopterTravel, SvgHelmet as Helmet, SvgHerbMix as HerbMix, SvgHerbalMixPlus as HerbalMixPlus, SvgHierarchy as Hierarchy, SvgHierarchyCircle as HierarchyCircle, SvgHighFive as HighFive, SvgHighVolume as HighVolume, SvgHold as Hold, SvgHome as Home, SvgHomeLayout as HomeLayout, SvgHomeMessage as HomeMessage, SvgHomePaper as HomePaper, SvgHomePin as HomePin, SvgHomeWindow as HomeWindow, SvgHoneyJar as HoneyJar, SvgHorizontalCenter as HorizontalCenter, SvgHorizontalSlidersDots as HorizontalSlidersDots, SvgHorizontalSlidersLines as HorizontalSlidersLines, SvgHospitalBuilding as HospitalBuilding, SvgHospitalSign as HospitalSign, SvgHotAirBalloon as HotAirBalloon, SvgHotCocoa as HotCocoa, SvgHotDrink as HotDrink, SvgHotDrinkMug as HotDrinkMug, SvgHotFlame as HotFlame, SvgHotFood as HotFood, SvgHotSeat as HotSeat, SvgHotStoneMassage as HotStoneMassage, SvgHotTemperature as HotTemperature, SvgHotdog as Hotdog, SvgHotelConcierge as HotelConcierge, SvgHotelLocation as HotelLocation, SvgHotelMobile as HotelMobile, SvgHouse as House, SvgHouseDocument as HouseDocument, SvgHouseHand as HouseHand, SvgHouseHome as HouseHome, SvgHouseKey as HouseKey, SvgHouseLine as HouseLine, SvgHouseMedal as HouseMedal, SvgHouseMessage as HouseMessage, SvgHouseMoney as HouseMoney, SvgHousePaper as HousePaper, SvgHousePin as HousePin, SvgHousePinLocation as HousePinLocation, SvgHouseRealEstate as HouseRealEstate, SvgHouseShield as HouseShield, SvgHouseThermometer as HouseThermometer, SvgHouses as Houses, SvgHut as Hut, SvgIceCream as IceCream, SvgIceCreamCone as IceCreamCone, SvgIceCreamStick as IceCreamStick, SvgIceCreamStickFood as IceCreamStickFood, SvgIceCreams as IceCreams, SvgIdCard as IdCard, SvgIdentificationCard as IdentificationCard, SvgIgloo as Igloo, SvgImage as Image, SvgImageChat as ImageChat, SvgImageGallery as ImageGallery, SvgImageMessage as ImageMessage, SvgInboxMailbox as InboxMailbox, SvgIncognito as Incognito, SvgIncognitoWindow as IncognitoWindow, SvgIncreaseVolume as IncreaseVolume, SvgIndentLeft as IndentLeft, SvgIndentRight as IndentRight, SvgIndonesiaBuilding as IndonesiaBuilding, SvgIndonesiaTower as IndonesiaTower, SvgInfoChat as InfoChat, SvgInfoCircle as InfoCircle, SvgInfoMessage as InfoMessage, SvgInkBottle as InkBottle, SvgInkPen as InkPen, SvgInstagram as Instagram, SvgInterset as Interset, SvgIntestine as Intestine, SvgItalic as Italic, SvgJamJar as JamJar, SvgJar as Jar, SvgJarHeart as JarHeart, SvgJeep as Jeep, SvgJersey as Jersey, SvgJesusBrazil as JesusBrazil, SvgJug as Jug, SvgJumpRope as JumpRope, SvgJumper as Jumper, SvgJustify as Justify, SvgJustifyAll as JustifyAll, SvgJustifyCenter as JustifyCenter, SvgJustifyLeft as JustifyLeft, SvgJustifyRight as JustifyRight, SvgKabab as Kabab, SvgKey as Key, SvgKeyMonitor as KeyMonitor, SvgKeyWebsite as KeyWebsite, SvgKeyboard as Keyboard, SvgKeyboardPointerUp as KeyboardPointerUp, SvgKeyboardTyping as KeyboardTyping, SvgKeycard as Keycard, SvgKeys as Keys, SvgKgWeight as KgWeight, SvgKidScooter as KidScooter, SvgKidneys as Kidneys, SvgLabAppliance as LabAppliance, SvgLabCoat as LabCoat, SvgLabTestTube as LabTestTube, SvgLabToolCurve as LabToolCurve, SvgLaboratoryList as LaboratoryList, SvgLaboratoryTestTube as LaboratoryTestTube, SvgLaboratoryTool as LaboratoryTool, SvgLadder as Ladder, SvgLadderTool as LadderTool, SvgLadderTruck as LadderTruck, SvgLadyLiberty as LadyLiberty, SvgLamp as Lamp, SvgLandmarkChurch as LandmarkChurch, SvgLandscape as Landscape, SvgLanguageTranslation as LanguageTranslation, SvgLantern as Lantern, SvgLanternFireLight as LanternFireLight, SvgLaptop as Laptop, SvgLaptopLine as LaptopLine, SvgLaptopLocation as LaptopLocation, SvgLaptopScreen as LaptopScreen, SvgLargeBus as LargeBus, SvgLaunchRocket as LaunchRocket, SvgLaundryService as LaundryService, SvgLayers as Layers, SvgLayoutHalf as LayoutHalf, SvgLayoutHalfVertical as LayoutHalfVertical, SvgLayoutThree as LayoutThree, SvgLayoutVertical as LayoutVertical, SvgLeaf as Leaf, SvgLeafGlobe as LeafGlobe, SvgLeafMagnifyingGlass as LeafMagnifyingGlass, SvgLeafMaple as LeafMaple, SvgLeafPeach as LeafPeach, SvgLeafShield as LeafShield, SvgLeafTag as LeafTag, SvgLeaningTower as LeaningTower, SvgLeftOrientation as LeftOrientation, SvgLeftRightMove as LeftRightMove, SvgLeftRightVr as LeftRightVr, SvgLevelTool as LevelTool, SvgLibrary as Library, SvgLifePreserver as LifePreserver, SvgLifeRing as LifeRing, SvgLiftingBars as LiftingBars, SvgLiftingWeight as LiftingWeight, SvgLight as Light, SvgLightCandle as LightCandle, SvgLighteningCloud as LighteningCloud, SvgLighteningCloudRain as LighteningCloudRain, SvgLighteningDay as LighteningDay, SvgLighteningStormCloud as LighteningStormCloud, SvgLighting as Lighting, SvgLineBone as LineBone, SvgLineLaptop as LineLaptop, SvgLineMobile as LineMobile, SvgLineMonitor as LineMonitor, SvgLinePresentation as LinePresentation, SvgLineSegment as LineSegment, SvgLineWebsite as LineWebsite, SvgLinesChart as LinesChart, SvgLinesClipboard as LinesClipboard, SvgLinesFile as LinesFile, SvgLinesFolder as LinesFolder, SvgLinesGraphClipboard as LinesGraphClipboard, SvgLinesGraphFile as LinesGraphFile, SvgLinesHome as LinesHome, SvgLink as Link, SvgLinkChain as LinkChain, SvgLinkSelect as LinkSelect, SvgLinkedin as Linkedin, SvgLips as Lips, SvgLiquidBottle as LiquidBottle, SvgLiquidDrop as LiquidDrop, SvgLiquidMedicineBag as LiquidMedicineBag, SvgLiquidTransport as LiquidTransport, SvgLiquidTransportation as LiquidTransportation, SvgList as List, SvgListChat as ListChat, SvgListClipboard as ListClipboard, SvgListFile as ListFile, SvgListFolder as ListFolder, SvgListMessage as ListMessage, SvgListReceipt as ListReceipt, SvgListRight as ListRight, SvgLitMatch as LitMatch, SvgLiver as Liver, SvgLivingRoomChair as LivingRoomChair, SvgLivingRoomCouch as LivingRoomCouch, SvgLivingroomFireplace as LivingroomFireplace, SvgLocation as Location, SvgLocationGlasses as LocationGlasses, SvgLockChat as LockChat, SvgLockClipboard as LockClipboard, SvgLockEnvelope as LockEnvelope, SvgLockFile as LockFile, SvgLockFolder as LockFolder, SvgLockKeyhole as LockKeyhole, SvgLockMessage as LockMessage, SvgLockWebsite as LockWebsite, SvgLockers as Lockers, SvgLockersStorage as LockersStorage, SvgLogo as Logo, SvgLogoSocial as LogoSocial, SvgLollipop as Lollipop, SvgLondonEye as LondonEye, SvgLorry as Lorry, SvgLotion as Lotion, SvgLotionPlusBottle as LotionPlusBottle, SvgLouvre as Louvre, SvgLoveEnvelope as LoveEnvelope, SvgLoveMessage as LoveMessage, SvgLowThermometer as LowThermometer, SvgLowVolume as LowVolume, SvgLowerVolume as LowerVolume, SvgLuggage as Luggage, SvgLuggageTrolley as LuggageTrolley, SvgLungs as Lungs, SvgMagicWand as MagicWand, SvgMagicWandSparkles as MagicWandSparkles, SvgMagnet as Magnet, SvgMagnetUsers as MagnetUsers, SvgMagnifyingGlass as MagnifyingGlass, SvgMagnifyingGlassBarChart as MagnifyingGlassBarChart, SvgMagnifyingGlassBug as MagnifyingGlassBug, SvgMagnifyingGlassHeart as MagnifyingGlassHeart, SvgMagnifyingGlassHouse as MagnifyingGlassHouse, SvgMagnifyingGlassMinus as MagnifyingGlassMinus, SvgMagnifyingGlassMoney as MagnifyingGlassMoney, SvgMagnifyingGlassPlus as MagnifyingGlassPlus, SvgMagnifyingGlassTestTube as MagnifyingGlassTestTube, SvgMagnifyingGlassUser as MagnifyingGlassUser, SvgMagnifyingGlassWebsite as MagnifyingGlassWebsite, SvgMail as Mail, SvgMailbox as Mailbox, SvgMale as Male, SvgMaleFemale as MaleFemale, SvgMaleFemaleRomance as MaleFemaleRomance, SvgMaleGender as MaleGender, SvgMaleRelationship as MaleRelationship, SvgMaleRomance as MaleRomance, SvgMaleTorso as MaleTorso, SvgManWomanRestroom as ManWomanRestroom, SvgManualWrench as ManualWrench, SvgMap as Map, SvgMapNavigation as MapNavigation, SvgMapleLeaf as MapleLeaf, SvgMarriage as Marriage, SvgMartini as Martini, SvgMartiniStraw as MartiniStraw, SvgMartiniStrawLime as MartiniStrawLime, SvgMath as Math, SvgMealPlan as MealPlan, SvgMealRestaurant as MealRestaurant, SvgMeasureElectricity as MeasureElectricity, SvgMeasureTool as MeasureTool, SvgMeasureTube as MeasureTube, SvgMeasurementTape as MeasurementTape, SvgMeasuringCup as MeasuringCup, SvgMeasuringTape as MeasuringTape, SvgMedVolume as MedVolume, SvgMedal as Medal, SvgMedalAchievement as MedalAchievement, SvgMedia as Media, SvgMedicalCenter as MedicalCenter, SvgMedicalDrip as MedicalDrip, SvgMedicationBottle as MedicationBottle, SvgMedicineBag as MedicineBag, SvgMedicineBottle as MedicineBottle, SvgMediumThermometer as MediumThermometer, SvgMegaphone as Megaphone, SvgMegaphoneMessage as MegaphoneMessage, SvgMegaphoneMonitor as MegaphoneMonitor, SvgMekka as Mekka, SvgMemo as Memo, SvgMemoryCard as MemoryCard, SvgMemoryComputer as MemoryComputer, SvgMemoryRam as MemoryRam, SvgMemoryStick as MemoryStick, SvgMenuSquare as MenuSquare, SvgMergeElements as MergeElements, SvgMesh as Mesh, SvgMessage as Message, SvgMessageGift as MessageGift, SvgMessageLines as MessageLines, SvgMessageText as MessageText, SvgMessages as Messages, SvgMessagesBlank as MessagesBlank, SvgMessagesDots as MessagesDots, SvgMessagesText as MessagesText, SvgMessagingLines as MessagingLines, SvgMessenger as Messenger, SvgMic as Mic, SvgMicroUsb as MicroUsb, SvgMicrochip as Microchip, SvgMicrophone as Microphone, SvgMicroscope as Microscope, SvgMicroscopeMedical as MicroscopeMedical, SvgMicroscopeView as MicroscopeView, SvgMicrowave as Microwave, SvgMiddleFinger as MiddleFinger, SvgMiddleFingerGesture as MiddleFingerGesture, SvgMinusChat as MinusChat, SvgMinusChats as MinusChats, SvgMinusCircle as MinusCircle, SvgMinusComment as MinusComment, SvgMinusFolder as MinusFolder, SvgMinusMessage as MinusMessage, SvgMinusWebsite as MinusWebsite, SvgMirror as Mirror, SvgMirrorSink as MirrorSink, SvgMistyCloud as MistyCloud, SvgMixChemicals as MixChemicals, SvgMixture as Mixture, SvgMobile as Mobile, SvgMobileHeart as MobileHeart, SvgMobileHorizontal as MobileHorizontal, SvgMobileHouse as MobileHouse, SvgMobileMessage as MobileMessage, SvgMobileMoney as MobileMoney, SvgMobilePen as MobilePen, SvgMobilePortrait as MobilePortrait, SvgMolecule as Molecule, SvgMoneyAccounts as MoneyAccounts, SvgMoneyArrowDown as MoneyArrowDown, SvgMoneyArrowUp as MoneyArrowUp, SvgMoneyBagDollar as MoneyBagDollar, SvgMoneyBarChart as MoneyBarChart, SvgMoneyBill as MoneyBill, SvgMoneyDecrease as MoneyDecrease, SvgMoneyDonation as MoneyDonation, SvgMoneyHome as MoneyHome, SvgMoneyIncrease as MoneyIncrease, SvgMoneyMobileShield as MoneyMobileShield, SvgMoneyPadlock as MoneyPadlock, SvgMoneyPieChart as MoneyPieChart, SvgMoneyPinLocation as MoneyPinLocation, SvgMoneyStack as MoneyStack, SvgMoneyTarget as MoneyTarget, SvgMoneyUserArrows as MoneyUserArrows, SvgMoneyWebsite as MoneyWebsite, SvgMonsterTruck as MonsterTruck, SvgMoon as Moon, SvgMotorcycle as Motorcycle, SvgMotorcycleVehicle as MotorcycleVehicle, SvgMountFuji as MountFuji, SvgMountain as Mountain, SvgMountainSide as MountainSide, SvgMountainTop as MountainTop, SvgMouse as Mouse, SvgMouseAnimal as MouseAnimal, SvgMousePointerUp as MousePointerUp, SvgMove as Move, SvgMoveArrows as MoveArrows, SvgMoveDown as MoveDown, SvgMoveLeft as MoveLeft, SvgMoveLeftRight as MoveLeftRight, SvgMoveRight as MoveRight, SvgMoveUp as MoveUp, SvgMoveUpDown as MoveUpDown, SvgMovie as Movie, SvgMovieCamera as MovieCamera, SvgMovieFilm as MovieFilm, SvgMovieTicket as MovieTicket, SvgMovieTrophy as MovieTrophy, SvgMp3Player as Mp3Player, SvgMri as Mri, SvgMultipleTestTube as MultipleTestTube, SvgMuscleGain as MuscleGain, SvgMushroom as Mushroom, SvgMushroomCircles as MushroomCircles, SvgMusicAlbum as MusicAlbum, SvgMusicArchive as MusicArchive, SvgMusicChat as MusicChat, SvgMusicClipboard as MusicClipboard, SvgMusicFile as MusicFile, SvgMusicFilm as MusicFilm, SvgMusicFolder as MusicFolder, SvgMusicMessage as MusicMessage, SvgMusicNote as MusicNote, SvgMusicNoteCircle as MusicNoteCircle, SvgMusicNoteFile as MusicNoteFile, SvgMusicNotes as MusicNotes, SvgMusicPlayer as MusicPlayer, SvgMute as Mute, SvgMuteVolume as MuteVolume, SvgNail as Nail, SvgNailTool as NailTool, SvgNativeAmericanWoman as NativeAmericanWoman, SvgNetwork as Network, SvgNetworkSignal as NetworkSignal, SvgNetworkSocial as NetworkSocial, SvgNewHouse as NewHouse, SvgNewspaper as Newspaper, SvgNewspaperArticle as NewspaperArticle, SvgNewspaperNewsletter as NewspaperNewsletter, SvgNext as Next, SvgNightCloudy as NightCloudy, SvgNoSmoking as NoSmoking, SvgNoodles as Noodles, SvgNose as Nose, SvgNotebook as Notebook, SvgNotreDame as NotreDame, SvgNurse as Nurse, SvgOculus as Oculus, SvgOfficeBriefcase as OfficeBriefcase, SvgOfficeChair as OfficeChair, SvgOfficePhone as OfficePhone, SvgOfficeSuitcase as OfficeSuitcase, SvgOneFinger as OneFinger, SvgOpenBook as OpenBook, SvgOpenCarTrunk as OpenCarTrunk, SvgOpenEnvelope as OpenEnvelope, SvgOpenRoofCar as OpenRoofCar, SvgOperaHouse as OperaHouse, SvgOrganismMagnifyingGlass as OrganismMagnifyingGlass, SvgOrientationCenter as OrientationCenter, SvgOrientationDown as OrientationDown, SvgOrientationLeft as OrientationLeft, SvgOrientationMiddle as OrientationMiddle, SvgOrientationRight as OrientationRight, SvgOrientationUp as OrientationUp, SvgOrnament as Ornament, SvgOrnamentLines as OrnamentLines, SvgOrnamentStar as OrnamentStar, SvgOven as Oven, SvgOverheadCloud as OverheadCloud, SvgOverlapShapes as OverlapShapes, SvgOwl as Owl, SvgOxygen as Oxygen, SvgP as P, SvgPackage as Package, SvgPackageArrowsUser as PackageArrowsUser, SvgPadlock as Padlock, SvgPadlockDots as PadlockDots, SvgPadlockHouse as PadlockHouse, SvgPadlockLaptop as PadlockLaptop, SvgPadlockMonitor as PadlockMonitor, SvgPadlockUser as PadlockUser, SvgPages as Pages, SvgPaintBrushTool as PaintBrushTool, SvgPaintBucket as PaintBucket, SvgPaintBucketTool as PaintBucketTool, SvgPaintbrush as Paintbrush, SvgPaintbrushPaintTool as PaintbrushPaintTool, SvgPancake as Pancake, SvgPaperAirplane as PaperAirplane, SvgPaperclip as Paperclip, SvgPaperclipAttachment as PaperclipAttachment, SvgPapers as Papers, SvgPapersLines as PapersLines, SvgPapertray as Papertray, SvgPapertrayLines as PapertrayLines, SvgParamedicSign as ParamedicSign, SvgPark as Park, SvgPartlyCloudy as PartlyCloudy, SvgPartlyCloudyRain as PartlyCloudyRain, SvgPasscode as Passcode, SvgPassport as Passport, SvgPath as Path, SvgPatternSecurity as PatternSecurity, SvgPause as Pause, SvgPauseCall as PauseCall, SvgPauseCircle as PauseCircle, SvgPaypal as Paypal, SvgPc as Pc, SvgPeace as Peace, SvgPear as Pear, SvgPearOrganic as PearOrganic, SvgPearlTower as PearlTower, SvgPen as Pen, SvgPenFilm as PenFilm, SvgPencil as Pencil, SvgPencilBox as PencilBox, SvgPencilCase as PencilCase, SvgPencilChat as PencilChat, SvgPencilEdit as PencilEdit, SvgPencilEnvelope as PencilEnvelope, SvgPencilMessage as PencilMessage, SvgPencilPaper as PencilPaper, SvgPencilRuler as PencilRuler, SvgPenguin as Penguin, SvgPenguinAnimal as PenguinAnimal, SvgPercentArrowDown as PercentArrowDown, SvgPercentArrowUp as PercentArrowUp, SvgPercentHouse as PercentHouse, SvgPercentShoppingBag as PercentShoppingBag, SvgPersonRotation as PersonRotation, SvgPersonSkeleton as PersonSkeleton, SvgPersonVirtualReality as PersonVirtualReality, SvgPersonVrGlasses as PersonVrGlasses, SvgPetronasTowers as PetronasTowers, SvgPets as Pets, SvgPhone as Phone, SvgPhoneArrowRight as PhoneArrowRight, SvgPhoneMissed as PhoneMissed, SvgPhoneSocket as PhoneSocket, SvgPhonebook as Phonebook, SvgPhonebookContacts as PhonebookContacts, SvgPhotoCamera as PhotoCamera, SvgPhotographer as Photographer, SvgPhotography as Photography, SvgPickUpTruc as PickUpTruc, SvgPicnicBasket as PicnicBasket, SvgPie as Pie, SvgPieChart as PieChart, SvgPieChartCircle as PieChartCircle, SvgPieChartClipboard as PieChartClipboard, SvgPieChartFile as PieChartFile, SvgPieGraph as PieGraph, SvgPieSlice as PieSlice, SvgPilgrimsHat as PilgrimsHat, SvgPillBottle as PillBottle, SvgPillar as Pillar, SvgPin as Pin, SvgPinCodeSecurity as PinCodeSecurity, SvgPinDestination as PinDestination, SvgPineTree as PineTree, SvgPipe as Pipe, SvgPipes as Pipes, SvgPipesIntersect as PipesIntersect, SvgPirateShip as PirateShip, SvgPizza as Pizza, SvgPizzaSlice as PizzaSlice, SvgPlane as Plane, SvgPlaneTicket as PlaneTicket, SvgPlantCharge as PlantCharge, SvgPlantCloud as PlantCloud, SvgPlantHeart as PlantHeart, SvgPlantHouse as PlantHouse, SvgPlantHouseLeaves as PlantHouseLeaves, SvgPlantTestTube as PlantTestTube, SvgPlatform360 as Platform360, SvgPlay as Play, SvgPlayAd as PlayAd, SvgPlayArea as PlayArea, SvgPlayCalendar as PlayCalendar, SvgPlayChat as PlayChat, SvgPlayCircle as PlayCircle, SvgPlayClip as PlayClip, SvgPlayClipboard as PlayClipboard, SvgPlayFile as PlayFile, SvgPlayFilm as PlayFilm, SvgPlayFolder as PlayFolder, SvgPlayMedia as PlayMedia, SvgPlayMessage as PlayMessage, SvgPlayMovie as PlayMovie, SvgPlayProjector as PlayProjector, SvgPlayTicket as PlayTicket, SvgPlayVr as PlayVr, SvgPlayVrGlasses as PlayVrGlasses, SvgPliers as Pliers, SvgPlugin as Plugin, SvgPlus as Plus, SvgPlusAccountMonitor as PlusAccountMonitor, SvgPlusBed as PlusBed, SvgPlusBottle as PlusBottle, SvgPlusCallCenter as PlusCallCenter, SvgPlusCircle as PlusCircle, SvgPlusClipboard as PlusClipboard, SvgPlusClipboardAdd as PlusClipboardAdd, SvgPlusDocument as PlusDocument, SvgPlusDrip as PlusDrip, SvgPlusEnvelope as PlusEnvelope, SvgPlusFile as PlusFile, SvgPlusFolderPaper as PlusFolderPaper, SvgPlusHangingSign as PlusHangingSign, SvgPlusHeart as PlusHeart, SvgPlusIdCard as PlusIdCard, SvgPlusLiquidDrop as PlusLiquidDrop, SvgPlusPin as PlusPin, SvgPlusShield as PlusShield, SvgPlusTicket as PlusTicket, SvgPlusVrView as PlusVrView, SvgPlusWebsite as PlusWebsite, SvgPointLeft as PointLeft, SvgPointRight as PointRight, SvgPointUp as PointUp, SvgPointerDown as PointerDown, SvgPoison as Poison, SvgPoliceCar as PoliceCar, SvgPoolLadder as PoolLadder, SvgPopcorn as Popcorn, SvgPort as Port, SvgPostage as Postage, SvgPostcard as Postcard, SvgPottedPlant as PottedPlant, SvgPowerChip as PowerChip, SvgPowerHouse as PowerHouse, SvgPrayer as Prayer, SvgPresent as Present, SvgPresentBox as PresentBox, SvgPresentation as Presentation, SvgPresentationLine as PresentationLine, SvgPress as Press, SvgPrint as Print, SvgPrinter as Printer, SvgProgramming as Programming, SvgProjectPresentation as ProjectPresentation, SvgProjector as Projector, SvgProjectorDevice as ProjectorDevice, SvgProtectPlant as ProtectPlant, SvgPumpkin as Pumpkin, SvgPunchingBag as PunchingBag, SvgPunchingBall as PunchingBall, SvgPuttyKnife as PuttyKnife, SvgPuttyKnifeEquipment as PuttyKnifeEquipment, SvgPuttyKnifeTool as PuttyKnifeTool, SvgPuzzle as Puzzle, SvgPuzzlePiece as PuzzlePiece, SvgPyramid as Pyramid, SvgQrCode as QrCode, SvgQuestion as Question, SvgQuestionChat as QuestionChat, SvgQuestionClipboard as QuestionClipboard, SvgQuestionFile as QuestionFile, SvgQuestionFolder as QuestionFolder, SvgQuestionMessage as QuestionMessage, SvgQuestionPadlock as QuestionPadlock, SvgRackPadlock as RackPadlock, SvgRadio as Radio, SvgRadioactive as Radioactive, SvgRain as Rain, SvgRainCloud as RainCloud, SvgRainDropMoon as RainDropMoon, SvgRainDropSun as RainDropSun, SvgRainDrops as RainDrops, SvgRainStorm as RainStorm, SvgRainUmbrella as RainUmbrella, SvgRainbow as Rainbow, SvgRaining as Raining, SvgRainingDay as RainingDay, SvgRainingNight as RainingNight, SvgRamMemory as RamMemory, SvgRamStorage as RamStorage, SvgRealEstateBuilding as RealEstateBuilding, SvgReceiptDollar as ReceiptDollar, SvgReceiptLines as ReceiptLines, SvgReceiptList as ReceiptList, SvgRecord as Record, SvgRecordChat as RecordChat, SvgRecordCircle as RecordCircle, SvgRecordMessage as RecordMessage, SvgRecordSquare as RecordSquare, SvgRecycleArrows as RecycleArrows, SvgRecycleBag as RecycleBag, SvgRecycleContainer as RecycleContainer, SvgRecycleElectricity as RecycleElectricity, SvgRecycleShoppingBag as RecycleShoppingBag, SvgRecycleTag as RecycleTag, SvgRecycleTrash as RecycleTrash, SvgRecycleWater as RecycleWater, SvgRedCarpet as RedCarpet, SvgReddit as Reddit, SvgReflectionHorizontal as ReflectionHorizontal, SvgReflectionVertical as ReflectionVertical, SvgRefreshAccountArrows as RefreshAccountArrows, SvgRefreshChat as RefreshChat, SvgRefreshDimension as RefreshDimension, SvgRefreshEnvelopeArrow as RefreshEnvelopeArrow, SvgRefreshMessage as RefreshMessage, SvgRemoteControl as RemoteControl, SvgRentHouse as RentHouse, SvgReplay as Replay, SvgRestaurant as Restaurant, SvgRestaurantForkKnife as RestaurantForkKnife, SvgRibbonBow as RibbonBow, SvgRibs as Ribs, SvgRiceBowl as RiceBowl, SvgRightOrientation as RightOrientation, SvgRoadSign as RoadSign, SvgRock as Rock, SvgRocker as Rocker, SvgRocket as Rocket, SvgRocketLaunch as RocketLaunch, SvgRollGym as RollGym, SvgRollerBrush as RollerBrush, SvgRollerBrushTool as RollerBrushTool, SvgRoomDivider as RoomDivider, SvgRoomKey as RoomKey, SvgRoomService as RoomService, SvgRoomServiceTrolley as RoomServiceTrolley, SvgRose as Rose, SvgRotateLeft as RotateLeft, SvgRotateRight as RotateRight, SvgRotationArrows as RotationArrows, SvgRoundTestTube as RoundTestTube, SvgRoundedWindow as RoundedWindow, SvgRoute as Route, SvgRouteDestination as RouteDestination, SvgRouter as Router, SvgRouterSecurity as RouterSecurity, SvgRssSquare as RssSquare, SvgRuler as Ruler, SvgRulerCombined as RulerCombined, SvgRulerTool as RulerTool, SvgRulers as Rulers, SvgSafe as Safe, SvgSafetyGlasses as SafetyGlasses, SvgSafetyGlove as SafetyGlove, SvgSafetyGoggles as SafetyGoggles, SvgSafetyVest as SafetyVest, SvgSagradaFamilia as SagradaFamilia, SvgSailBoat as SailBoat, SvgSailingBoat as SailingBoat, SvgSander as Sander, SvgSandwich as Sandwich, SvgSanitizerBottle as SanitizerBottle, SvgSantaBag as SantaBag, SvgSantaClaus as SantaClaus, SvgSantaHat as SantaHat, SvgSantaSleigh as SantaSleigh, SvgSatellite as Satellite, SvgSatelliteDish as SatelliteDish, SvgSatelliteSignal as SatelliteSignal, SvgSauce as Sauce, SvgSauceBottle as SauceBottle, SvgSausage as Sausage, SvgSaw as Saw, SvgSawBlade as SawBlade, SvgScale as Scale, SvgScaleWeigh as ScaleWeigh, SvgScarf as Scarf, SvgScarfFashion as ScarfFashion, SvgSchoolBell as SchoolBell, SvgSchoolBus as SchoolBus, SvgSchoolChairDesk as SchoolChairDesk, SvgScience as Science, SvgScienceAtoms as ScienceAtoms, SvgScienceBook as ScienceBook, SvgScienctific as Scienctific, SvgScientistMan as ScientistMan, SvgScientistWoman as ScientistWoman, SvgScissor as Scissor, SvgScissorPliers as ScissorPliers, SvgScissors as Scissors, SvgScrewNail as ScrewNail, SvgScrewdriver as Screwdriver, SvgSea as Sea, SvgSeaCabin as SeaCabin, SvgSearchChat as SearchChat, SvgSearchEnvelope as SearchEnvelope, SvgSearchFlights as SearchFlights, SvgSearchMap as SearchMap, SvgSearchMessage as SearchMessage, SvgSearchVrGlasses as SearchVrGlasses, SvgSeashell as Seashell, SvgSeatChair as SeatChair, SvgSecurityCamera as SecurityCamera, SvgSecurityHelmet as SecurityHelmet, SvgSegway as Segway, SvgSensor as Sensor, SvgServer as Server, SvgServerCloud as ServerCloud, SvgServerConnect as ServerConnect, SvgServerDatabase as ServerDatabase, SvgServerInterconnection as ServerInterconnection, SvgServerShare as ServerShare, SvgServerShield as ServerShield, SvgServiceBell as ServiceBell, SvgServiceDesk as ServiceDesk, SvgSettingsChat as SettingsChat, SvgSettingsLaptop as SettingsLaptop, SvgSettingsMessage as SettingsMessage, SvgSettingsMonitor as SettingsMonitor, SvgSettingsShield as SettingsShield, SvgSettingsVrGlasses as SettingsVrGlasses, SvgShape as Shape, SvgShare as Share, SvgShareChat as ShareChat, SvgShareEnvelope as ShareEnvelope, SvgShareMessage as ShareMessage, SvgShareWebsite as ShareWebsite, SvgSharpener as Sharpener, SvgShelf as Shelf, SvgShieldChat as ShieldChat, SvgShieldDocument as ShieldDocument, SvgShieldEnvelope as ShieldEnvelope, SvgShieldExclamation as ShieldExclamation, SvgShieldFile as ShieldFile, SvgShieldKeyhole as ShieldKeyhole, SvgShieldLaptop as ShieldLaptop, SvgShieldMessage as ShieldMessage, SvgShieldMonitor as ShieldMonitor, SvgShieldNetwork as ShieldNetwork, SvgShieldServer as ShieldServer, SvgShieldWebsite as ShieldWebsite, SvgShip as Ship, SvgShipCruise as ShipCruise, SvgShippingPackage as ShippingPackage, SvgShop as Shop, SvgShopBag as ShopBag, SvgShopCart as ShopCart, SvgShoppingBag as ShoppingBag, SvgShoppingBagRecycle as ShoppingBagRecycle, SvgShoppingBasket as ShoppingBasket, SvgShoppingCart as ShoppingCart, SvgShoppingCartHouse as ShoppingCartHouse, SvgShorts as Shorts, SvgShovel as Shovel, SvgShovelTool as ShovelTool, SvgShower as Shower, SvgShowerBath as ShowerBath, SvgShowerBathroom as ShowerBathroom, SvgShowerCurtain as ShowerCurtain, SvgShowerFacilities as ShowerFacilities, SvgShowerhead as Showerhead, SvgShredFile as ShredFile, SvgShuffle as Shuffle, SvgSideViewVr as SideViewVr, SvgSignDollar as SignDollar, SvgSignYen as SignYen, SvgSignYenCircle as SignYenCircle, SvgSignal as Signal, SvgSignalChat as SignalChat, SvgSignalMessage as SignalMessage, SvgSingleBed as SingleBed, SvgSink as Sink, SvgSiren as Siren, SvgSizeText as SizeText, SvgSkeleton as Skeleton, SvgSki as Ski, SvgSkiLift as SkiLift, SvgSkull as Skull, SvgSkullDocument as SkullDocument, SvgSkullEnvelope as SkullEnvelope, SvgSkullLaptop as SkullLaptop, SvgSkullMessage as SkullMessage, SvgSkullMonitor as SkullMonitor, SvgSkype as Skype, SvgSleepingBag as SleepingBag, SvgSleigh as Sleigh, SvgSliders as Sliders, SvgSlidersLines as SlidersLines, SvgSlidersUp as SlidersUp, SvgSlidersUpLines as SlidersUpLines, SvgSlippers as Slippers, SvgSmartphoneCharging as SmartphoneCharging, SvgSmartphoneLocation as SmartphoneLocation, SvgSmartphoneLocationPin as SmartphoneLocationPin, SvgSmartphonePlay as SmartphonePlay, SvgSmartphoneRotation as SmartphoneRotation, SvgSmartphoneVirtualReality as SmartphoneVirtualReality, SvgSmartwatch as Smartwatch, SvgSmartwatchWireless as SmartwatchWireless, SvgSnack as Snack, SvgSnapchat as Snapchat, SvgSnorkling as Snorkling, SvgSnowBoot as SnowBoot, SvgSnowCap as SnowCap, SvgSnowCloud as SnowCloud, SvgSnowGlobeDecoration as SnowGlobeDecoration, SvgSnowGloves as SnowGloves, SvgSnowGoggles as SnowGoggles, SvgSnowHat as SnowHat, SvgSnowSkate as SnowSkate, SvgSnowSki as SnowSki, SvgSnowboard as Snowboard, SvgSnowflakeDecor as SnowflakeDecor, SvgSnowflakeDecoration as SnowflakeDecoration, SvgSnowglobe as Snowglobe, SvgSnowing as Snowing, SvgSnowingSnowflakes as SnowingSnowflakes, SvgSnowman as Snowman, SvgSnowmanHat as SnowmanHat, SvgSocial9Gag as Social9Gag, SvgSocialLogo as SocialLogo, SvgSocialMedia as SocialMedia, SvgSocialNetwork as SocialNetwork, SvgSock as Sock, SvgSocketElectricity as SocketElectricity, SvgSodaCan as SodaCan, SvgSodaDrink as SodaDrink, SvgSolarHouse as SolarHouse, SvgSolarPanelCharge as SolarPanelCharge, SvgSolarPanelSun as SolarPanelSun, SvgSolarPower as SolarPower, SvgSoldHouse as SoldHouse, SvgSound as Sound, SvgSoundFile as SoundFile, SvgSoundLines as SoundLines, SvgSoundProof as SoundProof, SvgSoundcloud as Soundcloud, SvgSoupBowl as SoupBowl, SvgSpaceNeedle as SpaceNeedle, SvgSpatchulaTool as SpatchulaTool, SvgSpeaker as Speaker, SvgSpeakers as Speakers, SvgSpeech as Speech, SvgSpeedBoat as SpeedBoat, SvgSpeedTrain as SpeedTrain, SvgSperm as Sperm, SvgSphinx as Sphinx, SvgSpine as Spine, SvgSpiral as Spiral, SvgSplitFile as SplitFile, SvgSportBike as SportBike, SvgSportsCar as SportsCar, SvgSportsShoe as SportsShoe, SvgSpotify as Spotify, SvgSquareCenter as SquareCenter, SvgSquareLeft as SquareLeft, SvgSquareMirror as SquareMirror, SvgSquareRight as SquareRight, SvgStBasi as StBasi, SvgStairs as Stairs, SvgStairsUpDown as StairsUpDown, SvgStamp as Stamp, SvgStandCamera as StandCamera, SvgStandingClock as StandingClock, SvgStapler as Stapler, SvgStar as Star, SvgStarAward as StarAward, SvgStarBookmark as StarBookmark, SvgStarChat as StarChat, SvgStarClipboard as StarClipboard, SvgStarComment as StarComment, SvgStarCommentRating as StarCommentRating, SvgStarDecor as StarDecor, SvgStarDecoration as StarDecoration, SvgStarEnvelope as StarEnvelope, SvgStarFile as StarFile, SvgStarFolder as StarFolder, SvgStarMessage as StarMessage, SvgStarMessages as StarMessages, SvgStarOrnament as StarOrnament, SvgStarSquare as StarSquare, SvgStarTicket as StarTicket, SvgStarTicketCoupon as StarTicketCoupon, SvgStarTopper as StarTopper, SvgStatistics as Statistics, SvgSterlingCircle as SterlingCircle, SvgSterlingSign as SterlingSign, SvgStethoscope as Stethoscope, SvgStocking as Stocking, SvgStockings as Stockings, SvgStomach as Stomach, SvgStonehedge as Stonehedge, SvgStool as Stool, SvgStop as Stop, SvgStopCircle as StopCircle, SvgStopwatch as Stopwatch, SvgStorage as Storage, SvgStorageCard as StorageCard, SvgStore as Store, SvgStreaming as Streaming, SvgStreetCone as StreetCone, SvgStreetDrill as StreetDrill, SvgStrength as Strength, SvgStretcher as Stretcher, SvgStringLights as StringLights, SvgStrongRain as StrongRain, SvgStrongRainNight as StrongRainNight, SvgStrongRainingDay as StrongRainingDay, SvgStrongWind as StrongWind, SvgStrongWindCloud as StrongWindCloud, SvgStrongWindCloudDay as StrongWindCloudDay, SvgStrongWindCloudNight as StrongWindCloudNight, SvgStrongWindHail as StrongWindHail, SvgStrongWindRainCloud as StrongWindRainCloud, SvgStrongWindRainDrop as StrongWindRainDrop, SvgSubmarine as Submarine, SvgSubmarineTravel as SubmarineTravel, SvgSuitcase as Suitcase, SvgSuitcaseLuggage as SuitcaseLuggage, SvgSuitcaseTransport as SuitcaseTransport, SvgSunMoon as SunMoon, SvgSunOversea as SunOversea, SvgSunflower as Sunflower, SvgSunny as Sunny, SvgSunrise as Sunrise, SvgSunriseArrowUp as SunriseArrowUp, SvgSunsetArrowDown as SunsetArrowDown, SvgSupplement as Supplement, SvgSupportRibbon as SupportRibbon, SvgSurfboard as Surfboard, SvgSurfingVan as SurfingVan, SvgSushiRiceBall as SushiRiceBall, SvgSushiRoll as SushiRoll, SvgSwimShorts as SwimShorts, SvgSwimmingPool as SwimmingPool, SvgSwimmingPoolLadder as SwimmingPoolLadder, SvgTableDining as TableDining, SvgTableDrawers as TableDrawers, SvgTables as Tables, SvgTablet as Tablet, SvgTabletPen as TabletPen, SvgTaco as Taco, SvgTag as Tag, SvgTajMahal as TajMahal, SvgTank as Tank, SvgTape as Tape, SvgTapeMeasure as TapeMeasure, SvgTarget as Target, SvgTargetBug as TargetBug, SvgTargetBullseye as TargetBullseye, SvgTargetUser as TargetUser, SvgTaxi as Taxi, SvgTaxiFront as TaxiFront, SvgTaxiService as TaxiService, SvgTeaCoffee as TeaCoffee, SvgTeaMug as TeaMug, SvgTeacherDesk as TeacherDesk, SvgTeamGroup as TeamGroup, SvgTelephone as Telephone, SvgTelescope as Telescope, SvgTerrace as Terrace, SvgTerraceChair as TerraceChair, SvgTestChemical as TestChemical, SvgTestTube as TestTube, SvgTestTubeContainer as TestTubeContainer, SvgTestTubeExperiment as TestTubeExperiment, SvgTestTubeLabs as TestTubeLabs, SvgTestTubeSettings as TestTubeSettings, SvgTestTubeStand as TestTubeStand, SvgTestTubeTransfer as TestTubeTransfer, SvgTestTubes as TestTubes, SvgTestTubesChemical as TestTubesChemical, SvgTestTubesLab as TestTubesLab, SvgTestVial as TestVial, SvgTetris as Tetris, SvgText as Text, SvgTextDirectionLeft as TextDirectionLeft, SvgTextDirectionRight as TextDirectionRight, SvgTextSize as TextSize, SvgTextbook as Textbook, SvgThaiLandmark as ThaiLandmark, SvgThermometer as Thermometer, SvgThermometerAlert as ThermometerAlert, SvgThermometerMeasureTemp as ThermometerMeasureTemp, SvgThermometerTemp as ThermometerTemp, SvgThreeFinger as ThreeFinger, SvgThreeLine as ThreeLine, SvgThumbsDown as ThumbsDown, SvgThumbsUp as ThumbsUp, SvgTicket as Ticket, SvgTicketCheck as TicketCheck, SvgTicketCoupon as TicketCoupon, SvgTicketPlay as TicketPlay, SvgTicketPlus as TicketPlus, SvgTicketStar as TicketStar, SvgTicketXmark as TicketXmark, SvgTie as Tie, SvgTiktok as Tiktok, SvgTimeMovie as TimeMovie, SvgTimer as Timer, SvgTimerMovie as TimerMovie, SvgTinCan as TinCan, SvgTinder as Tinder, SvgToastBread as ToastBread, SvgToastBreadLoaf as ToastBreadLoaf, SvgToilet as Toilet, SvgToiletBathroom as ToiletBathroom, SvgToiletPaper as ToiletPaper, SvgTongue as Tongue, SvgToolNail as ToolNail, SvgToolbox as Toolbox, SvgTools as Tools, SvgTooth as Tooth, SvgToothBrushPaste as ToothBrushPaste, SvgTopTower as TopTower, SvgTopVerticalLayout as TopVerticalLayout, SvgTorch as Torch, SvgTornado as Tornado, SvgTornadoWeather as TornadoWeather, SvgTouchGesture as TouchGesture, SvgTowel as Towel, SvgTowelRack as TowelRack, SvgTowerBridge as TowerBridge, SvgTowerEiffel as TowerEiffel, SvgTowerLandmark as TowerLandmark, SvgTowersLandmark as TowersLandmark, SvgTractor as Tractor, SvgTrain as Train, SvgTrainLocomotive as TrainLocomotive, SvgTrainTransport as TrainTransport, SvgTrainTransportation as TrainTransportation, SvgTrainTravel as TrainTravel, SvgTrainTunnel as TrainTunnel, SvgTrainer as Trainer, SvgTramTransport as TramTransport, SvgTransferCloud as TransferCloud, SvgTransportTruck as TransportTruck, SvgTrash as Trash, SvgTrashCan as TrashCan, SvgTravelBus as TravelBus, SvgTravelCar as TravelCar, SvgTravelLuggage as TravelLuggage, SvgTreadmill as Treadmill, SvgTreadmillRunning as TreadmillRunning, SvgTree as Tree, SvgTreeCalendar as TreeCalendar, SvgTreeLeafNature as TreeLeafNature, SvgTreeLight as TreeLight, SvgTreeSnowglobe as TreeSnowglobe, SvgTriangleExclamation as TriangleExclamation, SvgTrimPathfinder as TrimPathfinder, SvgTropicalHoliday as TropicalHoliday, SvgTty as Tty, SvgTumblr as Tumblr, SvgTurkey as Turkey, SvgTurkeyDinner as TurkeyDinner, SvgTurkeyLeg as TurkeyLeg, SvgTurnip as Turnip, SvgTv as Tv, SvgTwitch as Twitch, SvgTwitter as Twitter, SvgTwoFinger as TwoFinger, SvgTwoFingerPoint as TwoFingerPoint, SvgTwoLine as TwoLine, SvgTypewriter as Typewriter, SvgUfo as Ufo, SvgUmbrella as Umbrella, SvgUmbrellaProtection as UmbrellaProtection, SvgUmbrellaSafety as UmbrellaSafety, SvgUnderline as Underline, SvgUnlockKeyhole as UnlockKeyhole, SvgUnlocked as Unlocked, SvgUpArrowFromBracket as UpArrowFromBracket, SvgUpDownMove as UpDownMove, SvgUpMove as UpMove, SvgUpOrientation as UpOrientation, SvgUpstairs as Upstairs, SvgUpwardEscalator as UpwardEscalator, SvgUrinal as Urinal, SvgUsbCable as UsbCable, SvgUsbPlug as UsbPlug, SvgUsbPort as UsbPort, SvgUsbStick as UsbStick, SvgUser as User, SvgUserArrows as UserArrows, SvgUserChat as UserChat, SvgUserChats as UserChats, SvgUserCheck as UserCheck, SvgUserClipboard as UserClipboard, SvgUserComment as UserComment, SvgUserFile as UserFile, SvgUserFolder as UserFolder, SvgUserGear as UserGear, SvgUserHierarchy as UserHierarchy, SvgUserKey as UserKey, SvgUserMessage as UserMessage, SvgUserMinus as UserMinus, SvgUserPlus as UserPlus, SvgUserTarget as UserTarget, SvgUserXmark as UserXmark, SvgUsers as Users, SvgUsersArrows as UsersArrows, SvgUterus as Uterus, SvgVaccine as Vaccine, SvgVan as Van, SvgVanCar as VanCar, SvgVanTransportation as VanTransportation, SvgVanTruck as VanTruck, SvgVault as Vault, SvgVerticalCenter as VerticalCenter, SvgVerticalLayout as VerticalLayout, SvgVerticalLineChart as VerticalLineChart, SvgVerticalSlidersDots as VerticalSlidersDots, SvgVerticalSlidersLines as VerticalSlidersLines, SvgVespa as Vespa, SvgVespaFront as VespaFront, SvgVialStand as VialStand, SvgVialsStand as VialsStand, SvgViber as Viber, SvgVideoCamera as VideoCamera, SvgVideoChat as VideoChat, SvgVideoClip as VideoClip, SvgVideoMessage as VideoMessage, SvgVideoMonitor as VideoMonitor, SvgVideoPlayerWebsite as VideoPlayerWebsite, SvgVideoRecorder as VideoRecorder, SvgViewArrow as ViewArrow, SvgViewMonitor as ViewMonitor, SvgViewPadlock as ViewPadlock, SvgViewVr as ViewVr, SvgViewWindow as ViewWindow, SvgVimeo as Vimeo, SvgVintageBike as VintageBike, SvgVirtualGlasses as VirtualGlasses, SvgVirtualReality as VirtualReality, SvgVirtualRealityDimension as VirtualRealityDimension, SvgVirtualRealityEye as VirtualRealityEye, SvgVirtualRealityGlasses as VirtualRealityGlasses, SvgVirtualRealityImage as VirtualRealityImage, SvgVirtualRealityPlay as VirtualRealityPlay, SvgVirtualRealityView as VirtualRealityView, SvgVirtualVrGlasses as VirtualVrGlasses, SvgVirus as Virus, SvgVirusMedical as VirusMedical, SvgVision as Vision, SvgVk as Vk, SvgVoiceEnvelope as VoiceEnvelope, SvgVoiceFile as VoiceFile, SvgVoiceFolder as VoiceFolder, SvgVolume as Volume, SvgVrArrows as VrArrows, SvgVrGlasses as VrGlasses, SvgVrGlassesScience as VrGlassesScience, SvgVrGlassesSettings as VrGlassesSettings, SvgVrGlassesWifi as VrGlassesWifi, SvgVrGoggles as VrGoggles, SvgVrSplit as VrSplit, SvgWalkieTalkie as WalkieTalkie, SvgWall as Wall, SvgWallet as Wallet, SvgWardrobeMirror as WardrobeMirror, SvgWarning as Warning, SvgWashingMachine as WashingMachine, SvgWashingtonBuilding as WashingtonBuilding, SvgWashingtonMonument as WashingtonMonument, SvgWater as Water, SvgWaterBoiler as WaterBoiler, SvgWaterBottle as WaterBottle, SvgWaterCan as WaterCan, SvgWaterContainer as WaterContainer, SvgWaterDrop as WaterDrop, SvgWaterGlass as WaterGlass, SvgWaterHeater as WaterHeater, SvgWaterLightbulb as WaterLightbulb, SvgWaterLiquid as WaterLiquid, SvgWaterRecycle as WaterRecycle, SvgWaterScooter as WaterScooter, SvgWaterTap as WaterTap, SvgWaveform as Waveform, SvgWe as We, SvgWebcam as Webcam, SvgWebsite as Website, SvgWebsiteAd as WebsiteAd, SvgWebsiteClip as WebsiteClip, SvgWechat as Wechat, SvgWeddingCake as WeddingCake, SvgWeightLifting as WeightLifting, SvgWeightLoss as WeightLoss, SvgWeightScale as WeightScale, SvgWeightScales as WeightScales, SvgWeightsChair as WeightsChair, SvgWeightsGym as WeightsGym, SvgWhatsapp as Whatsapp, SvgWheat as Wheat, SvgWheatHarvest as WheatHarvest, SvgWheelbarrow as Wheelbarrow, SvgWheelbarrowWheel as WheelbarrowWheel, SvgWheelchair as Wheelchair, SvgWhiteHouse as WhiteHouse, SvgWhiteboard as Whiteboard, SvgWifi as Wifi, SvgWifiCall as WifiCall, SvgWifiChat as WifiChat, SvgWifiClipboard as WifiClipboard, SvgWifiDrawingTablet as WifiDrawingTablet, SvgWifiFile as WifiFile, SvgWifiFolder as WifiFolder, SvgWifiHouse as WifiHouse, SvgWifiInternet as WifiInternet, SvgWifiMessage as WifiMessage, SvgWifiModem as WifiModem, SvgWifiMonitor as WifiMonitor, SvgWifiVrGlasses as WifiVrGlasses, SvgWindStrength as WindStrength, SvgWindmil as Windmil, SvgWindmill as Windmill, SvgWindow as Window, SvgWindowCurtains as WindowCurtains, SvgWindowPadlock as WindowPadlock, SvgWindowSeat as WindowSeat, SvgWindowShield as WindowShield, SvgWineBottle as WineBottle, SvgWineBottleGlass as WineBottleGlass, SvgWineBottleHeart as WineBottleHeart, SvgWineGlass as WineGlass, SvgWineGlasses as WineGlasses, SvgWinterCalendar as WinterCalendar, SvgWinterCold as WinterCold, SvgWinterFreeze as WinterFreeze, SvgWinterHatFashion as WinterHatFashion, SvgWinterJacket as WinterJacket, SvgWinterJumper as WinterJumper, SvgWinterMessage as WinterMessage, SvgWinterScarf as WinterScarf, SvgWinterShoppingBag as WinterShoppingBag, SvgWinterShovel as WinterShovel, SvgWinterSleigh as WinterSleigh, SvgWinterSnow as WinterSnow, SvgWinterSnowCap as WinterSnowCap, SvgWinterSnowflake as WinterSnowflake, SvgWirelessKeyboard as WirelessKeyboard, SvgWirelessMouse as WirelessMouse, SvgWirelessPadlock as WirelessPadlock, SvgWirelessRouter as WirelessRouter, SvgWirelessSmartwatch as WirelessSmartwatch, SvgWishBone as WishBone, SvgWithdrawDollarSign as WithdrawDollarSign, SvgWomanVrGlasses as WomanVrGlasses, SvgWoodLog as WoodLog, SvgWordpress as Wordpress, SvgWorkoutDay as WorkoutDay, SvgWorkoutList as WorkoutList, SvgWorkoutTop as WorkoutTop, SvgWorldLandmark as WorldLandmark, SvgWreath as Wreath, SvgWreathBell as WreathBell, SvgWreathBow as WreathBow, SvgWrench as Wrench, SvgWrenchClamp as WrenchClamp, SvgWriteBook as WriteBook, SvgWritePaper as WritePaper, SvgXRay as XRay, SvgXmarkChat as XmarkChat, SvgXmarkChats as XmarkChats, SvgXmarkCircle as XmarkCircle, SvgXmarkClipboard as XmarkClipboard, SvgXmarkComment as XmarkComment, SvgXmarkFile as XmarkFile, SvgXmarkFolder as XmarkFolder, SvgXmarkMessage as XmarkMessage, SvgXmarkPadlock as XmarkPadlock, SvgXmarkPapertray as XmarkPapertray, SvgXmarkShield as XmarkShield, SvgXmarkShieldServer as XmarkShieldServer, SvgXmarkTestTube as XmarkTestTube, SvgXmarkTicket as XmarkTicket, SvgXmarkWebsite as XmarkWebsite, SvgYahoo as Yahoo, SvgYenSign as YenSign, SvgYenSignCircle as YenSignCircle, SvgYogaMatt as YogaMatt, SvgYoutube as Youtube, SvgZeplin as Zeplin, SvgZipFile as ZipFile, SvgZoomIn as ZoomIn, SvgZoomOut as ZoomOut };
